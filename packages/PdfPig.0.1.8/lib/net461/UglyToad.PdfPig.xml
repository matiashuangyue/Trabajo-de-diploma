<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UglyToad.PdfPig</name>
    </assembly>
    <members>
        <member name="T:UglyToad.PdfPig.AcroForms.AcroForm">
            <summary>
            A collection of interactive fields for gathering data from a user through dropdowns, textboxes, checkboxes, etc.
            Each <see cref="T:UglyToad.PdfPig.PdfDocument"/> with form functionality contains a single <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/> spread across one or more pages.
            </summary>
            <remarks>
            The name AcroForm distinguishes this from the other form type called form XObjects which act as templates for repeated sections of content.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.AcroForm.Dictionary">
            <summary>
            The raw PDF dictionary which is the root form object.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.AcroForm.SignatureFlags">
            <summary>
            Document-level characteristics related to signature fields.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.AcroForm.NeedAppearances">
            <summary>
            Whether all widget annotations need appearance dictionaries and streams.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.AcroForm.Fields">
            <summary>
            All root fields in this form.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroForm.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.AcroForms.SignatureFlags,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Core.IndirectReference,UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroForm.GetFieldsForPage(System.Int32)">
            <summary>
            Get the set of fields which appear on the given page number.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroForm.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.AcroFormExtensions">
            <summary>
            Extensions for AcroForm.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroFormExtensions.GetFields(UglyToad.PdfPig.AcroForms.AcroForm)">
            <summary>
            Get fields containing data in form. 
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroFormExtensions.GetFields(UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase)">
            <summary>
            Get fields containing data which are children of field. 
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroFormExtensions.GetFieldValue(UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase)">
            <summary>
            Get string values of field.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.AcroFormFactory">
            <summary>
            Extracts the <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/> from the document, if available.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.AcroFormFactory.GetAcroForm(UglyToad.PdfPig.Content.Catalog)">
            <summary>
            Retrieve the <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/> from the document, if applicable.
            </summary>
            <returns>The <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/> if the document contains one.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags">
            <summary>
            Flags specifying various characteristics of a button type field in an <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.ReadOnly">
            <summary>
            The user may not change the value of the field.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.Required">
            <summary>
            The field must have a value before the form can be submitted.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.NoExport">
            <summary>
            Must not be exported by the submit form action.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.NoToggleToOff">
            <summary>
            For radio buttons, one radio button must be set at all times.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.Radio">
            <summary>
            The field is a set of radio buttons.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.PushButton">
            <summary>
            The field is a push button.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags.RadiosInUnison">
            <summary>
            For radio buttons a group of radio buttons will toggle on/off at the same time based on their initial value.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxesField">
            <inheritdoc />
            <summary>
            A set of related checkboxes.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxesField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxesField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField">
            <inheritdoc />
            <summary>
            A checkbox which may be toggled on or off.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField.Flags">
            <summary>
            The <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags"/> which define the behaviour of this button type.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField.CurrentValue">
            <summary>
            The current value of this checkbox.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField.IsChecked">
            <summary>
            Whether this checkbox is currently checked/on.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,UglyToad.PdfPig.Tokens.NameToken,System.Boolean,System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroCheckboxField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags">
            <summary>
            Flags specifying various characteristics of a choice type field in an <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.ReadOnly">
            <summary>
            The user may not change the value of the field.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Required">
            <summary>
            The field must have a value before the form can be submitted.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.NoExport">
            <summary>
            Must not be exported by the submit form action.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Combo">
            <summary>
            The field is a combo box.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Edit">
            <summary>
            The combo box includes an editable text box. <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Combo"/> must be set.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Sort">
            <summary>
            The options should be sorted alphabetically, this should be ignored by viewer applications.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.MultiSelect">
            <summary>
            The field allows multiple options to be selected.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.DoNotSpellCheck">
            <summary>
            The text entered in the field is not spell checked. <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Combo"/> and <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.Edit"/> must be set.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags.CommitOnSelectionChange">
            <summary>
            Any associated field action is fired when the selection is changed rather than on losing focus.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption">
            <summary>
            An option in a choice field, either <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField"/> or <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.Index">
            <summary>
            The index of this option in the array.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.IsSelected">
            <summary>
            Whether this option is selected.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.Name">
            <summary>
            The text of the option.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.ExportValue">
            <summary>
            The value of the option when the form is exported.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.HasExportValue">
            <summary>
            Whether the field defined an export value for this option.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.#ctor(System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField">
            <inheritdoc />
            <summary>
            A combo box consisting of a drop-down list optionally accompanied by an editable text box in which the
            user can type a value other than the predefined choices.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField.Flags">
            <summary>
            The flags specifying the behaviour of this field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField.Options">
            <summary>
            The options to be presented to the user.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField.SelectedOptions">
            <summary>
            The names of any currently selected options.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField.SelectedOptionIndices">
            <summary>
            For multiple select lists with duplicate names gives the indices of the selected options.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.Int32},System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroComboBoxField" />.
            </summary>
            <param name="dictionary">The dictionary for this field.</param>
            <param name="fieldType">The type of this field, must be <see cref="F:UglyToad.PdfPig.Tokens.NameToken.Ch" />.</param>
            <param name="fieldFlags">The flags specifying behaviour for this field.</param>
            <param name="information">Additional information for this field.</param>
            <param name="options">The options in this field.</param>
            <param name="selectedOptionIndices">The indices of the selected options where there are multiple with the same name.</param>
            <param name="selectedOptions">The names of the selected options.</param>
            <param name="pageNumber">The number of the page this field appears on.</param>
            <param name="bounds">The location of this field on the page.</param>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase">
            <summary>
            A field in an interactive <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.Dictionary">
            <summary>
            The raw PDF dictionary for this field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.RawFieldType">
            <summary>
            The <see cref="T:System.String"/> representing the type of this field in PDF format.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.FieldType">
            <summary>
            The actual <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType"/> represented by this field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.FieldFlags">
            <summary>
            Specifies various characteristics of the field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.Information">
            <summary>
            The optional information common to all types of field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.PageNumber">
            <summary>
            The page number of the page containing this form field if known.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.Bounds">
            <summary>
            The placement rectangle of this form field on the page given by <see cref="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.PageNumber"/> if known.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,System.UInt32,UglyToad.PdfPig.AcroForms.Fields.AcroFieldType,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase"/>.
            </summary>
            <param name="dictionary">The dictionary for this field.</param>
            <param name="rawFieldType">The PDF string type of this field.</param>
            <param name="fieldFlags">The flags specifying behaviour for this field.</param>
            <param name="fieldType">The type of this field.</param>
            <param name="information">Additional information for this field.</param>
            <param name="pageNumber">The number of the page this field appears on.</param>
            <param name="bounds">The location of this field on the page.</param>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation">
            <summary>
            Information from the field dictionary which is common across all field types.
            All of this information is optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.Parent">
            <summary>
            The reference to the field which is the parent of this one, if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.PartialName">
            <summary>
            The partial field name for this field. The fully qualified field name is the
            period '.' joined name of all parents' partial names and this field's partial name.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.AlternateName">
            <summary>
            The alternate field name to be used instead of the fully qualified field name where
            the field is being identified on the user interface or by screen readers.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.MappingName">
            <summary>
            The mapping name used when exporting form field data from the document.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.#ctor(System.Nullable{UglyToad.PdfPig.Core.IndirectReference},System.String,System.String,System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType">
            <summary>
            Indicates the type of field for a <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.PushButton">
            <summary>
            A button that immediately to user input without retaining state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.Checkboxes">
            <summary>
            A set of checkboxes.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.Checkbox">
            <summary>
            A checkbox which toggles between on and off states.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.RadioButtons">
            <summary>
            A set of radio buttons.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.RadioButton">
            <summary>
            A single radio button, as part of a set or on its own.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.Text">
            <summary>
            A textbox allowing user input through the keyboard.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.ComboBox">
            <summary>
            A dropdown list of options with optional user-editable textbox.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.ListBox">
            <summary>
            A list of options for the user to select from.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.Signature">
            <summary>
            A field containing a digital signature.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroFieldType.Unknown">
            <summary>
            The field type wasn't specified.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField">
            <inheritdoc />
            <summary>
            A scrollable list box field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.Flags">
            <summary>
            The flags specifying the behaviour of this field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.Options">
            <summary>
            The options to be presented to the user.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.SelectedOptions">
            <summary>
            The names of any currently selected options.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.SelectedOptionIndices">
            <summary>
            For multiple select lists with duplicate names gives the indices of the selected options.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.TopIndex">
            <summary>
            For scrollable list boxes gives the index of the first visible option.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.SupportsMultiSelect">
            <summary>
            Whether the field allows multiple selections.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroChoiceFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.AcroForms.Fields.AcroChoiceOption},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroListBoxField"/>.
            </summary>
            <param name="dictionary">The dictionary for this field.</param>
            <param name="fieldType">The type of this field, must be <see cref="F:UglyToad.PdfPig.Tokens.NameToken.Ch"/>.</param>
            <param name="fieldFlags">The flags specifying behaviour for this field.</param>
            <param name="information">Additional information for this field.</param>
            <param name="options">The options in this field.</param>
            <param name="selectedOptionIndices">The indices of the selected options where there are multiple with the same name.</param>
            <param name="topIndex">The first visible option index.</param>
            <param name="selectedOptions">The names of the selected options.</param>
            <param name="pageNumber">The number of the page this field appears on.</param>
            <param name="bounds">The location of this field on the page.</param>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroNonTerminalField">
            <inheritdoc />
            <summary>
            A non-leaf field in the form's structure.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroNonTerminalField.Children">
            <summary>
            The child fields of this field.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroNonTerminalField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,System.UInt32,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,UglyToad.PdfPig.AcroForms.Fields.AcroFieldType,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroNonTerminalField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroPushButtonField">
            <inheritdoc />
            <summary>
            A push button responds immediately to user input without storing any state.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroPushButtonField.Flags">
            <summary>
            The <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags"/> which define the behaviour of this button type.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroPushButtonField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroPushButtonField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField">
            <inheritdoc />
            <summary>
            A single radio button.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField.Flags">
            <summary>
            The <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags"/> which define the behaviour of this button type.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField.CurrentValue">
            <summary>
            The current value of this radio button.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField.IsSelected">
            <summary>
            Whether the radio button is currently on/active.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},UglyToad.PdfPig.Tokens.NameToken,System.Boolean)">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonsField">
            <inheritdoc />
            <summary>
            A set of radio buttons.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonsField.Flags">
            <summary>
            The <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags"/> which define the behaviour of this button type.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonsField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroButtonFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroRadioButtonsField"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroSignatureField">
            <inheritdoc />
            <summary>
            A digital signature field.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroSignatureField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,System.UInt32,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroSignatureField" />.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroTextField">
            <inheritdoc />
            <summary>
            A text field is a box or space in which the user can enter text from the keyboard.
            The text may be restricted to a single line or may be permitted to span multiple lines.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.Flags">
            <summary>
            The flags specifying the behaviour of this field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.Value">
            <summary>
            The value of the text in this text field.
            This can be <see langword="null"/> if no value has been set.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.MaxLength">
            <summary>
            The optional maximum length of the text field.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.IsRichText">
            <summary>
            Whether the field supports rich text content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.IsMultiline">
            <summary>
            Whether the field allows multiline text.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,System.String,UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags,UglyToad.PdfPig.AcroForms.Fields.AcroFieldCommonInformation,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroTextField" />.
            </summary>
            <param name="dictionary">The dictionary for this field.</param>
            <param name="fieldType">The type of this field, must be <see cref="F:UglyToad.PdfPig.Tokens.NameToken.Ch" />.</param>
            <param name="fieldFlags">The flags specifying behaviour for this field.</param>
            <param name="information">Additional information for this field.</param>
            <param name="value">The text value.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="pageNumber">The number of the page this field appears on.</param>
            <param name="bounds">The location of this field on the page.</param>
        </member>
        <member name="M:UglyToad.PdfPig.AcroForms.Fields.AcroTextField.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags">
            <summary>
            Flags specifying various characteristics of a text type field in an <see cref="T:UglyToad.PdfPig.AcroForms.Fields.AcroFieldBase"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.ReadOnly">
            <summary>
            The user may not change the value of the field.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Required">
            <summary>
            The field must have a value before the form can be submitted.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.NoExport">
            <summary>
            Must not be exported by the submit form action.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Multiline">
            <summary>
            The field can contain multiple lines of text.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Password">
            <summary>
            The field is for a password and should not be displayed as text and should not be stored to file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.FileSelect">
            <summary>
            The field represents a file path selection.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.DoNotSpellCheck">
            <summary>
            The text entered is not spell checked.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.DoNotScroll">
            <summary>
            The field does not scroll if the text exceeds the bounds of the field.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Comb">
            <summary>
            For a text field which is not a <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Password"/>, <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.Multiline"/> or <see cref="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.FileSelect"/>
            the field text is evenly spaced by splitting into 'combs' based on the MaxLen entry in the field dictionary.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.Fields.AcroTextFieldFlags.RichText">
            <summary>
            The value of the field is a rich text string.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.AcroForms.SignatureFlags">
            <summary>
            Specifies document level characteristics for any signature fields in the document's <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.SignatureFlags.SignaturesExist">
            <summary>
            The document contains at least one signature field.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.AcroForms.SignatureFlags.AppendOnly">
            <summary>
            The document contains signatures which may be invalidated if the file is saved
            in a way which alters its previous content rather than simply appending new content.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.AbstractGoToAction">
            <summary>
            Abstract class for GoTo-type actions (GoTo, GoToE, GoToR) that have a destination
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Actions.AbstractGoToAction.Destination">
            <summary>
            Destination for the GoTo-type action
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.AbstractGoToAction.#ctor(UglyToad.PdfPig.Actions.ActionType,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.ActionProvider.TryGetAction(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Outline.NamedDestinations,UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner,UglyToad.PdfPig.Logging.ILog,UglyToad.PdfPig.Actions.PdfAction@)">
            <summary>
            Get an action (A) from dictionary. If GoTo, GoToR or GoToE, also fetches the action destination.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.ActionType">
            <summary>
            Action types (PDF reference 8.5.3)
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.GoTo">
            <summary>
            Go to a destination in the current document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.GoToR">
            <summary>
            (“Go-to remote”) Go to a destination in another document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.GoToE">
            <summary>
            (“Go-to embedded”; PDF 1.6) Go to a destination in an embedded file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Launch">
            <summary>
            Launch an application, usually to open a file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Thread">
            <summary>
            Begin reading an article thread.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.URI">
            <summary>
            Resolve a uniform resource identifier.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Sound">
            <summary>
            (PDF 1.2) Play a sound.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Movie">
            <summary>
            (PDF 1.2) Play a movie.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Hide">
            <summary>
            (PDF 1.2) Set an annotation’s Hidden flag.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Named">
            <summary>
            (PDF 1.2) Execute an action predefined by the viewer application.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.SubmitForm">
            <summary>
            (PDF 1.2) Send data to a uniform resource locator.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.ResetForm">
            <summary>
            (PDF 1.2) Set fields to their default values.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.ImportData">
            <summary>
            (PDF 1.2) Import field values from a file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.JavaScript">
            <summary>
            (PDF 1.3) Execute a JavaScript script.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.SetOCGState">
            <summary>
            (PDF 1.5) Set the states of optional content groups.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Rendition">
            <summary>
            (PDF 1.5) Controls the playing of multimedia content.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.Trans">
            <summary>
            (PDF 1.5) Updates the display of a document, using a transition dictionary.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Actions.ActionType.GoTo3DView">
            <summary>
            (PDF 1.6) Set the current view of a 3D annotation
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.GoToAction">
            <summary>
            GoTo action (with a destination inside the current document)
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.GoToAction.#ctor(UglyToad.PdfPig.Outline.Destinations.ExplicitDestination)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.GoToEAction">
            <summary>
            GoToE action (to go to a destination inside a file embedded within the PDF)
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Actions.GoToEAction.FileSpecification">
            <summary>
            File specification of the embedded file
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.GoToEAction.#ctor(UglyToad.PdfPig.Outline.Destinations.ExplicitDestination,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="destination">Destination within the embedded file</param>
            <param name="fileSpecification">Specification of the embedded file</param>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.GoToRAction">
            <summary>
            GoToR action, to go to a destination in a remote PDF
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Actions.GoToRAction.Filename">
            <summary>
            Filename of the remote PDF
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.GoToRAction.#ctor(UglyToad.PdfPig.Outline.Destinations.ExplicitDestination,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="destination">Destination within the remote PDF</param>
            <param name="filename">Filename of the remote PDF</param>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.PdfAction">
            <summary>
            Actions (PDF reference 8.5)
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Actions.PdfAction.Type">
            <summary>
            Type of action
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.PdfAction.#ctor(UglyToad.PdfPig.Actions.ActionType)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Actions.UriAction">
            <summary>
            Action to open a URI
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Actions.UriAction.Uri">
            <summary>
            URI to open
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Actions.UriAction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="uri">URI to open</param>
        </member>
        <member name="T:UglyToad.PdfPig.AdvancedPdfDocumentAccess">
            <inheritdoc />
            <summary>
            Provides access to rare or advanced features from the PDF specification.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.AdvancedPdfDocumentAccess.TryGetEmbeddedFiles(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.EmbeddedFile}@)">
            <summary>
            Get any embedded files contained in this PDF document.
            Since PDF 1.3 any external file referenced by the document may have its contents embedded within the referring PDF file, 
            allowing its contents to be stored or transmitted along with the PDF file.
            </summary>
            <param name="embeddedFiles">The set of embedded files in this document.</param>
            <returns><see langword="true"/> if this document contains more than zero embedded files, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.AdvancedPdfDocumentAccess.ReplaceIndirectObject(UglyToad.PdfPig.Core.IndirectReference,System.Func{UglyToad.PdfPig.Tokens.IToken,UglyToad.PdfPig.Tokens.IToken})">
            <summary>
            Replaces the token in an internal cache that will be returned instead of
            scanning the source PDF data for future requests.
            </summary>
            <param name="reference">The object number for the object to replace.</param>
            <param name="replacer">Func that takes existing token as input and return new token.</param>
        </member>
        <member name="M:UglyToad.PdfPig.AdvancedPdfDocumentAccess.ReplaceIndirectObject(UglyToad.PdfPig.Core.IndirectReference,UglyToad.PdfPig.Tokens.IToken)">
            <summary>
            Replaces the token in an internal cache that will be returned instead of
            scanning the source PDF data for future requests.
            </summary>
            <param name="reference">The object number for the object to replace.</param>
            <param name="replacement">Replacement token to use.</param>
        </member>
        <member name="M:UglyToad.PdfPig.AdvancedPdfDocumentAccess.Dispose">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.Annotation">
            <summary>
            An annotation on a page in a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.AnnotationDictionary">
            <summary>
            The underlying PDF dictionary which this annotation was created from.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Type">
            <summary>
            The type of this annotation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Rectangle">
            <summary>
            The rectangle in user space units specifying the location to place this annotation on the page.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Content">
            <summary>
            The annotation text, or if the annotation does not display text, a description of the annotation's contents. Optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Name">
            <summary>
            The name of this annotation which should be unique per page. Optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.ModifiedDate">
            <summary>
            The date and time the annotation was last modified, can be in any format. Optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Flags">
            <summary>
            Flags defining the appearance and behaviour of this annotation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Border">
            <summary>
            Defines the annotation's border.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.QuadPoints">
            <summary>
            Rectangles defined using QuadPoints, for <see cref="F:UglyToad.PdfPig.Annotations.AnnotationType.Link"/> these are the regions used to activate the link,
            for text markup annotations these are the text regions to apply the markup to.
            See <see cref="P:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral.Points"/> for more information regarding the order of the points.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.Action">
            <summary>
            Action for this annotation, if any (can be null)
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.HasNormalAppearance">
            <summary>
            Indicates if a normal appearance is present for this annotation
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.HasRollOverAppearance">
            <summary>
            Indicates if a roll over appearance is present for this annotation (shown when you hover over this annotation)
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.HasDownAppearance">
            <summary>
            Indicates if a down appearance is present for this annotation (shown when you click on this annotation)
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.Annotation.InReplyTo">
            <summary>
            The <see cref="T:UglyToad.PdfPig.Annotations.Annotation"/> this annotation was in reply to. Can be <see langword="null" />
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.Annotation.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Annotations.AnnotationType,UglyToad.PdfPig.Core.PdfRectangle,System.String,System.String,System.String,UglyToad.PdfPig.Annotations.AnnotationFlags,UglyToad.PdfPig.Annotations.AnnotationBorder,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral},UglyToad.PdfPig.Actions.PdfAction,UglyToad.PdfPig.Annotations.AppearanceStream,UglyToad.PdfPig.Annotations.AppearanceStream,UglyToad.PdfPig.Annotations.AppearanceStream,System.String,UglyToad.PdfPig.Annotations.Annotation)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Annotations.Annotation"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.Annotation.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.AnnotationBorder">
            <summary>
            A border for a PDF <see cref="T:UglyToad.PdfPig.Annotations.Annotation"/> object.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AnnotationBorder.Default">
            <summary>
            The default border style if not specified.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AnnotationBorder.HorizontalCornerRadius">
            <summary>
            The horizontal corner radius in user space units.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AnnotationBorder.VerticalCornerRadius">
            <summary>
            The vertical corner radius in user space units.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AnnotationBorder.BorderWidth">
            <summary>
            The width of the border in user space units.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AnnotationBorder.LineDashPattern">
            <summary>
            The dash pattern for the border lines if provided. Optional.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.AnnotationBorder.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Collections.Generic.IReadOnlyList{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Annotations.AnnotationBorder"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.AnnotationBorder.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.AnnotationFlags">
            <summary>
            Specifies characteristics of an annotation in a PDF or FDF document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Invisible">
            <summary>
            Do not display the annotation if it is not one of the standard annotation types.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Hidden">
            <summary>
            Do not display or print the annotation irrespective of type. Do not allow interaction.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Print">
            <summary>
            The annotation should be included when the document is physically printed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.NoZoom">
            <summary>
            Do not zoom/scale the annotation as the zoom of the document is changed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.NoRotate">
            <summary>
            Do not rotate the annotation as the page is rotated.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.NoView">
            <summary>
            Do not display the annotation in viewer applications as with <see cref="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Hidden"/>, however allow the annotation to be printed if <see cref="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Print"/> is set.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.ReadOnly">
            <summary>
            Allow the annotation to be displayed/printed if applicable but do not respond to user interaction, e.g. mouse clicks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Locked">
            <summary>
            Do not allow deleting the annotation or changing size/position but allow the contents to be modified.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.ToggleNoView">
            <summary>
            Invert the meaning of the <see cref="F:UglyToad.PdfPig.Annotations.AnnotationFlags.NoView"/> flag.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationFlags.LockedContents">
            <summary>
            Allow the annotation to be deleted, resized, moved or restyled but disallow changes to the annotation contents. Opposite to <see cref="F:UglyToad.PdfPig.Annotations.AnnotationFlags.Locked"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.AnnotationType">
            <summary>
            The standard annotation types in PDF documents.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Text">
            <summary>
            A 'sticky note' style annotation displaying some text with open/closed pop-up state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Link">
            <summary>
            A link to elsewhere in the document or an external application/web link.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.FreeText">
            <summary>
            Displays text on the page. Unlike <see cref="F:UglyToad.PdfPig.Annotations.AnnotationType.Text"/> there is no associated pop-up.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Line">
            <summary>
            Display a single straight line on the page with optional line ending styles.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Square">
            <summary>
            Display a rectangle on the page.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Circle">
            <summary>
            Display an ellipse on the page.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Polygon">
            <summary>
            Display a closed polygon on the page.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.PolyLine">
            <summary>
            Display a set of connected lines on the page which is not a closed polygon.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Highlight">
            <summary>
            A highlight for text or content with associated annotation texyt.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Underline">
            <summary>
            An underline under text with associated annotation text.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Squiggly">
            <summary>
            A jagged squiggly line under text with associated annotation text.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.StrikeOut">
            <summary>
            A strikeout through some text with associated annotation text.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Stamp">
            <summary>
            Text or graphics intended to display as if inserted by a rubber stamp.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Caret">
            <summary>
            A visual symbol indicating the presence of text edits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Ink">
            <summary>
            A freehand 'scribble' formed by one or more paths.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Popup">
            <summary>
            Displays text in a pop-up window for entry or editing.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.FileAttachment">
            <summary>
            A file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Sound">
            <summary>
            A sound to be played through speakers.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Movie">
            <summary>
            Embeds a movie from a file in a PDF document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Widget">
            <summary>
            Used by interactive forms to represent field appearance and manage user interactions.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Screen">
            <summary>
            Specifies a page region for media clips to be played and actions to be triggered from.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.PrinterMark">
            <summary>
            Represents a symbol used during the physical printing process to maintain output quality, e.g. color bars or cut marks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.TrapNet">
            <summary>
            Used during the physical printing process to prevent colors mixing.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Watermark">
            <summary>
            Adds a watermark at a fixed size and position irrespective of page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Artwork3D">
            <summary>
            Represents a 3D model/artwork, for example from CAD, in a PDF document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Annotations.AnnotationType.Other">
            <summary>
            A custom annotation type.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.AppearanceStream">
            <summary>
            Appearance stream (PDF Reference 8.4.4) that describes what an annotation looks like. Each stream is a Form XObject.
            The appearance stream is either stateless (in which case <see cref="P:UglyToad.PdfPig.Annotations.AppearanceStream.IsStateless"/> is true)
            or stateful, in which case <see cref="P:UglyToad.PdfPig.Annotations.AppearanceStream.IsStateless"/> is false and the states can be retrieved via <see cref="P:UglyToad.PdfPig.Annotations.AppearanceStream.GetStates"/>.
            The states can then be used to retrieve the state-specific appearances using <see cref="M:UglyToad.PdfPig.Annotations.AppearanceStream.Get(System.String)"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AppearanceStream.IsStateless">
            <summary>
            Indicates if this appearance stream is stateless, or whether you can get appearances by state.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.AppearanceStream.GetStates">
            <summary>
            Get list of states. If this is a stateless appearance stream, an empty collection is returned.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.AppearanceStream.#ctor(UglyToad.PdfPig.Tokens.StreamToken)">
            <summary>
            Constructor for stateless appearance stream
            </summary>
            <param name="streamToken"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.AppearanceStream.#ctor(System.Collections.Generic.IDictionary{System.String,UglyToad.PdfPig.Tokens.StreamToken})">
            <summary>
            Constructor for stateful appearance stream
            </summary>
            <param name="appearanceStreamsByState"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.AppearanceStream.Get(System.String)">
            <summary>
            Get appearance stream for particular state
            </summary>
            <param name="state"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral">
            <summary>
            A QuadPoints quadrilateral is four points defining the region for an annotation to use.
            An annotation may cover multiple quadrilaterals.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral.Points">
            <summary>
            The 4 points defining this quadrilateral.
            The PDF specification defines these as being in anti-clockwise order starting from the lower-left corner, however
            Adobe's implementation doesn't obey the specification and points seem to go in the order: top-left, top-right,
            bottom-left, bottom-right. See: https://stackoverflow.com/questions/9855814/pdf-spec-vs-acrobat-creation-quadpoints.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral.#ctor(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfPoint})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Annotations.QuadPointsQuadrilateral.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.ArtifactMarkedContentElement">
            <inheritdoc />
            <summary>
            Artifacts are graphics objects that are not part of the author's original content but rather are 
            generated by the conforming writer in the course of pagination, layout, or other strictly mechanical 
            processes.
            <para>Artifacts may also be used to describe areas of the document where the author uses a graphical 
            background, with the goal of enhancing the visual experience. In such a case, the background is not 
            required for understanding the content. - PDF 32000-1:2008, Section 14.8.2.2</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.Type">
            <summary>
            The artifact's type: Pagination, Layout, Page, or (PDF 1.7) Background.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.SubType">
            <summary>
            The artifact's subtype. Standard values are Header, Footer, and Watermark. 
            Additional values may be specified for this entry, provided they comply with the naming conventions.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.AttributeOwners">
            <summary>
            The artifact's attribute owners.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.BoundingBox">
            <summary>
            The artifact's bounding box.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.Attached">
            <summary>
            The names of regions this element is attached to.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.IsTopAttached">
            <summary>
            Is the artifact attached to the top edge?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.IsBottomAttached">
            <summary>
            Is the artifact attached to the bottom edge?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.IsLeftAttached">
            <summary>
            Is the artifact attached to the left edge?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.IsRightAttached">
            <summary>
            Is the artifact attached to the right edge?
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType">
            <summary>
            If present, shall be one of the names Pagination, Layout, Page, or (PDF 1.7) Background.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType.Unknown">
            <summary>
            Unknown artifact type.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType.Pagination">
            <summary>
            Ancillary page features such as running heads and folios (page numbers).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType.Layout">
            <summary>
            Purely cosmetic typographical or design elements such as footnote rules or background screens.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType.Page">
            <summary>
            Production aids extraneous to the document itself, such as cut marks and colour bars.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.ArtifactMarkedContentElement.ArtifactType.Background">
            <summary>
            (PDF 1.7) Images, patterns or coloured blocks that either run the entire length and/or 
            width of the page or the entire dimensions of a structural element. Background artifacts 
            typically serve as a background for content shown either on top of or placed adjacent to 
            that background.
            <para>A background artifact can further be classified as visual content that serves to enhance the user experience, that lies under the actual content, and that is not required except to retain visual fidelity.</para>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Catalog">
            <summary>
            The root of the document's object hierarchy. Contains references to objects defining the contents,
            outline, named destinations and more.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Catalog.CatalogDictionary">
            <summary>
            The catalog dictionary containing assorted information.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Catalog.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Content.Pages,UglyToad.PdfPig.Outline.NamedDestinations)">
            <summary>
            Create a new <see cref="P:UglyToad.PdfPig.Content.Catalog.CatalogDictionary"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.CropBox">
            <summary>
            Defines the visible region of a page, contents expanding beyond the crop box should be clipped.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.CropBox.Bounds">
            <summary>
            Defines the clipping of the content when the page is displayed or printed. The page's contents are to be clipped (cropped) to this rectangle
            and then imposed on the output medium.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.CropBox.#ctor(UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.CropBox"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.CropBox.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.DocumentInformation">
            <summary>
            Metadata for the PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.DocumentInformationDictionary">
            <summary>
            The underlying document information PDF dictionary from the document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Title">
            <summary>
            The title of this document if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Author">
            <summary>
            The name of the person who created this document if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Subject">
            <summary>
            The subject of this document if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Keywords">
            <summary>
            Any keywords associated with this document if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Creator">
            <summary>
            The name of the application which created the original document before it was converted to PDF if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.Producer">
            <summary>
            The name of the application used to convert the original document to PDF if applicable.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.CreationDate">
            <summary>
            The date and time the document was created.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.DocumentInformation.ModifiedDate">
            <summary>
            The date and time the document was most recently modified.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.DocumentInformation.GetCreatedDateTimeOffset">
            <summary>
            Gets the <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.CreationDate"/> as a <see cref="T:System.DateTimeOffset"/> if it's possible to convert it, or <see langword="null"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.DocumentInformation.GetModifiedDateTimeOffset">
            <summary>
            Gets the <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.ModifiedDate"/> as a <see cref="T:System.DateTimeOffset"/> if it's possible to convert it, or <see langword="null"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.DocumentInformation.ToString">
            <summary>
            Gets a string representing this document information. <see langword="null"/> entries are not shown.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.EmbeddedFile">
            <summary>
            A file embedded in a PDF document for document references.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.EmbeddedFile.Name">
            <summary>
            The name given to this embedded file in the document's name tree.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.EmbeddedFile.FileSpecification">
            <summary>
            The specification of the path to the file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.EmbeddedFile.Bytes">
            <summary>
            The decrypted bytes of the file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.EmbeddedFile.Stream">
            <summary>
            The underlying embedded file stream.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.EmbeddedFile.ToString">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.HeaderVersion.OffsetInFile">
            <summary>
            The offset in bytes from the start of the file to the start of the version comment.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Hyperlink">
            <summary>
            Full details for a link annotation which references an external resource.
            A link to an external resource in a document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Hyperlink.Bounds">
            <summary>
            The area on the page which when clicked will open the hyperlink.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Hyperlink.Text">
            <summary>
            The text in the link region (if any).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Hyperlink.Letters">
            <summary>
            The letters in the link region.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Hyperlink.Uri">
            <summary>
            The URI the link directs to.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Hyperlink.Annotation">
            <summary>
            The underlying link annotation.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Hyperlink.#ctor(UglyToad.PdfPig.Core.PdfRectangle,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.Letter},System.String,System.String,UglyToad.PdfPig.Annotations.Annotation)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.Hyperlink"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Hyperlink.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.InlineImage">
            <inheritdoc />
            <summary>
            A small image that is completely defined directly inline within a <see cref="T:UglyToad.PdfPig.Content.Page" />'s content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.Bounds">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.WidthInSamples">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.HeightInSamples">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.BitsPerComponent">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.IsImageMask">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.Decode">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.IsInlineImage">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.ImageDictionary">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.RenderingIntent">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.Interpolate">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.RawBytes">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Content.InlineImage.ColorSpaceDetails">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.InlineImage.#ctor(UglyToad.PdfPig.Core.PdfRectangle,System.Int32,System.Int32,System.Int32,System.Boolean,UglyToad.PdfPig.Graphics.Core.RenderingIntent,System.Boolean,System.Collections.Generic.IReadOnlyList{System.Decimal},System.Collections.Generic.IReadOnlyList{System.Byte},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Filters.IFilter},UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.InlineImage"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.InlineImage.TryGetBytes(System.Collections.Generic.IReadOnlyList{System.Byte}@)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.InlineImage.TryGetPng(System.Byte[]@)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.InlineImage.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.IPdfImage">
            <summary>
            An image in a PDF document, may be an <see cref="T:UglyToad.PdfPig.Content.InlineImage"/> or a PostScript image XObject (<see cref="T:UglyToad.PdfPig.XObjects.XObjectImage"/>).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.Bounds">
            <summary>
            The placement rectangle of the image in PDF coordinates.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.WidthInSamples">
            <summary>
            The width of the image in samples.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.HeightInSamples">
            <summary>
            The height of the image in samples.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.BitsPerComponent">
            <summary>
            The number of bits used to represent each color component.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.RawBytes">
            <summary>
            The encoded bytes of the image with all filters still applied.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.RenderingIntent">
            <summary>
            The color rendering intent to be used when rendering the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.IsImageMask">
            <summary>
            Indicates whether the image is to be treated as an image mask.
            If <see langword="true"/> the image is a monochrome image in which each sample
            is specified by a single bit (<see cref="P:UglyToad.PdfPig.Content.IPdfImage.BitsPerComponent"/> is 1).
            The image represents a stencil where sample values represent places on the page
            that should be marked with the current color or masked (not marked).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.Decode">
            <summary>
            Describes how to map image samples into the values appropriate for the
            <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>.
            The image data is initially composed of values in the range 0 to 2^n - 1
            where n is <see cref="P:UglyToad.PdfPig.Content.IPdfImage.BitsPerComponent"/>.
            The decode array contains a pair of numbers for each component in the <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>.
            The value from the image data is then interpolated into the values relevant to the <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>
            using the corresponding values of the decode array.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.Interpolate">
            <summary>
            Specifies whether interpolation is to be performed. Interpolation smooths images where a single component in the image
            as defined may correspond to many pixels on the output device. The interpolation algorithm is implementation
            dependent and is not defined by the specification.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.IsInlineImage">
            <summary>
            Whether this image is an <see cref="T:UglyToad.PdfPig.Content.InlineImage"/> or a <see cref="T:UglyToad.PdfPig.XObjects.XObjectImage"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.ImageDictionary">
            <summary>
            The full dictionary for this image object.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.IPdfImage.ColorSpaceDetails">
            <summary>
            The <see cref="P:UglyToad.PdfPig.Content.IPdfImage.ColorSpaceDetails"/> used to interpret the image.
            <para>
            This is not defined where <see cref="P:UglyToad.PdfPig.Content.IPdfImage.IsImageMask"/> is <see langword="true"/> and is optional where the image is JPXEncoded for <see cref="T:UglyToad.PdfPig.XObjects.XObjectImage"/>.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.IPdfImage.TryGetBytes(System.Collections.Generic.IReadOnlyList{System.Byte}@)">
            <summary>
            Get the decoded bytes of the image if applicable. For JPEG images and some other types the
            <see cref="P:UglyToad.PdfPig.Content.IPdfImage.RawBytes"/> should be used directly.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.IPdfImage.TryGetPng(System.Byte[]@)">
            <summary>
            Try to convert the image to PNG. Doesn't support conversion of JPG to PNG.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.IResourceStore.UnloadResourceDictionary">
            <summary>
            Remove any named resources and associated state for the last resource dictionary loaded.
            Does not affect the cached resources, just the labels associated with them.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Letter">
            <summary>
            A glyph or combination of glyphs (characters) drawn by a PDF content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.Value">
            <summary>
            The text for this letter or unicode character.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.TextOrientation">
            <summary>
            Text orientation of the letter.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.Location">
            <summary>
            The placement position of the character in PDF space. See <see cref="P:UglyToad.PdfPig.Content.Letter.StartBaseLine"/>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.StartBaseLine">
            <summary>
            The placement position of the character in PDF space (the start point of the baseline). See <see cref="P:UglyToad.PdfPig.Content.Letter.Location"/>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.EndBaseLine">
            <summary>
            The end point of the baseline.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.Width">
            <summary>
            The width occupied by the character within the PDF content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.GlyphRectangle">
            <summary>
            Position of the bounding box for the glyph, this is the box surrounding the visible glyph as it appears on the page.
            For example letters with descenders, p, j, etc., will have a box extending below the <see cref="P:UglyToad.PdfPig.Content.Letter.Location"/> they are placed at.
            The width of the glyph may also be more or less than the <see cref="P:UglyToad.PdfPig.Content.Letter.Width"/> allocated for the character in the PDF content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.FontSize">
            <summary>
            Size as defined in the PDF file. This is not equivalent to font size in points but is relative to other font sizes on the page.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.FontName">
            <summary>
            The name of the font.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.Font">
            <summary>
            Details about the font for this letter.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.RenderingMode">
            <summary>
            Text rendering mode that indicates whether we should draw this letter's strokes,
            fill, both, neither (in case of hidden text), etc.
            If it calls for stroking the <see cref="P:UglyToad.PdfPig.Content.Letter.StrokeColor" /> is used.
            If it calls for filling, the <see cref="P:UglyToad.PdfPig.Content.Letter.FillColor"/> is used.
            In modes that perform both filling and stroking, the effect is as if each glyph outline were filled and then stroked in separate operations.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.Color">
            <summary>
            The primary color of the letter, which is either the <see cref="P:UglyToad.PdfPig.Content.Letter.StrokeColor"/> in case
            <see cref="P:UglyToad.PdfPig.Content.Letter.RenderingMode"/> is <see cref="F:UglyToad.PdfPig.Core.TextRenderingMode.Stroke"/>, or otherwise
            it is the <see cref="P:UglyToad.PdfPig.Content.Letter.FillColor"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.StrokeColor">
            <summary>
            Stroking color
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.FillColor">
            <summary>
            Non-stroking (fill) color
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.PointSize">
            <summary>
            The size of the font in points.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Letter.TextSequence">
            <summary>
            Sequence number of the ShowText operation that printed this letter.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Letter.#ctor(System.String,UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,System.Double,System.Double,UglyToad.PdfPig.PdfFonts.FontDetails,UglyToad.PdfPig.Core.TextRenderingMode,UglyToad.PdfPig.Graphics.Colors.IColor,UglyToad.PdfPig.Graphics.Colors.IColor,System.Double,System.Int32)">
            <summary>
            Create a new letter to represent some text drawn by the Tj operator.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Letter.ToString">
            <summary>
            Produces a string representation of the letter and its position.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.MarkedContentElement">
            <summary>
            A marked content element can be used to provide application specific data in the
            page's content stream. Interpretation of the marked content is outside of the PDF specification.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.MarkedContentIdentifier">
            <summary>
            Marked-content identifier.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Index">
            <summary>
            The index of this marked content element in the set of marked content in the page.
            <see cref="P:UglyToad.PdfPig.Content.MarkedContentElement.Children"/> marked content elements will have the same index as the parent.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Tag">
            <summary>
            A name indicating the role or significance of the point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Properties">
            <summary>
            The properties for this element.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.IsArtifact">
            <summary>
            Is the marked content an artifact, see <see cref="T:UglyToad.PdfPig.Content.ArtifactMarkedContentElement"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Children">
            <summary>
            Child contents.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Letters">
            <summary>
            Letters contained in this marked content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Paths">
            <summary>
            Paths contained in this marked content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Images">
            <summary>
            Images contained in this marked content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.Language">
            <summary>
            The natural language specification.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.ActualText">
            <summary>
            The replacement text.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.AlternateDescription">
            <summary>
            The alternate description.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MarkedContentElement.ExpandedForm">
            <summary>
            The abbreviation expansion text.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.MarkedContentElement.#ctor(System.Int32,UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken,System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.MarkedContentElement},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.Letter},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Graphics.PdfPath},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.IPdfImage},System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.MarkedContentElement"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.MarkedContentElement.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.MediaBox">
            <summary>
            The boundary of the physical medium to display or print on.
            </summary>
            <remarks>
            See table 3.27 from the PDF specification version 1.7.
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.PointsPerInch">
            <summary>
             User space units per inch.
             </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.PointsPerMm">
            <summary>
            User space units per millimeter.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.Letter">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of U.S. Letter, 8.5" x 11" Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.Legal">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of U.S. Legal, 8.5" x 14" Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A0">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A0 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A1">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A1 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A2">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A2 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A3">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A3 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A4">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A4 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A5">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A5 Paper.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.MediaBox.A6">
            <summary>
            A <see cref="T:UglyToad.PdfPig.Content.MediaBox"/> the size of A6 Paper.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.MediaBox.Bounds">
            <summary>
            A rectangle, expressed in default user space units, that defines the boundaries of the physical medium on which the page shall be displayed or printed.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.MediaBox.#ctor(System.Nullable{UglyToad.PdfPig.Core.PdfRectangle})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.MediaBox"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.OptionalContentGroupElement">
            <summary>
            An optional content group is a dictionary representing a collection of graphics
            that can be made visible or invisible dynamically by users of viewers applications.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.OptionalContentGroupElement.Type">
            <summary>
            The type of PDF object that this dictionary describes.
            <para>Must be OCG for an optional content group dictionary.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.OptionalContentGroupElement.Name">
            <summary>
            The name of the optional content group, suitable for presentation in a viewer application's user interface.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.OptionalContentGroupElement.Intent">
            <summary>
            A single name or an array containing any combination of names.
            <para>Default value is 'View'.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.OptionalContentGroupElement.Usage">
            <summary>
            A usage dictionary describing the nature of the content controlled by the group.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.OptionalContentGroupElement.MarkedContent">
            <summary>
            Underlying <see cref="T:UglyToad.PdfPig.Content.MarkedContentElement"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.OptionalContentGroupElement.ToString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Page">
            <summary>
            Contains the content and provides access to methods of a single page in the <see cref="T:UglyToad.PdfPig.PdfDocument"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Dictionary">
            <summary>
            The raw PDF dictionary token for this page in the document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Number">
            <summary>
            The page number (starting at 1).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.CropBox">
            <summary>
            Defines the visible region of the page, content outside the <see cref="P:UglyToad.PdfPig.Content.Page.CropBox"/> is clipped/cropped.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.MediaBox">
            <summary>
            Defines the boundaries of the physical medium on which the page shall be displayed or printed.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Rotation">
            <summary>
            The rotation of the page in degrees (clockwise). Valid values are 0, 90, 180 and 270.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Letters">
            <summary>
            The set of <see cref="T:UglyToad.PdfPig.Content.Letter"/>s drawn by the PDF content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Text">
            <summary>
            The full text of all characters on the page in the order they are presented in the PDF content.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Width">
            <summary>
            Gets the width of the page in points.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Height">
            <summary>
            Gets the height of the page in points.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Size">
            <summary>
            The size of the page according to the standard page sizes or <see cref="F:UglyToad.PdfPig.Content.PageSize.Custom"/> if no matching standard size found.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.NumberOfImages">
            <summary>
            The number of images on this page. Use <see cref="M:UglyToad.PdfPig.Content.Page.GetImages"/> to access the image contents.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Operations">
            <summary>
            The parsed graphics state operations in the content stream for this page.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.ExperimentalAccess">
            <summary>
            Access to members whose future locations within the API will change without warning.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.GetWords">
            <summary>
            Use the default <see cref="T:UglyToad.PdfPig.Util.IWordExtractor"/> to get the words for this page.
            </summary>
            <returns>The words on this page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.GetWords(UglyToad.PdfPig.Util.IWordExtractor)">
            <summary>
            Use a custom <see cref="T:UglyToad.PdfPig.Util.IWordExtractor"/> to get the words for this page.
            </summary>
            <param name="wordExtractor">The word extractor to use to generate words.</param>
            <returns>The words on this page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.GetHyperlinks">
            <summary>
            Get the hyperlinks which link to external resources on the page.
            These are based on the annotations on the page with a type of '/Link'.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.GetImages">
            <summary>
            Gets any images on the page.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.GetMarkedContents">
            <summary>
            Gets any marked content on the page.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Page.Experimental">
            <summary>
            Provides access to useful members which will change in future releases.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Page.Experimental.Paths">
            <summary>
            The set of <see cref="T:UglyToad.PdfPig.Graphics.PdfPath"/>s drawn by the PDF content.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.Experimental.GetAnnotations">
            <summary>
            Get the annotation objects from the page.
            </summary>
            <returns>The lazily evaluated set of annotations on this page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Page.Experimental.GetOptionalContents">
            <summary>
            Gets any optional content on the page.
            <para>Does not handle XObjects and annotations for the time being.</para>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.PageContent">
            <summary>
            Wraps content parsed from a page content stream for access.
            </summary>
            <remarks>
            This should contain a replayable stack of drawing instructions for page content
            from a content stream in addition to lazily evaluated state such as text on the page or images.
            </remarks>
        </member>
        <member name="T:UglyToad.PdfPig.Content.PageRotationDegrees">
            <summary>
            Represents the rotation of a page in a PDF document defined by the page dictionary in degrees clockwise.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageRotationDegrees.Value">
            <summary>
            The rotation of the page in degrees clockwise.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageRotationDegrees.SwapsAxis">
            <summary>
            Whether the rotation flips the x and y axes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageRotationDegrees.Radians">
            <summary>
            Get the rotation expressed in radians (anti-clockwise).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.#ctor(System.Int32)">
            <summary>
            Create a <see cref="T:UglyToad.PdfPig.Content.PageRotationDegrees"/>.
            </summary>
            <param name="rotation">Rotation in degrees clockwise, must be a multiple of 90.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.ToString">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.Equals(UglyToad.PdfPig.Content.PageRotationDegrees)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.op_Equality(UglyToad.PdfPig.Content.PageRotationDegrees,UglyToad.PdfPig.Content.PageRotationDegrees)">
            <summary>
            Equal.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageRotationDegrees.op_Inequality(UglyToad.PdfPig.Content.PageRotationDegrees,UglyToad.PdfPig.Content.PageRotationDegrees)">
            <summary>
            Not equal.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Pages.PageTree">
            <summary>
            The page tree for this document containing all pages, page numbers and their dictionaries.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.PageSize">
            <summary>
            The corresponding named size of the <see cref="T:UglyToad.PdfPig.Content.Page"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Custom">
            <summary>
            Unknown page size, did not match a defined page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A0">
            <summary>
            The ISO 216 A0 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A1">
            <summary>
            The ISO 216 A1 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A2">
            <summary>
            The ISO 216 A2 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A3">
            <summary>
            The ISO 216 A3 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A4">
            <summary>
            The ISO 216 A4 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A5">
            <summary>
            The ISO 216 A5 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A6">
            <summary>
            The ISO 216 A6 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A7">
            <summary>
            The ISO 216 A7 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A8">
            <summary>
            The ISO 216 A8 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A9">
            <summary>
            The ISO 216 A9 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.A10">
            <summary>
            The ISO 216 A10 page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Letter">
            <summary>
            The North American Letter page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Legal">
            <summary>
            The North American Legal page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Ledger">
            <summary>
            The North American Ledger page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Tabloid">
            <summary>
            The North American Tabloid page size.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.PageSize.Executive">
            <summary>
            The North American Executive page size.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.PageTreeMembers">
            <summary>
            Contains the values inherited from the Page Tree for this page.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.PageTreeNode">
            <summary>
            A node in the PDF document's page tree.
            Nodes may either be of type 'Page' - a single page, or 'Pages' - a container for multiple child Page
            or Pages nodes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.NodeDictionary">
            <summary>
            The dictionary for this node in the page tree.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.Reference">
            <summary>
            The indirect reference for this node in the page tree.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.IsPage">
            <summary>
            Whether this node is a page or not. If not it must be a /Pages container.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.PageNumber">
            <summary>
            The number of this page if <see cref="P:UglyToad.PdfPig.Content.PageTreeNode.IsPage"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.Children">
            <summary>
            The child nodes of this node if <see cref="P:UglyToad.PdfPig.Content.PageTreeNode.IsPage"/> is <see langword="false" />
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.Parent">
            <summary>
            The parent node of this node, unless it is the root node.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.PageTreeNode.IsRoot">
            <summary>
            Whether this node is the root node.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageTreeNode.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Core.IndirectReference,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.PageTreeNode"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.PageTreeNode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.TextOrientation">
            <summary>
            Orientation of the text.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.TextOrientation.Other">
            <summary>
            Other text orientation.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.TextOrientation.Horizontal">
            <summary>
            Usual text orientation (Left to Right).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.TextOrientation.Rotate180">
            <summary>
            Horizontal text, upside down.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.TextOrientation.Rotate90">
            <summary>
            Rotated text going down.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Content.TextOrientation.Rotate270">
            <summary>
            Rotated text going up.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Content.Word">
            <summary>
            A word.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Word.Text">
            <summary>
            The text of the word.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Word.TextOrientation">
            <summary>
            The text orientation of the word.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Word.BoundingBox">
            <summary>
            The rectangle completely containing the word.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Word.FontName">
            <summary>
            The name of the font for the word.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.Word.Letters">
            <summary>
            The letters contained in the word.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Word.#ctor(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.Letter})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Content.Word"/>.
            </summary>
            <param name="letters">The letters contained in the word, in the correct order.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Word.BoundAngle180(System.Double)">
            <summary>
            Bound angle so that -180 ≤ θ ≤ 180.
            </summary>
            <param name="angle">The angle to bound.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Content.Word.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Content.XmpMetadata">
            <summary>
            Wraps an XML based Extensible Metadata Platform (XMP) document. These XML documents are embedded in PDFs to provide metadata
            about objects (the entire document, images, etc). They can be present as plain text or encoded/encrypted streams.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Content.XmpMetadata.MetadataStreamToken">
            <summary>
            The underlying <see cref="T:UglyToad.PdfPig.Tokens.StreamToken"/> for this metadata.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Content.XmpMetadata.GetXmlBytes">
            <summary>
            Get the decoded bytes for the metadata stream. This can be interpreted as a sequence of plain-text bytes.
            </summary>
            <returns>The bytes for the metadata object with any filters removed.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Content.XmpMetadata.GetXDocument">
            <summary>
            Gets the metadata stream as an <see cref="T:System.Xml.Linq.XDocument"/>.
            </summary>
            <returns>The <see cref="T:System.Xml.Linq.XDocument"/> for the XMP XML.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.CrossReferenceTable">
            <summary>
            The cross-reference table contains information that enables random access to PDF objects within the file by object number
            so that specific objects can be located directly without having to scan the whole document. 
            A PDF document may contain multiple cross reference tables, this class provides access to the merged result with the latest
            offset for each object. The offsets of the original cross reference tables or streams merged into this result are available
            in the <see cref="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffsets"/> list.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.ObjectOffsets">
            <summary>
            The corresponding byte offset for each keyed object in this document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.Type">
            <summary>
            The type of the first cross-reference table located in this document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.Trailer">
            <summary>
            The trailer dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffsets">
            <summary>
            The byte offsets of each cross-reference table or stream in this document and the previous
            table or stream they link to if applicable.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset">
            <summary>
            The offset of a cross-reference table or stream in the document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset.Current">
            <summary>
            The offset in bytes from the start of the document where the stream or table starts.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset.Previous">
            <summary>
            The offset in bytes from the start of the document where the previous stream or table in a document
            containing incremental updates can be found, if applicable.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset.#ctor(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset"/>.
            </summary>
            <param name="current">The offset in bytes from the start of the document where the stream or table starts.</param>
            <param name="previous">The offset in bytes from the start of the document where the previous stream or table in a document starts.</param>
        </member>
        <member name="M:UglyToad.PdfPig.CrossReference.CrossReferenceTable.CrossReferenceOffset.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.CrossReferenceTableBuilder">
            <summary>
            
            </summary>
            <remarks>
            The table contains a one-line entry for each indirect object, specifying the location of that object within the body of the file. 
            </remarks>
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.CrossReferenceTablePart">
            <summary>
            
            </summary>
            <remarks>
            The format of an in-use entry is
                nnnnnnnnnn ggggg n eol
            where
                nnnnnnnnnn is a 10-digit byte offset
                ggggg is a 5-digit generation number
                n is a literal keyword identifying this as an in-use entry
                eol is a 2-character end-of-line sequence
            
            
            The byte offset is a 10-digit number, padded with leading zeros if necessary,
            giving the number of bytes from the beginning of the file to the beginning of the
            object. 
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.CrossReferenceTablePart.TiedToXrefAtOffset">
            <summary>
            For Xref streams indicated by tables they should be used together when constructing the final table.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.CrossReferenceType">
            <summary>
            The type of a cross-reference section in a PDF document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.CrossReference.CrossReferenceType.Table">
            <summary>
            A cross-reference table.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.CrossReference.CrossReferenceType.Stream">
            <summary>
            A cross-reference stream.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.CrossReference.TrailerDictionary">
            <summary>
            Contains information for interpreting the cross-reference table.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.Size">
            <summary>
            The total number of object entries across both the original cross-reference table
            and in any incremental updates. 
            </summary>
            <remarks>
            Any object in a cross-reference section whose number is greater than this value is
            ignored and considered missing.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.PreviousCrossReferenceOffset">
            <summary>
            The offset in bytes to the previous cross-reference table or stream
            if the document has more than one cross-reference section.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.Root">
            <summary>
            The object reference for the document's catalog dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.Info">
            <summary>
            The object reference for the document's information dictionary if it contains one.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.Identifier">
            <summary>
            A list containing two-byte string tokens which act as file identifiers.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.CrossReference.TrailerDictionary.EncryptionToken">
            <summary>
            The document's encryption dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.CrossReference.TrailerDictionary.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.CrossReference.TrailerDictionary"/>.
            </summary>
            <param name="dictionary">The parsed dictionary from the document.</param>
        </member>
        <member name="M:UglyToad.PdfPig.CrossReference.TrailerDictionary.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Encryption.CryptDictionary.Method">
            <summary>
            The method used by the consumer application to decrypt data.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.Method.None">
            <summary>
            The application does not decrypt data but directs the input stream
            to the security handler for decryption.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.Method.V2">
            <summary>
            The application asks the security handler for the encryption key
            and implicitly decrypts data using the RC4 algorithm.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.Method.AesV2">
            <summary>
            (PDF 1.6) The application asks the security handler for the encryption key and implicitly decrypts data using the AES algorithm in Cipher Block Chaining (CBC) mode
            with a 16-byte block size and an initialization vector that is randomly generated and placed as the first 16 bytes in the stream or string. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.Method.AesV3">
            <summary>
            The application asks the security handler for the encryption key and implicitly decrypts data using the AES-256 algorithm in Cipher Block Chaining (CBC) with padding mode 
            with a 16-byte block size and an initialization vector that is randomly generated and placed as the first 16 bytes in the stream or string. 
            The key size shall be 256 bits.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Encryption.CryptDictionary.TriggerEvent">
            <summary>
            The event to be used to trigger the authorization that is required
            to access encryption keys used by this filter. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.TriggerEvent.DocumentOpen">
            <summary>
            Authorization is required when a document is opened.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.CryptDictionary.TriggerEvent.EmbeddedFileOpen">
            <summary>
            Authorization is required when accessing embedded files.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode">
            <summary>
            A code specifying the algorithm to be used in encrypting and decrypting the document.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.Unrecognized">
            <summary>
            An algorithm that is undocumented and no longer supported.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.Rc4OrAes40BitKey">
            <summary>
            RC4 or AES encryption using a key of 40 bits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.Rc4OrAesGreaterThan40BitKey">
            <summary>
            RC4 or AES encryption using a key of more than 40 bits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.UnpublishedAlgorithm40To128BitKey">
            <summary>
             An unpublished algorithm that permits encryption key lengths ranging from 40 to 128 bits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.SecurityHandlerInDocument">
            <summary>
             The security handler defines the use of encryption and decryption in the document with a key length of 128 bits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.SecurityHandlerInDocument256">
            <summary>
             The security handler defines the use of encryption and decryption in the document with a key length of 256 bits.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.EncryptionAlgorithmCode.UndocumentedDueToIso">
            <summary>
            Since ISO isn't fit for purpose they charge £200 to see the PDF 2 spec so it's not possible to know what the specification for this revision is. 
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Encryption.EncryptionDictionary.OwnerEncryptionBytes">
            <summary>
            Required if <see cref="P:UglyToad.PdfPig.Encryption.EncryptionDictionary.Revision"/> is 5 or above. A 32-byte string, based on the owner and user passwords that is used in computing the encryption key.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Encryption.EncryptionDictionary.UserEncryptionBytes">
            <summary>
            Required if <see cref="P:UglyToad.PdfPig.Encryption.EncryptionDictionary.Revision"/> is 5 or above. A 32-byte string, based on the user password that is used in computing the encryption key.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Encryption.EncryptionHandler.ComputeStupidIsoHash(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            This is the revision 6 algorithm the specification for which can't be viewed unless you pay the ISO a lot of money (which makes me extremely angry).
            This is an attempt to port directly from PDFBox code.
            </summary>
            <param name="password">The truncated user or owner password.</param>
            <param name="salt">The 8 byte user or owner key validation salt.</param>
            <param name="vector">Used when hashing owner password in which case it is the 48 byte /U key.</param>
        </member>
        <member name="T:UglyToad.PdfPig.Encryption.IEncryptionHandler">
            <summary>
             Manages decryption of tokens in a PDF document where encryption is used.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.Print">
            <summary>
            (Revision 2) Print the document.
            (Revision 3 or greater) Print the document (possibly not at the highest quality level, see <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.PrintHighQuality"/>).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.Modify">
            <summary>
            Modify the contents of the document by operations other than those
            controlled by <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.AddOrModifyTextAnnotationsAndFillFormFields"/>, <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.FillExistingFormFields"/> and <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.AssembleDocument"/>. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.CopyTextAndGraphics">
            <summary>
            (Revision 2) Copy or otherwise extract text and graphics from the document, including extracting text and graphics
            (in support of accessibility to users with disabilities or for other purposes).
            (Revision 3 or greater) Copy or otherwise extract text and graphics from the document by operations other
            than that controlled by <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.ExtractTextAndGraphics"/>. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.AddOrModifyTextAnnotationsAndFillFormFields">
            <summary>
            Add or modify text annotations, fill in interactive form fields, and, if <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.Modify"/> is also set,
            create or modify interactive form fields (including signature fields). 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.FillExistingFormFields">
            <summary>
            (Revision 3 or greater) Fill in existing interactive form fields (including signature fields),
            even if <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.AddOrModifyTextAnnotationsAndFillFormFields"/> is clear. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.ExtractTextAndGraphics">
            <summary>
            (Revision 3 or greater) Extract text and graphics (in support of accessibility to users with disabilities or for other purposes). 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.AssembleDocument">
            <summary>
            (Revision 3 or greater) Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images),
            even if <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.Modify"/> is clear. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.PrintHighQuality">
            <summary>
            (Revision 3 or greater) Print the document to a representation from  which a faithful digital copy of the PDF content could be generated.
            When this is clear (and <see cref="F:UglyToad.PdfPig.Encryption.UserAccessPermissions.Print"/> is set), printing is limited to a low-level representation of the appearance,
            possibly of degraded quality. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Exceptions.PdfDocumentEncryptedException">
            <inheritdoc />
            <summary>
            The document is encrypted and cannot be decrypted.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Exceptions.PdfDocumentEncryptedException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Exceptions.PdfDocumentEncryptedException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Exceptions.PdfDocumentEncryptedException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Exceptions.PdfDocumentEncryptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.Ascii85Filter">
            <inheritdoc />
            <summary>
            ASCII 85 (Base85) is a binary to text encoding using 5 ASCII characters per 4 bytes of data.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.Ascii85Filter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.Ascii85Filter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.AsciiHexDecodeFilter">
            <inheritdoc />
            <summary>
            Encodes/decodes data using the ASCII hexadecimal encoding where each byte is represented by two ASCII characters.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.AsciiHexDecodeFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.AsciiHexDecodeFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.CcittFaxCompressionType">
            <summary>
            Specifies the compression type to use with <see cref="T:UglyToad.PdfPig.Filters.CcittFaxDecoderStream" />.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Filters.CcittFaxCompressionType.ModifiedHuffman">
            <summary>
            Modified Huffman (MH) - Group 3 variation (T2)
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Filters.CcittFaxCompressionType.Group3_1D">
            <summary>
            Modified Huffman (MH) - Group 3 (T4)
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Filters.CcittFaxCompressionType.Group3_2D">
            <summary>
            Modified Read (MR) - Group 3 (T4)
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Filters.CcittFaxCompressionType.Group4_2D">
            <summary>
            Modified Modified Read (MMR) - Group 4 (T6)
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Filters.CcittFaxDecodeFilter">
             <summary>
             Decodes image data that has been encoded using either Group 3 or Group 4.
            
             Ported from https://github.com/apache/pdfbox/blob/714156a15ea6fcfe44ac09345b01e192cbd74450/pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java
             </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.CcittFaxDecodeFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.CcittFaxDecodeFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.CcittFaxDecoderStream">
             <summary>
             CCITT Modified Huffman RLE, Group 3 (T4) and Group 4 (T6) fax compression.
            
             Ported from https://github.com/apache/pdfbox/blob/e644c29279e276bde14ce7a33bdeef0cb1001b3e/pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java
             </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.CcittFaxDecoderStream.#ctor(System.IO.Stream,System.Int32,UglyToad.PdfPig.Filters.CcittFaxCompressionType,System.Boolean)">
            <summary>
            Creates a CCITTFaxDecoderStream.
            This constructor may be used for CCITT streams embedded in PDF files,
            which use EncodedByteAlign.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.DctDecodeFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.DctDecodeFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.DefaultFilterProvider">
            <inheritdoc />
            <summary>
            The default implementation of the <see cref="T:UglyToad.PdfPig.Filters.IFilterProvider" />.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Filters.DefaultFilterProvider.Instance">
            <summary>
            The single instance of this provider.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.DefaultFilterProvider.GetFilters(UglyToad.PdfPig.Tokens.DictionaryToken)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.DefaultFilterProvider.GetNamedFilters(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Tokens.NameToken})">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.DefaultFilterProvider.GetAllFilters">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.FlateFilter">
            <inheritdoc />
            <summary>
            The Flate filter is based on the public-domain zlib/deflate compression method, a variable-length Lempel-Ziv 
            adaptive compression method cascaded with adaptive Huffman coding. 
            It is fully defined in Internet RFCs 1950, ZLIB Compressed Data Format Specification, and
            1951, DEFLATE Compressed Data Format Specification
            </summary>
            <remarks>
            See section 3.3.3 of the spec (version 1.7) for details on the FlateDecode filter.
            The flate decode filter may have a predictor function to further compress the stream.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.FlateFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.FlateFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.IFilter">
            <summary>
            A filter is used in a PDF to encode/decode data either to compress it or derive an ASCII representation of the data.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.IFilter.IsSupported">
            <summary>
            Whether this library can decode information encoded using this filter.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.IFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <summary>
            Decodes data encoded using this filter type.
            </summary>
            <param name="input">The encoded bytes which were encoded using this filter.</param>
            <param name="streamDictionary">The dictionary of the <see cref="T:UglyToad.PdfPig.Tokens.StreamToken"/> (or other dictionary types, e.g. inline images) containing these bytes.</param>
            <param name="filterIndex">The position of this filter in the pipeline used to encode data.</param>
            <returns>The decoded bytes.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Filters.IFilterProvider">
            <summary>
            Gets filter implementations (<see cref="T:UglyToad.PdfPig.Filters.IFilter"/>) for decoding PDF data.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.IFilterProvider.GetFilters(UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Get the filters specified in this dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.IFilterProvider.GetNamedFilters(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Tokens.NameToken})">
            <summary>
            Gets the filters specified by the filter names.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.IFilterProvider.GetAllFilters">
            <summary>
            Get all available filters in this library.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.Jbig2DecodeFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.Jbig2DecodeFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Filters.JpxDecodeFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.JpxDecodeFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Filters.LzwFilter">
            <inheritdoc />
            <summary>
            The LZW (Lempel-Ziv-Welch) filter is a variable-length, adaptive compression method
            that has been adopted as one of the standard compression methods in the Tag Image File Format (TIFF) standard. 
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.LzwFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.LzwFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.PngPredictor.GetBitSeq(System.Int32,System.Int32,System.Int32)">
            <summary>
            GetLongOrDefault value from bit interval from a byte
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Filters.PngPredictor.CalcSetBitSeq(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set value input a bit interval and return that value
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Filters.RunLengthFilter">
            <inheritdoc />
            <summary>
            The Run Length filterencodes data in a simple byte-oriented format based on run length.
            The encoded data is a sequence of runs, where each run consists of a length byte followed by 1 to 128 bytes of data.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Filters.RunLengthFilter.IsSupported">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Filters.RunLengthFilter.Decode(System.Collections.Generic.IReadOnlyList{System.Byte},UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Functions.PdfFunction">
            <summary>
            This class represents a function in a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.FunctionDictionary">
            <summary>
            The function dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.FunctionStream">
            <summary>
            The function stream.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            This class represents a function in a PDF document.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.#ctor(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            This class represents a function in a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.FunctionType">
            <summary>
            Returns the function type. Possible values are:
            <list type="bullet">
            <item><term>0</term><description>Sampled function</description></item>
            <item><term>2</term><description>Exponential interpolation function</description></item>
            <item><term>3</term><description>Stitching function</description></item>
            <item><term>4</term><description>PostScript calculator function</description></item>
            </list>
            </summary>
            <returns>the function type.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.GetDictionary">
            <summary>
            Returns the function's dictionary. If <see cref="P:UglyToad.PdfPig.Functions.PdfFunction.FunctionDictionary"/> is defined, it will be returned.
            If not, the <see cref="P:UglyToad.PdfPig.Functions.PdfFunction.FunctionStream"/>'s StreamDictionary will be returned.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.NumberOfOutputParameters">
            <summary>
            This will get the number of output parameters that
            have a range specified. A range for output parameters
            is optional so this may return zero for a function
            that does have output parameters, this will simply return the
            number that have the range specified.
            </summary>
            <returns>The number of output parameters that have a range specified.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.GetRangeForOutput(System.Int32)">
            <summary>
            This will get the range for a certain output parameters. This is will never
            return null.  If it is not present then the range 0 to 0 will
            be returned.
            </summary>
            <param name="n">The output parameter number to get the range for.</param>
            <returns>The range for this component.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.NumberOfInputParameters">
            <summary>
            This will get the number of input parameters that
            have a domain specified.
            </summary>
            <returns>The number of input parameters that have a domain specified.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.GetDomainForInput(System.Int32)">
            <summary>
            This will get the range for a certain input parameter.  This is will never
            return null.  If it is not present then the range 0 to 0 will
            be returned.
            </summary>
            <param name="n">The parameter number to get the domain for.</param>
            <returns>The domain range for this component.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.Eval(System.Double[])">
            <summary>
            Evaluates the function at the given input.
            ReturnValue = f(input)
            </summary>
            <param name="input">The array of input values for the function.
            In many cases will be an array of a single value, but not always.</param>
            <returns>The of outputs the function returns based on those inputs.
            In many cases will be an array of a single value, but not always.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.RangeValues">
            <summary>
            Returns all ranges for the output values as <see cref="T:UglyToad.PdfPig.Tokens.ArrayToken"/>. Required for type 0 and type 4 functions.
            </summary>
            <returns>the ranges array.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunction.DomainValues">
            <summary>
            Returns all domains for the input values as <see cref="T:UglyToad.PdfPig.Tokens.ArrayToken"/>. Required for all function types.
            </summary>
            <returns>the domains array.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.ClipToRange(System.Double[])">
            <summary>
            Clip the given input values to the ranges.
            </summary>
            <param name="inputValues">inputValues the input values</param>
            <returns>the clipped values</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.ClipToRange(System.Double,System.Double,System.Double)">
            <summary>
            Clip the given input value to the given range.
            </summary>
            <param name="x">x the input value</param>
            <param name="rangeMin">the min value of the range</param>
            <param name="rangeMax">the max value of the range</param>
            <returns>the clipped value</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunction.Interpolate(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            For a given value of x, interpolate calculates the y value
            on the line defined by the two points (xRangeMin, xRangeMax)
            and (yRangeMin, yRangeMax).
            </summary>
            <param name="x">the value to be interpolated value.</param>
            <param name="xRangeMin">the min value of the x range</param>
            <param name="xRangeMax">the max value of the x range</param>
            <param name="yRangeMin">the min value of the y range</param>
            <param name="yRangeMax">the max value of the y range</param>
            <returns>the interpolated y value</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.FunctionTypes">
            <summary>
            Pdf function types.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Functions.FunctionTypes.Sampled">
            <summary>
            Sampled function.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Functions.FunctionTypes.Exponential">
            <summary>
            Exponential interpolation function.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Functions.FunctionTypes.Stitching">
            <summary>
            Stitching function.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Functions.FunctionTypes.PostScript">
            <summary>
            PostScript calculator function.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Functions.PdfFunctionType0.samples">
            <summary>
            The samples of the function.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,System.Int32,System.Int32,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            Stitching function
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.#ctor(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,System.Int32,System.Int32,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            Stitching function
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType0.Size">
            <summary>
            The "Size" entry, which is the number of samples in each input dimension of the sample table.
            <para>An array of m positive integers specifying the number of samples in each input dimension of the sample table.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType0.BitsPerSample">
            <summary>
            Get the number of bits that the output value will take up.
            <para>Valid values are 1,2,4,8,12,16,24,32.</para>
            </summary>
            <returns>Number of bits for each output value.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType0.Order">
            <summary>
            Get the order of interpolation between samples. Valid values are 1 and 3,
            specifying linear and cubic spline interpolation, respectively. Default
            is 1. See p.170 in PDF spec 1.7.
            </summary>
            <returns>order of interpolation.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType0.EncodeValues">
            <summary>
            An array of 2 x m numbers specifying the linear mapping of input values 
            into the domain of the function's sample table. Default value: [ 0 (Size0
            - 1) 0 (Size1 - 1) ...].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType0.DecodeValues">
            <summary>
            An array of 2 x n numbers specifying the linear mapping of sample values
            into the range appropriate for the function's output values. Default
            value: same as the value of Range.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.GetEncodeForParameter(System.Int32)">
            <summary>
            Get the encode for the input parameter.
            </summary>
            <param name="paramNum">The function parameter number.</param>
            <returns>The encode parameter range or null if none is set.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.GetDecodeForParameter(System.Int32)">
            <summary>
            Get the decode for the input parameter.
            </summary>
            <param name="paramNum">The function parameter number.</param>
            <returns>The decode parameter range or null if none is set.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.PdfFunctionType0.RInterpol">
            <summary>
            Inner class do to an interpolation in the Nth dimension by comparing the
            content size of N-1 dimensional objects.This is done with the help of
            recursive calls.
            <para>To understand the algorithm without recursion, see <see href="http://harmoniccode.blogspot.de/2011/04/bilinear-color-interpolation.html"/> for a bilinear interpolation
            and <see href="https://en.wikipedia.org/wiki/Trilinear_interpolation"/> for trilinear interpolation.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.RInterpol.#ctor(System.Double[],System.Int32[],System.Int32[],System.Int32,UglyToad.PdfPig.Tokens.ArrayToken,System.Int32[][])">
            <summary>
            Constructor.
            </summary>
            <param name="input">the input coordinates</param>
            <param name="inputPrev">coordinate of the "ceil" point</param>
            <param name="inputNext">coordinate of the "floor" point</param>
            <param name="numberOfOutputValues"></param>
            <param name="size"></param>
            <param name="samples"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.RInterpol.RInterpolate">
            <summary>
            Calculate the interpolation.
            </summary>
            <returns>interpolated result sample</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.RInterpol.InternalRInterpol(System.Int32[],System.Int32)">
            <summary>
            Do a linear interpolation if the two coordinates can be known, or
            call itself recursively twice.
            </summary>
            <param name="coord">partially set coordinate (not set from step
            upwards); gets fully filled in the last call ("leaf"), where it is
            used to get the correct sample</param>
            <param name="step">between 0 (first call) and dimension - 1</param>
            <returns>interpolated result sample</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.RInterpol.CalcSampleIndex(System.Int32[])">
            <summary>
            calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
            </summary>
            <param name="vector">with coordinates</param>
            <returns>index in flat array</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType0.GetSamples">
            <summary>
            Get all sample values of this function.
            </summary>
            <returns>an array with all samples.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.PdfFunctionType2">
            <summary>
            Exponential interpolation function
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType2.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,System.Double)">
            <summary>
            Exponential interpolation function
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType2.C0">
            <summary>
            The C0 values of the function, 0 if empty.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType2.C1">
            <summary>
            The C1 values of the function, 1 if empty.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType2.N">
            <summary>
            The exponent of the function.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.PdfFunctionType3">
            <summary>
            Stitching function
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType3.#ctor(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Functions.PdfFunction},UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            Stitching function
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType3.#ctor(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Functions.PdfFunction},UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            Stitching function
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType3.FunctionsArray">
            <summary>
            Returns all functions values.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType3.Bounds">
            <summary>
            Returns all bounds values as <see cref="T:UglyToad.PdfPig.Tokens.ArrayToken"/>.
            </summary>
            <returns>the bounds array.</returns>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.PdfFunctionType3.Encode">
            <summary>
            Returns all encode values as <see cref="T:UglyToad.PdfPig.Tokens.ArrayToken"/>.
            </summary>
            <returns>the encode array.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType3.GetEncodeForParameter(System.Int32)">
            <summary>
            Get the encode for the input parameter.
            </summary>
            <param name="n">The function parameter number.</param>
            <returns>The encode parameter range or null if none is set.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.PdfFunctionType4">
            <summary>
            PostScript calculator function
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.PdfFunctionType4.#ctor(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Tokens.ArrayToken,UglyToad.PdfPig.Tokens.ArrayToken)">
            <summary>
            PostScript calculator function
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators">
            <summary>
            Provides the arithmetic operators such as "add" and "sub".
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Abs">
            <summary>
            the "Abs" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Add">
            <summary>
            the "add" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Atan">
            <summary>
            the "atan" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Ceiling">
            <summary>
            the "ceiling" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Cos">
            <summary>
            the "cos" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Cvi">
            <summary>
            the "cvi" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Cvr">
            <summary>
            the "cvr" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Div">
            <summary>
            the "div" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Exp">
            <summary>
            the "exp" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Floor">
            <summary>
            the "floor" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.IDiv">
            <summary>
            the "idiv" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Ln">
            <summary>
            the "ln" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Log">
            <summary>
            the "log" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Mod">
            <summary>
            the "mod" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Mul">
            <summary>
            the "mul" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Neg">
            <summary>
            the "neg" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Round">
            <summary>
            the "round" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Sin">
            <summary>
            the "sin" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Sqrt">
            <summary>
            the "sqrt" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Sub">
            <summary>
            the "sub" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ArithmeticOperators.Truncate">
            <summary>
            the "truncate" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.AbstractLogicalOperator">
            <summary>
            Abstract base class for logical operators.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.And">
            <summary>
            Implements the "and" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.Bitshift">
            <summary>
            Implements the "bitshift" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.False">
            <summary>
            Implements the "false" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.Not">
            <summary>
            Implements the "not" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.Or">
            <summary>
            Implements the "or" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.True">
            <summary>
            Implements the "true" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.BitwiseOperators.Xor">
            <summary>
            Implements the "xor" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ConditionalOperators">
            <summary>
            Provides the conditional operators such as "if" and "ifelse".
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ConditionalOperators.If">
            <summary>
            Implements the "if" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.ConditionalOperators.IfElse">
            <summary>
            Implements the "ifelse" operator.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Functions.Type4.ExecutionContext.Stack">
            <summary>
            The stack used by this execution context.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.ExecutionContext.#ctor(UglyToad.PdfPig.Functions.Type4.Operators)">
            <summary>
            Creates a new execution context.
            </summary>
            <param name="operatorSet">the operator set</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.ExecutionContext.GetOperators">
            <summary>
            Returns the operator set used by this execution context.
            </summary>
            <returns>the operator set</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.ExecutionContext.PopNumber">
            <summary>
            Pops a number (int or real) from the stack. If it's neither data type, a <see cref="T:System.InvalidCastException"/> is thrown.
            </summary>
            <returns>the number</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.ExecutionContext.PopInt">
            <summary>
            Pops a value of type int from the stack. If the value is not of type int, a <see cref="T:System.InvalidCastException"/> is thrown.
            </summary>
            <returns>the int value</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.ExecutionContext.PopReal">
            <summary>
            Pops a number from the stack and returns it as a real value. If the value is not of a numeric type,
            a <see cref="T:System.InvalidCastException"/> is thrown.
            </summary>
            <returns>the real value</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.AddName(System.String)">
            <summary>
            Add a name (ex. an operator)
            </summary>
            <param name="name">the name</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.AddInteger(System.Int32)">
            <summary>
            Adds an int value.
            </summary>
            <param name="value">the value</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.AddReal(System.Double)">
            <summary>
            Adds a real value.
            </summary>
            <param name="value">the value</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.AddBoolean(System.Boolean)">
            <summary>
            Adds a bool value.
            </summary>
            <param name="value">the value</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.AddProc(UglyToad.PdfPig.Functions.Type4.InstructionSequence)">
            <summary>
            Adds a proc (sub-sequence of instructions).
            </summary>
            <param name="child">the child proc</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequence.Execute(UglyToad.PdfPig.Functions.Type4.ExecutionContext)">
            <summary>
            Executes the instruction sequence.
            </summary>
            <param name="context">the execution context</param>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.InstructionSequenceBuilder">
            <summary>
            Basic parser for Type 4 functions which is used to build up instruction sequences.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequenceBuilder.GetInstructionSequence">
            <summary>
            Returns the instruction sequence that has been build from the syntactic elements.
            </summary>
            <returns>the instruction sequence</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequenceBuilder.Parse(System.String)">
            <summary>
            Parses the given text into an instruction sequence representing a Type 4 function that can be executed.
            </summary>
            <param name="text">the Type 4 function text</param>
            <returns>the instruction sequence</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.InstructionSequenceBuilder.Token(System.Char[])">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Operator">
            <summary>
            Interface for PostScript operators.e
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Operator.Execute(UglyToad.PdfPig.Functions.Type4.ExecutionContext)">
            <summary>
            Executes the operator. The method can inspect and manipulate the stack.
            </summary>
            <param name="context">the execution context</param>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Operators">
            <summary>
            This class provides all the supported operators.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Operators.#ctor">
            <summary>
            Creates a new Operators object with the default set of operators.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Operators.GetOperator(System.String)">
            <summary>
            Returns the operator for the given operator name.
            </summary>
            <param name="operatorName">the operator name</param>
            <returns>the operator (or null if there's no such operator</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Parser">
            <summary>
            Parser for PDF Type 4 functions. This implements a small subset of the PostScript
            language but is no full PostScript interpreter.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Parser.State">
            <summary>
            Used to indicate the parsers current state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.Parse(System.String,UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler)">
            <summary>
            Parses a Type 4 function and sends the syntactic elements to the given syntax handler.
            </summary>
            <param name="input">the text source</param>
            <param name="handler">the syntax handler</param>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler">
            <summary>
            This interface defines all possible syntactic elements of a Type 4 function.
            It is called by the parser as the function is interpreted.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler.NewLine(System.String)">
            <summary>
            Indicates that a new line starts.
            </summary>
            <param name="text">the new line character (CR, LF, CR/LF or FF)</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler.Whitespace(System.String)">
            <summary>
            Called when whitespace characters are encountered.
            </summary>
            <param name="text">the whitespace text</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler.Token(System.String)">
            <summary>
            Called when a token is encountered. No distinction between operators and values is done here.
            </summary>
            <param name="text">the token text</param>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler.Comment(System.String)">
            <summary>
            Called for a comment.
            </summary>
            <param name="text">the comment</param>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Parser.AbstractSyntaxHandler">
            <summary>
            Abstract base class for a <see cref="T:UglyToad.PdfPig.Functions.Type4.Parser.SyntaxHandler"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.AbstractSyntaxHandler.Comment(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.AbstractSyntaxHandler.NewLine(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.AbstractSyntaxHandler.Whitespace(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Functions.Type4.Parser.AbstractSyntaxHandler.Token(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.Parser.Tokenizer">
            <summary>
            Tokenizer for Type 4 functions.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators">
            <summary>
            Provides the relational operators such as "eq" and "le".
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Eq">
            <summary>
            Implements the "eq" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.AbstractNumberComparisonOperator">
            <summary>
            Abstract base class for number comparison operators.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Ge">
            <summary>
            Implements the "ge" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Gt">
            <summary>
            Implements the "gt" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Le">
            <summary>
            Implements the "le" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Lt">
            <summary>
            Implements the "lt" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.RelationalOperators.Ne">
            <summary>
            Implements the "ne" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators">
            <summary>
            Provides the stack operators such as "Pop" and "dup".
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Copy">
            <summary>
            Implements the "copy" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Dup">
            <summary>
            Implements the "dup" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Exch">
            <summary>
            Implements the "exch" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Index">
            <summary>
            Implements the "index" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Pop">
            <summary>
            Implements the "Pop" operator.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Functions.Type4.StackOperators.Roll">
            <summary>
            Implements the "roll" operator.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.PointInPolygon(UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint,System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint})">
            <summary>
            returns 0 if false, +1 if true, -1 if pt ON polygon boundary.
            <para>See "The Point in Polygon Problem for Arbitrary Polygons" by Hormann and Agathos</para>
            </summary>
            <param name="pt"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.SimplifyPolygon(System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint},UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperPolyFillType)">
            <summary>
            Convert self-intersecting polygons into simple polygons.
            </summary>
            <param name="poly"></param>
            <param name="fillType"></param>
            <returns></returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.SimplifyPolygons(System.Collections.Generic.List{System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint}},UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperPolyFillType)">
            <summary>
            Convert self-intersecting polygons into simple polygons.
            </summary>
            <param name="polys"></param>
            <param name="fillType"></param>
            <returns></returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.SlopesNearCollinear(UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint,UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint,UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint,System.Double)">
            <summary>
            This function is more accurate when the point that's GEOMETRICALLY between the other
            2 points is the one that's tested for distance.
            <para>nb: with 'spikes', either pt1 or pt3 is geometrically between the other pts"></para>
            </summary>
            <param name="pt1"></param>
            <param name="pt2"></param>
            <param name="pt3"></param>
            <param name="distSqrd"></param>
            <returns></returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.CleanPolygon(System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint},System.Double)">
            <summary>
            Clean polygon.
            </summary>
            <param name="path"></param>
            <param name="distance">proximity in units/pixels below which vertices will be stripped.
            <para>Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have both x and y coords within 1 unit, then the second vertex will be stripped.</para></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClipperLibrary.Clipper.CleanPolygons(System.Collections.Generic.List{System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint}},System.Double)">
            <summary>
            Clean polygon.
            </summary>
            <param name="polys"></param>
            <param name="distance">proximity in units/pixels below which vertices will be stripped.
            <para>Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have both x and y coords within 1 unit, then the second vertex will be stripped.</para></param>
        </member>
        <member name="T:UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperPolyFillType">
            <summary>
            By far the most widely used winding rules for polygon filling are
            EvenOdd and NonZero (GDI, GDI+, XLib, OpenGL, Cairo, AGG, Quartz, SVG, Gr32)
            Others rules include Positive, Negative and ABS_GTR_EQ_TWO (only in OpenGL)
            see http://glprogramming.com/red/chapter11.html
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperOutRec">
            <summary>
            OutRec: contains a path in the clipping solution. Edges in the AEL will
            carry a pointer to an OutRec when they are part of the clipping solution.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Geometry.ClippingExtensions">
            <summary>
            Applies clipping from a clipping path to another path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Geometry.ClippingExtensions.LinesInCurve">
            <summary>
            Number of lines to use when transforming bezier curve to polyline.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClippingExtensions.Clip(UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Logging.ILog)">
            <summary>
            Generates the result of applying a clipping path to another path.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.ClippingExtensions.ToClipperPolygon(UglyToad.PdfPig.Core.PdfSubpath)">
            <summary>
            Converts a path to a set of points for the Clipper algorithm to use.
            Allows duplicate points as they will be removed by Clipper.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Geometry.GeometryExtensions">
            <summary>
            Extension class to Geometry.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ccw(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Return true if the points are in counter-clockwise order.
            </summary>
            <param name="point1">The first point.</param>
            <param name="point2">The second point.</param>
            <param name="point3">The third point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.DotProduct(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Get the dot product of both points.
            </summary>
            <param name="point1">The first point.</param>
            <param name="point2">The second point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Add(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Get a point with the summed coordinates of both points.
            </summary>
            <param name="point1">The first point.</param>
            <param name="point2">The second point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Subtract(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Get a point with the substracted coordinates of both points.
            </summary>
            <param name="point1">The first point.</param>
            <param name="point2">The second point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ParametricPerpendicularProjection(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfPoint})">
            <summary>
            Algorithm to find a minimal bounding rectangle (MBR) such that the MBR corresponds to a rectangle
            with smallest possible area completely enclosing the polygon.
            <para>From 'A Fast Algorithm for Generating a Minimal Bounding Rectangle' by Lennert D. Den Boer.</para>
            </summary>
            <param name="polygon">
            Polygon P is assumed to be both simple and convex, and to contain no duplicate (coincident) vertices.
            The vertices of P are assumed to be in strict cyclic sequential order, either clockwise or
            counter-clockwise relative to the origin P0.
            </param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.MinimumAreaRectangle(System.Collections.Generic.IEnumerable{UglyToad.PdfPig.Core.PdfPoint})">
            <summary>
            Algorithm to find the (oriented) minimum area rectangle (MAR) by first finding the convex hull of the points
            and then finding its MAR.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.OrientedBoundingBox(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfPoint})">
            <summary>
            Algorithm to find the oriented bounding box (OBB) by first fitting a line through the points to get the slope,
            then rotating the points to obtain the axis-aligned bounding box (AABB), and then rotating back the AABB.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.GrahamScan(System.Collections.Generic.IEnumerable{UglyToad.PdfPig.Core.PdfPoint})">
            <summary>
            Algorithm to find the convex hull of the set of points with time complexity O(n log n).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfPoint,System.Boolean)">
            <summary>
            Whether the point is located inside the rectangle.
            </summary>
            <param name="rectangle">The rectangle that should contain the point.</param>
            <param name="point">The point that should be contained within the rectangle.</param>
            <param name="includeBorder">If set to false, will return false if the point belongs to the border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfRectangle,System.Boolean)">
            <summary>
            Whether the other rectangle is located inside the rectangle.
            </summary>
            <param name="rectangle">The rectangle that should contain the other rectangle.</param>
            <param name="other">The other rectangle that should be contained within the rectangle.</param>
            <param name="includeBorder">If set to false, will return false if the rectangles share side(s).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Whether two rectangles overlap.
            <para>Returns false if the two rectangles only share a border.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Gets the <see cref="T:UglyToad.PdfPig.Core.PdfRectangle"/> that is the intersection of two rectangles.
            <para>Only works for axis-aligned rectangles.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Normalise(UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Gets the axis-aligned rectangle that completely containing the original rectangle, with no rotation.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Whether the rectangle and the line intersect.
            </summary>
            <param name="rectangle"></param>
            <param name="line"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Gets the <see cref="T:UglyToad.PdfPig.Core.PdfLine"/> that is the intersection of the rectangle and the line.
            </summary>
            <param name="rectangle"></param>
            <param name="line"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfRectangle,System.Collections.Generic.List{UglyToad.PdfPig.Core.PdfLine})">
            <summary>
            Gets the list of <see cref="T:UglyToad.PdfPig.Core.PdfLine"/>s that are the intersection of the rectangle and the lines.
            </summary>
            <param name="rectangle"></param>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Whether the point is located on the line segment.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Whether two lines intersect.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Whether two lines intersect.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/> that is the intersection of two lines.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/> that is the intersection of two lines.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ParallelTo(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Checks if both lines are parallel.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ParallelTo(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Checks if both lines are parallel.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Gets the <see cref="T:UglyToad.PdfPig.Core.PdfLine"/> that is the intersection of the rectangle and the line.
            </summary>
            <param name="rectangle"></param>
            <param name="line"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfLine,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Whether the rectangle and the line intersect.
            </summary>
            <param name="rectangle"></param>
            <param name="line"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Whether the point is located on the line segment.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Whether two lines intersect.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Whether two lines intersect.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/> that is the intersection of two lines.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/> that is the intersection of two lines.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ParallelTo(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Checks if both lines are parallel.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.ParallelTo(UglyToad.PdfPig.Core.PdfSubpath.Line,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Checks if both lines are parallel.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Whether the line formed by <paramref name="p11"/> and <paramref name="p12"/>
            intersects the line formed by <paramref name="p21"/> and <paramref name="p22"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            The intersection of the line formed by <paramref name="pl1"/> and <paramref name="pl2"/>
            intersects the rectangle.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfRectangle,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint)">
            <summary>
            Whether the line formed by <paramref name="pl1"/> and <paramref name="pl2"/>
            intersects the rectangle.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Split(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,System.Double)">
            <summary>
            Split a bezier curve into 2 bezier curves, at tau.
            </summary>
            <param name="bezierCurve">The original bezier curve.</param>
            <param name="tau">The t value were to split the curve, usually between 0 and 1, but not necessary.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Checks if the curve and the line are intersecting.
            <para>Avoid using this method as it is not optimised. Use <see cref="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfLine)"/> instead.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectsWith(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Checks if the curve and the line are intersecting.
            <para>Avoid using this method as it is not optimised. Use <see cref="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfSubpath.Line)"/> instead.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/>s that are the intersections of the line and the curve.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Intersect(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Get the <see cref="T:UglyToad.PdfPig.Core.PdfPoint"/>s that are the intersections of the line and the curve.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectT(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfLine)">
            <summary>
            Get the t values that are the intersections of the line and the curve.
            </summary>
            <returns>List of t values where the <see cref="T:UglyToad.PdfPig.Core.PdfSubpath.BezierCurve"/> and the <see cref="T:UglyToad.PdfPig.Core.PdfLine"/> intersect.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.IntersectT(UglyToad.PdfPig.Core.PdfSubpath.BezierCurve,UglyToad.PdfPig.Core.PdfSubpath.Line)">
            <summary>
            Get the t values that are the intersections of the line and the curve.
            </summary>
            <returns>List of t values where the <see cref="T:UglyToad.PdfPig.Core.PdfSubpath.BezierCurve"/> and the <see cref="T:UglyToad.PdfPig.Core.PdfSubpath.Line"/> intersect.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.PointInPathsWindingCount(UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint,System.Collections.Generic.List{System.Collections.Generic.List{UglyToad.PdfPig.Geometry.ClipperLibrary.ClipperIntPoint}})">
            <summary>
            nb: returns MaxInt ((2^32)-1) when pt is on a line
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfSubpath,UglyToad.PdfPig.Core.PdfPoint,System.Boolean)">
            <summary>
            Whether the point is located inside the subpath.
            <para>Ignores winding rule.</para>
            </summary>
            <param name="subpath">The subpath that should contain the point.</param>
            <param name="point">The point that should be contained within the subpath.</param>
            <param name="includeBorder">If set to false, will return false if the point belongs to the subpath's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfSubpath,UglyToad.PdfPig.Core.PdfRectangle,System.Boolean)">
            <summary>
            Whether the rectangle is located inside the subpath.
            <para>Ignores winding rule.</para>
            </summary>
            <param name="subpath">The subpath that should contain the rectangle.</param>
            <param name="rectangle">The rectangle that should be contained within the subpath.</param>
            <param name="includeBorder">If set to false, will return false if the rectangle is on the subpath's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Core.PdfSubpath,UglyToad.PdfPig.Core.PdfSubpath,System.Boolean)">
            <summary>
            Whether the other subpath is located inside the subpath.
            <para>Ignores winding rule.</para>
            </summary>
            <param name="subpath">The subpath that should contain the rectangle.</param>
            <param name="other">The other subpath that should be contained within the subpath.</param>
            <param name="includeBorder">If set to false, will return false if the other subpath is on the subpath's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.GetArea(UglyToad.PdfPig.Graphics.PdfPath)">
            <summary>
            Get the area of the path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Core.PdfPoint,System.Boolean)">
            <summary>
            Whether the point is located inside the path.
            </summary>
            <param name="path">The path that should contain the point.</param>
            <param name="point">The point that should be contained within the path.</param>
            <param name="includeBorder">If set to false, will return false if the point belongs to the path's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Core.PdfRectangle,System.Boolean)">
            <summary>
            Whether the rectangle is located inside the path.
            </summary>
            <param name="path">The path that should contain the rectangle.</param>
            <param name="rectangle">The rectangle that should be contained within the path.</param>
            <param name="includeBorder">If set to false, will return false if the rectangle is on the path's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Core.PdfSubpath,System.Boolean)">
            <summary>
            Whether the subpath is located inside the path.
            </summary>
            <param name="path">The path that should contain the subpath.</param>
            <param name="subpath">The subpath that should be contained within the path.</param>
            <param name="includeBorder">If set to false, will return false if the subpath is on the path's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.Contains(UglyToad.PdfPig.Graphics.PdfPath,UglyToad.PdfPig.Graphics.PdfPath,System.Boolean)">
            <summary>
            Whether the other path is located inside the path.
            </summary>
            <param name="path">The path that should contain the path.</param>
            <param name="other">The other path that should be contained within the path.</param>
            <param name="includeBorder">If set to false, will return false if the other subpath is on the path's border.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.GeometryExtensions.SolveCubicEquation(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Get the real roots of a Cubic (or Quadratic, a=0) equation.
            <para>ax^3 + bx^2 + cx + d = 0</para>
            </summary>
            <param name="a">ax^3</param>
            <param name="b">bx^2</param>
            <param name="c">cx</param>
            <param name="d">d</param>
        </member>
        <member name="T:UglyToad.PdfPig.Geometry.UserSpaceUnit">
            <summary>
            By default user space units correspond to 1/72nd of an inch (a typographic point).
            The UserUnit entry in a page dictionary can define the space units as a different multiple of 1/72 (1 point).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Geometry.UserSpaceUnit.PointMultiples">
            <summary>
            The number of points (1/72nd of an inch) corresponding to a single unit in user space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Geometry.UserSpaceUnit.#ctor(System.Int32)">
            <summary>
            Create a new unit specification for a page.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ChromaticAdaptation">
            <summary>
            Encapsulates the algorithm for chromatic adaptation described here:
            http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.CIEBasedColorSpaceTransformer">
            <summary>
            Transformer for CIEBased color spaces.
            <para>
            In addition to the PDF spec itself, the transformation implementation is based on the descriptions in:
            https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB) and
            http://www.brucelindbloom.com/index.html?Eqn_XYZ_to_RGB.html
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CIEBasedColorSpaceTransformer.TransformToRGB(System.ValueTuple{System.Double,System.Double,System.Double})">
            <summary>
            Transforms the supplied ABC color to the RGB color of the <see cref="T:UglyToad.PdfPig.Graphics.Colors.RGBWorkingSpace"/>
            that was supplied to this <see cref="T:UglyToad.PdfPig.Graphics.Colors.CIEBasedColorSpaceTransformer"/> as the destination
            workspace.
            A, B and C represent red, green and blue calibrated color values in the range 0 to 1.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.CMYKColor">
            <summary>
            A color with cyan, magenta, yellow and black (K) components.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.Black">
            <summary>
            CMYK Black value (0, 0, 0, 1).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.White">
            <summary>
            CMYK White value (all 0).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.C">
            <summary>
            The cyan value.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.M">
            <summary>
            The magenta value.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.Y">
            <summary>
            The yellow value.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CMYKColor.K">
            <summary>
            The black value.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.CMYKColor"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.ToRGBValues">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.Equals(UglyToad.PdfPig.Graphics.Colors.CMYKColor)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.op_Equality(UglyToad.PdfPig.Graphics.Colors.CMYKColor,UglyToad.PdfPig.Graphics.Colors.CMYKColor)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.op_Inequality(UglyToad.PdfPig.Graphics.Colors.CMYKColor,UglyToad.PdfPig.Graphics.Colors.CMYKColor)">
            <summary>
            Not Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CMYKColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace">
            <summary>
            Color values in a PDF are interpreted according to the current color space.
            Color spaces enable a PDF to specify abstract colors in a device independent way.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceGray">
            <summary>
            Grayscale. Controls the intensity of achromatic light on a scale from black to white.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceRGB">
            <summary>
            RGB. Controls the intensities of red, green and blue light.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceCMYK">
            <summary>
            CMYK. Controls the concentrations of cyan, magenta, yellow and black (K) inks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.CalGray">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            CalGray - Special case of the CIE colorspace using a single channel (A) and a single transformation.
            A represents the gray component of a calibrated gray space in the range 0 to 1.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.CalRGB">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            CalRGB - A CIE ABC color space with a single transformation.
            A, B and C represent red, green and blue color values in the range 0 to 1. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Lab">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            Lab - A CIE ABC color space with two transforms. A, B and C represent the L*, a* and b*
            components of a CIE 1976 L*a*b* space. The range of A (L*) is 0 to 100.
            The range of B (a*) and C (b*) are defined by the Range of the color space.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.ICCBased">
            <summary>
            ICC (International Color Consortium) colorspace.
            ICC - Colorspace specified by a sequence of bytes which are interpreted according to the
            ICC specification.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Indexed">
            <summary>
            An Indexed color space allows a PDF content stream to use small integers as indices into a color map or color table of arbitrary colors in some other space. 
            A PDF consumer application treats each sample value as an index into the color table and uses the color value it finds there. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Pattern">
            <summary>
            Enables a PDF content stream to paint an area with a pattern rather than a single color.
            The pattern may be either a tiling pattern (type 1) or a shading pattern (type 2).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Separation">
            <summary>
            Provides a means for specifying the use of additional colorants or for isolating the control of individual color components of
            a device color space for a subtractive device.
            When such a space is the current color space, the current color is a single-component value, called a tint,
            that controls the application of the given colorant or color components only. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceN">
            <summary>
            Can contain an arbitrary number of color components. They provide greater flexibility than is possible with standard device color
            spaces such as <see cref="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceCMYK"/> or with individual <see cref="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Separation"/> color spaces.
            For example, it is possible to create a DeviceN color space consisting of only the cyan, magenta, and yellow color components,
            with the black component excluded. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails">
            <summary>
            Contains more document-specific information about the <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.Type">
            <summary>
            The type of the ColorSpace.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.NumberOfColorComponents">
            <summary>
            The number of components for the color space.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.BaseType">
            <summary>
            The underlying type of <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>, usually equal to <see cref="P:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.Type"/>
            unless <see cref="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Indexed"/> or <see cref="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.DeviceN"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.BaseNumberOfColorComponents">
            <summary>
            The number of components for the underlying color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.#ctor(UglyToad.PdfPig.Graphics.Colors.ColorSpace)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.GetColor(System.Double[])">
            <summary>
            Get the color.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.Process(System.Double[])">
            <summary>
            Get the color, without check and caching.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.GetInitializeColor">
            <summary>
            Get the color that initialize the current stroking or nonstroking colour.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Transform image bytes.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails.ConvertToByte(System.Double)">
            <summary>
            Convert to byte.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails">
            <summary>
            A grayscale value is represented by a single number in the range 0.0 to 1.0,
            where 0.0 corresponds to black, 1.0 to white, and intermediate values to different gray levels.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.Instance">
            <summary>
            The single instance of the <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceGrayColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails">
            <summary>
            Color values are defined by three components representing the intensities of the additive primary colorants red, green and blue.
            Each component is specified by a number in the range 0.0 to 1.0, where 0.0 denotes the complete absence of a primary component and 1.0 denotes maximum intensity.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.Instance">
            <summary>
            The single instance of the <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceRgbColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails">
            <summary>
            Color values are defined by four components cyan, magenta, yellow and black.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.Instance">
            <summary>
            The single instance of the <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceCmykColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails">
            <summary>
            An Indexed color space allows a PDF content stream to use small integers as indices into a color map or color table of arbitrary colors in some other space.
            A PDF consumer treats each sample value as an index into the color table and uses the color value it finds there.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.Stencil(UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Double[])">
            <summary>
            Creates a indexed color space useful for extracting stencil masks as black-and-white images,
            i.e. with a color palette of two colors (black and white). If the decode parameter array is
            [0, 1] it indicates that black is at index 0 in the color palette, whereas [1, 0] indicates
            that the black color is at index 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.BaseNumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>In the case of <see cref="T:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails"/>, gets the <see cref="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.BaseColorSpace"/>' <c>BaseNumberOfColorComponents</c>.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.BaseColorSpace">
            <summary>
            The base color space in which the values in the color table are to be interpreted.
            It can be any device or CIE-based color space or (in PDF 1.3) a Separation or DeviceN space,
            but not a Pattern space or another Indexed space.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.HiVal">
            <summary>
            An integer that specifies the maximum valid index value. Can be no greater than 255.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.ColorTable">
            <summary>
            Provides the mapping between index values and the corresponding colors in the base color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.#ctor(UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Byte,System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IndexedColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            <inheritdoc/>
            <para>
            Unwrap then transform using base color space details.
            </para>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails">
            <summary>
            DeviceN colour spaces may contain an arbitrary number of colour components. They provide greater flexibility than
            is possible with standard device colour spaces such as DeviceCMYK or with individual Separation colour spaces.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.NumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>The 'N' in DeviceN.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.Names">
            <summary>
            Specifies name objects specifying the individual colour components. The length of the array shall
            determine the number of components in the DeviceN colour space.
            </summary>
            <remarks>
            The component names shall all be different from one another, except for the name None, which may be repeated.
            <para>
            The special name All, used by Separation colour spaces, shall not be used.
            </para>
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.AlternateColorSpace">
            <summary>
            If the colorant name associated with a DeviceN color space does not correspond to a colorant available on the device,
            the application arranges for subsequent painting operations to be performed in an alternate color space.
            The intended colors can be approximated by colors in a device or CIE-based color space
            which are then rendered with the usual primary or process colorants.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.Attributes">
            <summary>
            The optional attributes parameter shall be a dictionary containing additional information about the components of
            colour space that conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform
            parameters, and may instead use custom blending algorithms, along with other information provided in the attributes
            dictionary if present.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.TintFunction">
            <summary>
            During subsequent painting operations, an application calls this function to transform a tint value into
            color component values in the alternate color space.
            The function is called with the tint value and must return the corresponding color component values.
            That is, the number of components and the interpretation of their values depend on the <see cref="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.AlternateColorSpace"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.#ctor(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Tokens.NameToken},UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,UglyToad.PdfPig.Functions.PdfFunction,System.Nullable{UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes">
            <summary>
            DeviceN Color Space Attributes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.Subtype">
            <summary>
            A name specifying the preferred treatment for the colour space. Values shall be <c>DeviceN</c> or <c>NChannel</c>. Default value: <c>DeviceN</c>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.Colorants">
            <summary>
            Colorants - dictionary - Required if Subtype is NChannel and the colour space includes spot colorants; otherwise optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.Process">
            <summary>
            Process - dictionary - Required if Subtype is NChannel and the colour space includes components of a process colour space, otherwise optional.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.MixingHints">
            <summary>
            MixingHints - dictionary - Optional
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.#ctor">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.DeviceNColorSpaceDetails.DeviceNColorSpaceAttributes"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails">
            <summary>
            A Separation color space provides a means for specifying the use of additional colorants or
            for isolating the control of individual color components of a device color space for a subtractive device.
            When such a space is the current color space, the current color is a single-component value, called a tint,
            that controls the application of the given colorant or color components only.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.Name">
            <summary>
            Specifies the name of the colorant that this Separation color space is intended to represent.
            </summary>
            <remarks>
            <para>
            The special colorant name All refers collectively to all colorants available on an output device,
            including those for the standard process colorants.
            </para>
            <para>
            The special colorant name None never produces any visible output.
            Painting operations in a Separation space with this colorant name have no effect on the current page.
            </para>
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.AlternateColorSpace">
            <summary>
            If the colorant name associated with a Separation color space does not correspond to a colorant available on the device,
            the application arranges for subsequent painting operations to be performed in an alternate color space.
            The intended colors can be approximated by colors in a device or CIE-based color space
            which are then rendered with the usual primary or process colorants.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.TintFunction">
            <summary>
            During subsequent painting operations, an application calls this function to transform a tint value into
            color component values in the alternate color space.
            The function is called with the tint value and must return the corresponding color component values.
            That is, the number of components and the interpretation of their values depend on the <see cref="P:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.AlternateColorSpace"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,UglyToad.PdfPig.Functions.PdfFunction)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.SeparationColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            CalGray - A CIE A color space with a single transformation.
            A represents the gray component of a calibrated gray space. The component must be in the range 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.WhitePoint">
            <summary>
            An array of three numbers [XW  YW  ZW] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse white point. The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.BlackPoint">
            <summary>
            An array of three numbers [XB  YB  ZB] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse black point. All three numbers must be non-negative. Default value: [0.0  0.0  0.0].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.Gamma">
            <summary>
            A number defining the gamma for the gray (A) component. Gamma must be positive and is generally
            greater than or equal to 1. Default value: 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.#ctor(System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double},System.Nullable{System.Double})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.TransformToRGB(System.Double)">
            <summary>
            Transforms the supplied A color to grayscale RGB (sRGB) using the propties of this
            <see cref="T:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails"/> in the transformation process.
            A represents the gray component of a calibrated gray space. The component must be in the range 0.0 to 1.0.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalGrayColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            CalRGB - A CIE ABC color space with a single transformation.
            A, B and C represent red, green and blue color values in the range 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.WhitePoint">
            <summary>
            An array of three numbers [XW  YW  ZW] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse white point. The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.BlackPoint">
            <summary>
            An array of three numbers [XB  YB  ZB] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse black point. All three numbers must be non-negative. Default value: [0.0  0.0  0.0].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.Gamma">
            <summary>
            An array of three numbers [GR  GG  GB] specifying the gamma for the red, green and blue (A, B, C) components
            of the color space. Default value: [1.0  1.0  1.0].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.Matrix">
            <summary>
            An array of nine numbers [XA  YA  ZA  XB  YB  ZB  XC  YC  ZC] specifying the linear interpretation of the
            decoded A, B, C components of the color space with respect to the final XYZ representation. Default value:
            [1  0  0  0  1  0  0  0  1].
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.#ctor(System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.TransformToRGB(System.ValueTuple{System.Double,System.Double,System.Double})">
            <summary>
            Transforms the supplied ABC color to RGB (sRGB) using the propties of this <see cref="T:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails"/>
            in the transformation process.
            A, B and C represent red, green and blue calibrated color values in the range 0.0 to 1.0.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CalRGBColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails">
            <summary>
            CIE (Commission Internationale de l'Éclairage) colorspace.
            Specifies color related to human visual perception with the aim of producing consistent color on different output devices.
            CalRGB - A CIE ABC color space with a single transformation.
            A, B and C represent red, green and blue color values in the range 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.NumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.WhitePoint">
            <summary>
            An array of three numbers [XW  YW  ZW] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse white point. The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.BlackPoint">
            <summary>
            An array of three numbers [XB  YB  ZB] specifying the tristimulus value, in the CIE 1931 XYZ space of the
            diffuse black point. All three numbers must be non-negative. Default value: [0.0  0.0  0.0].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.Matrix">
            <summary>
            An array of four numbers [a_min a_max b_min b_max] that shall specify the range of valid values for the a* and b* (B and C)
            components of the colour space — that is, a_min ≤ a* ≤ a_max and b_min ≤ b* ≤ b_max
            <para>Component values falling outside the specified range shall be adjusted to the nearest valid value without error indication.</para>
            Default value: [−100 100 −100 100].
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.#ctor(System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.TransformToRGB(System.ValueTuple{System.Double,System.Double,System.Double})">
            <summary>
            Transforms the supplied ABC color to RGB (sRGB) using the properties of this <see cref="T:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails"/>
            in the transformation process.
            A, B and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. The range of the first (L*)
            component shall be 0 to 100; the ranges of the second and third (a* and b*) components shall be defined by
            the Range entry in the colour space dictionary
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LabColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails">
            <summary>
            The ICCBased color space is one of the CIE-based color spaces supported in PDFs. These color spaces
            enable a page description to specify color values in a way that is related to human visual perception.
            The goal is for the same color specification to produce consistent results on different output devices,
            within the limitations of each device.
            <para>
            Currently support for this color space is limited in PdfPig. Calculations will only be based on
            the color space of <see cref="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.AlternateColorSpace"/>.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.NumberOfColorComponents">
            <summary>
            The number of color components in the color space described by the ICC profile data.
            This numbers shall match the number of components actually in the ICC profile.
            Valid values are 1, 3 and 4.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.BaseNumberOfColorComponents">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.AlternateColorSpace">
            <summary>
            An alternate color space that can be used in case the one specified in the stream data is not
            supported. Non-conforming readers may use this color space. The alternate color space may be any
            valid color space (except a Pattern color space). If this property isn't explicitly set during
            construction, it will assume one of the color spaces, DeviceGray, DeviceRGB or DeviceCMYK depending
            on whether the value of <see cref="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.NumberOfColorComponents"/> is 1, 3 or respectively.
            <para>
            Conversion of the source color values should not be performed when using the alternate color space.
            Color values within the range of the ICCBased color space might not be within the range of the
            alternate color space. In this case, the nearest values within the range of the alternate space
            must be substituted.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.Range">
            <summary>
            A list of 2 x <see cref="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.NumberOfColorComponents"/> numbers [min0 max0  min1 max1  ...] that
            specifies the minimum and maximum valid values of the corresponding color components. These
            values must match the information in the ICC profile. Default value: [0.0 1.0  0.0 1.0  ...].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.Metadata">
            <summary>
            An optional metadata stream that contains metadata for the color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.#ctor(System.Int32,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Collections.Generic.IReadOnlyList{System.Double},UglyToad.PdfPig.Content.XmpMetadata)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ICCBasedColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails">
            <summary>
            Pattern color space.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.Patterns">
            <summary>
            The pattern dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.NumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.BaseNumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>
            Valid for Uncoloured Tiling Patterns. Wwill throw a <see cref="T:System.InvalidOperationException"/> otherwise.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.UnderlyingColourSpace">
            <summary>
            The underlying color space for Uncoloured Tiling Patterns.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.#ctor(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Graphics.Colors.PatternColor},UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails"/>.
            </summary>
            <param name="patterns">The patterns.</param>
            <param name="underlyingColourSpace">The underlying colour space for Uncoloured Tiling Patterns.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.GetColor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Get the corresponding <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColor"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.Process(System.Double[])">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.GetColor(System.Double[])">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            Use <see cref="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.GetColor(UglyToad.PdfPig.Tokens.NameToken)"/> instead.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.GetInitializeColor">
            <summary>
            <inheritdoc/>
            </summary>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails">
            <summary>
            A ColorSpace which the PdfPig library does not currently support. Please raise a PR if you need support for this ColorSpace.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.Instance">
            <summary>
            The single instance of the <see cref="T:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.NumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.BaseNumberOfColorComponents">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.Process(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.GetColor(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.GetInitializeColor">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.UnsupportedColorSpaceDetails.Transform(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceExtensions">
            <summary>
            Provides utility extension methods for dealing with <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>s.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceExtensions.GetFamily(UglyToad.PdfPig.Graphics.Colors.ColorSpace)">
            <summary>
            Gets the corresponding <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceFamily"/> for a given <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceExtensions.TryMapToColorSpace(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Graphics.Colors.ColorSpace@)">
            <summary>
            Maps from a <see cref="T:UglyToad.PdfPig.Tokens.NameToken"/> to the corresponding <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/> if one exists.
            <para>Includes extended color spaces.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ColorSpaceExtensions.ToNameToken(UglyToad.PdfPig.Graphics.Colors.ColorSpace)">
            <summary>
            Gets the corresponding <see cref="T:UglyToad.PdfPig.Tokens.NameToken"/> for a given <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceFamily">
            <summary>
            <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>s can be classified into colorspace families.
            <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpace"/>s within the same family share general characteristics.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpaceFamily.Device">
            <summary>
            Device colorspaces directly specify colors or shades of gray that the output device
            should produce.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpaceFamily.CIEBased">
            <summary>
            CIE-based color spaces are based on an international standard for color specification created by
            the Commission Internationale de l'Éclairage (International Commission on Illumination) (CIE).
            These spaces specify colors in a way that is independent of the characteristics of any particular output device.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ColorSpaceFamily.Special">
            <summary>
            Special color spaces add features or properties to an underlying color space.
            They include facilities for patterns, color mapping, separations, and high-fidelity and multitone color. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.GrayColor">
            <summary>
            A grayscale color with a single gray component.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.GrayColor.Black">
            <summary>
            Gray Black value (0).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.GrayColor.White">
            <summary>
            Gray White value (1).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.GrayColor.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.GrayColor.Gray">
            <summary>
            The gray value between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.#ctor(System.Double)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.GrayColor"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.ToRGBValues">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.Equals(UglyToad.PdfPig.Graphics.Colors.GrayColor)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.op_Equality(UglyToad.PdfPig.Graphics.Colors.GrayColor,UglyToad.PdfPig.Graphics.Colors.GrayColor)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.op_Inequality(UglyToad.PdfPig.Graphics.Colors.GrayColor,UglyToad.PdfPig.Graphics.Colors.GrayColor)">
            <summary>
            Not Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.GrayColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.IColor">
            <summary>
            A color used for text or paths in a PDF.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.IColor.ColorSpace">
            <summary>
            The colorspace used for this color.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.IColor.ToRGBValues">
            <summary>
            The color as RGB values (between 0 and 1).
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.PatternColor">
            <summary>
            A pattern color.
            <para>
            Base class for <see cref="T:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor"/> and <see cref="T:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor"/>.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColor.PatternType">
            <summary>
            1 for tiling, 2 for shading.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColor.PatternDictionary">
            <summary>
            The dictionary defining the pattern.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColor.ExtGState">
            <summary>
            Graphics state parameter dictionary containing graphics state parameters to be put into effect temporarily while the shading
            pattern is painted. Any parameters that are so specified shall be inherited from the graphics state that was in effect at the
            beginning of the content stream in which the pattern is defined as a resource.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColor.Matrix">
            <summary>
            The pattern matrix (see 8.7.2, "General Properties of Patterns"). Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColor.#ctor(UglyToad.PdfPig.Graphics.Colors.PatternType,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Core.TransformationMatrix)">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.PatternColor.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColor.ToRGBValues">
            <summary>
            <inheritdoc/>
            <para>
            Cannot be called for <see cref="T:UglyToad.PdfPig.Graphics.Colors.PatternColor"/>, will throw a <see cref="T:System.InvalidOperationException"/>.
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.PatternColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor">
            <summary>
            A tiling pattern consists of a small graphical figure called a pattern cell. Painting with the pattern
            replicates the cell at fixed horizontal and vertical intervals to fill an area. The effect is as if the
            figure were painted on the surface of a clear glass tile, identical copies of which were then laid down
            in an array covering the area and trimmed to its boundaries.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.PatternStream">
            <summary>
            Content stream containing the painting operators needed to paint one instance of the cell.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.PaintType">
            <summary>
            A code that determines how the colour of the pattern cell shall be specified.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.TilingType">
            <summary>
            A code that controls adjustments to the spacing of tiles relative to the device pixel grid:.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.BBox">
            <summary>
            The pattern cell's bounding box. These boundaries shall be used to clip the pattern cell.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.XStep">
            <summary>
            The desired horizontal spacing between pattern cells, measured in the pattern coordinate system.
            <para>
            XStep and YStep may differ from the dimensions of the pattern cell implied by the BBox entry. This allows tiling with irregularly shaped figures.
            XStep and YStep may be either positive or negative but shall not be zero.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.YStep">
            <summary>
            The desired vertical spacing between pattern cells, measured in the pattern coordinate system.
            <para>
            XStep and YStep may differ from the dimensions of the pattern cell implied by the BBox entry. This allows tiling with irregularly shaped figures.
            XStep and YStep may be either positive or negative but shall not be zero.
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.Resources">
            <summary>
            A resource dictionary that shall contain all of the named resources required by the pattern's content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.Data">
            <summary>
            Content containing the painting operators needed to paint one instance of the cell.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.#ctor(UglyToad.PdfPig.Core.TransformationMatrix,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Graphics.Colors.PatternPaintType,UglyToad.PdfPig.Graphics.Colors.PatternTilingType,UglyToad.PdfPig.Core.PdfRectangle,System.Double,System.Double,UglyToad.PdfPig.Tokens.DictionaryToken,System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.Equals(UglyToad.PdfPig.Graphics.Colors.TilingPatternColor)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.ToString">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.op_Equality(UglyToad.PdfPig.Graphics.Colors.TilingPatternColor,UglyToad.PdfPig.Graphics.Colors.TilingPatternColor)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TilingPatternColor.op_Inequality(UglyToad.PdfPig.Graphics.Colors.TilingPatternColor,UglyToad.PdfPig.Graphics.Colors.TilingPatternColor)">
            <summary>
            Not Equals.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor">
            <summary>
            Shading patterns provide a smooth transition between colours across an area to be painted, independent of
            the resolution of any particular output device and without specifying the number of steps in the colour transition.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.Shading">
            <summary>
            A shading object defining the shading pattern's gradient fill.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.#ctor(UglyToad.PdfPig.Core.TransformationMatrix,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.Shading)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.Equals(UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.op_Equality(UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor,UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor.op_Inequality(UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor,UglyToad.PdfPig.Graphics.Colors.ShadingPatternColor)">
            <summary>
            Not Equals.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.PatternType">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternType.Tiling">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternType.Shading">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.PatternPaintType">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternPaintType.Coloured">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternPaintType.Uncoloured">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.PatternTilingType">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternTilingType.ConstantSpacing">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternTilingType.NoDistortion">
            <summary>
            TODO
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.PatternTilingType.ConstantSpacingFasterTiling">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ResourceColorSpace">
            <summary>
            A color space definition from a resource dictionary.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.RGBColor">
            <summary>
            A color with red, green and blue components.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.RGBColor.Black">
            <summary>
            RGB Black value (all 0).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.RGBColor.White">
            <summary>
            RGB White value (all 1).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RGBColor.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RGBColor.R">
            <summary>
            The red value between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RGBColor.G">
            <summary>
            The green value between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RGBColor.B">
            <summary>
            The blue value between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.RGBColor"/>.
            </summary>
            <param name="r">The red value between 0 and 1.</param>
            <param name="g">The green value between 0 and 1.</param>
            <param name="b">The blue value between 0 and 1.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.ToRGBValues">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.Equals(UglyToad.PdfPig.Graphics.Colors.RGBColor)">
            <inheritdoc />
            <summary>
            Whether 2 RGB colors are equal across all channels.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.op_Equality(UglyToad.PdfPig.Graphics.Colors.RGBColor,UglyToad.PdfPig.Graphics.Colors.RGBColor)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.op_Inequality(UglyToad.PdfPig.Graphics.Colors.RGBColor,UglyToad.PdfPig.Graphics.Colors.RGBColor)">
            <summary>
            Not Equals.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RGBColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.Shading">
            <summary>
            A shading specifies details of a particular gradient fill, including the type
            of shading to be used, the geometry of the area to be shaded, and the geometry of the
            gradient fill. Various shading types are available, depending on the value of the
            dictionary's ShadingType entry.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.ShadingDictionary">
            <summary>
            The dictionary defining the shading.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.ShadingType">
            <summary>
            The shading type.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.ColorSpace">
            <summary>
            The colour space in which colour values shall beexpressed.
            This may be any device, CIE-based, or special colour space except a Pattern space.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.Background">
            <summary>
            An array of colour components appropriate to the colour space,
            specifying a single background colour value. If present, this
            colour shall be used, before any painting operation involving
            the shading, to fill those portions of the area to be painted
            that lie outside the bounds of the shading object.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.BBox">
            <summary>
            The shading's bounding box. The coordinates shall be interpreted
            in the shading's target coordinate space. If present, this bounding
            box shall be applied as a temporary clipping boundary when the shading
            is painted, in addition to the current clipping path and any other
            clipping boundaries in effect at that time.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.AntiAlias">
            <summary>
            The shading operators sample shading functions at a rate determined by
            the resolution of the output device. Aliasing can occur if the function
            is not smooth—that is, if it has a high spatial frequency relative to
            the sampling rate. Anti-aliasing can be computationally expensive and 
            is usually unnecessary, since most shading functions are smooth enough
            or are sampled at a high enough frequency to avoid aliasing effects.
            Anti-aliasing may not be implemented on some output devices, in which
            case this flag is ignored.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.Shading.#ctor(UglyToad.PdfPig.Graphics.Colors.ShadingType,System.Boolean,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.Shading"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.Shading.Functions">
            <summary>
            The shading's function(s), if any.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.Shading.Eval(System.Double[])">
            <summary>
            Convert the input values using the functions of the shading.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading">
            <summary>
            Function-based shadings (type 1) define the colour of every point in the domain using a
            mathematical function (not necessarily smooth or continuous).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading.Domain">
            <summary>
            (Optional) An array of four numbers [xmin xmax ymin ymax] specifying the rectangular domain of
            coordinates over which the colour function(s) are defined.
            <para>
            Default value: [0.0 1.0 0.0 1.0].
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading.Matrix">
            <summary>
            (Optional) An array of six numbers specifying a transformation matrix mapping the coordinate
            space specified by the Domain entry into the shading's target coordinate space.
            <para>
            Default value: the identity matrix [1 0 0 1 0 0].
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading.Functions">
            <summary>
            (Required) A 2-in, n-out function or an array of n 2-in, 1-out functions (where n is the
            number of colour components in the shading dictionary's colour space).
            Each function's domain shall be a superset of that of the shading dictionary.
            If the value returned by the function for a given colour component is out of
            range, it shall be adjusted to the nearest valid value.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Double[],UglyToad.PdfPig.Core.TransformationMatrix,UglyToad.PdfPig.Functions.PdfFunction[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.FunctionBasedShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.AxialShading">
            <summary>
            Axial shadings (type 2) define a colour blend along a line between two points, optionally
            extended beyond the boundary points by continuing the boundary colours.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.AxialShading.Coords">
            <summary>
            (Required) An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates
            of the axis, expressed in the shading's target coordinate space.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.AxialShading.Domain">
            <summary>
            (Optional) An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t.
            The variable is considered to vary linearly between these two values as the colour gradient
            varies between the starting and ending points of the axis. The variable t becomes the input
            argument to the colour function(s). Default value: [0.0 1.0].
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.AxialShading.Functions">
            <summary>
            (Required) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of
            colour components in the shading dictionary's colour space). The function(s) shall be
            called with values of the parametric variable t in the domain defined by the Domain entry.
            Each function's domain shall be a superset of that of the shading dictionary. If the value
            returned by the function for a given colour component is out of range, it shall be adjusted
            to the nearest valid value.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.AxialShading.Extend">
            <summary>
            (Optional) An array of two boolean values specifying whether to extend the shading beyond the starting
            and ending points of the axis, respectively. Default value: [false false].
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.AxialShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Double[],System.Double[],UglyToad.PdfPig.Functions.PdfFunction[],System.Boolean[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.AxialShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.RadialShading">
            <summary>
            Radial shadings (type 3) define a blend between two circles, optionally extended beyond the
            boundary circles by continuing the boundary colours. This type of shading is commonly used
            to represent three-dimensional spheres and cones.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RadialShading.Coords">
            <summary>
            (Required) An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting
            and ending circles, expressed in the shading's target coordinate space. The radii r0 and r1
            shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall
            be treated as a point; if both are 0, nothing shall be painted.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RadialShading.Domain">
            <summary>
            (Optional) An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t.
            The variable is considered to vary linearly between these two values as the colour gradient
            varies between the starting and ending circles. The variable t becomes the input argument
            to the colour function(s).
            <para>
            Default value: [0.0 1.0].
            </para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RadialShading.Functions">
            <summary>
            (Required) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of
            colour components in the shading dictionary's colour space). The function(s) shall be
            called with values of the parametric variable t in the domain defined by the shading
            dictionary's Domain entry. Each function’s domain shall be a superset of that of the
            shading dictionary. If the value returned by the function for a given colour component
            is out of range, it shall be adjusted to the nearest valid value.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.RadialShading.Extend">
            <summary>
            (Optional) An array of two boolean values specifying whether to extend the shading beyond the starting
            and ending points of the axis, respectively.
            <para>
            Default value: [false false].
            </para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.RadialShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Double[],System.Double[],UglyToad.PdfPig.Functions.PdfFunction[],System.Boolean[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.RadialShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading">
            <summary>
            Free-form Gouraud-shaded triangle meshes (type 4) define a common construct used by many
            three-dimensional applications to represent complex coloured and shaded shapes. Vertices
            are specified in free-form geometry.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.BitsPerCoordinate">
            <summary>
            (Required) The number of bits used to represent each vertex coordinate.
            The value shall be 1, 2, 4, 8, 12, 16, 24, or 32.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.BitsPerComponent">
            <summary>
            (Required) The number of bits used to represent each colour component.
            The value shall be 1, 2, 4, 8, 12, or 16.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.BitsPerFlag">
            <summary>
            (Required) The number of bits used to represent the edge flag for each vertex (see below).
            The value of BitsPerFlag shall be 2, 4, or8, but only the least significant 2 bits
            in each flag value shall beused. The value for the edge flag shall be 0, 1, or 2.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.Decode">
            <summary>
            (Required) An array of numbers specifying how to map vertex coordinates and colour components
            into the appropriate ranges of values. The decoding method is similar to that used
            in image dictionaries. The ranges shall bespecified as follows:
            [xmin xmax ymin ymax c1, min c1, max … cn, min cn, max]
            Only one pair of c values shall be specified if a Function entry is present.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.Functions">
            <summary>
            (Optional) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n
            is the number of colour components in the shading dictionary's colour space). If
            this entry is present, the colour data for each vertex shall be specified by a
            single parametric variable rather than by n separate colour components.
            The designated function(s) shall be called with each interpolated value of the
            parametric variable to determine the actual colour at each point. Each input
            value shall be forced into the range interval specified for the corresponding
            colour component in the shading dictionary's Decode array. Each function’s
            domain shall be a superset of that interval. If the value returned by the
            function for a given colour component is out of range, it shall be adjusted
            to the nearest valid value.
            This entry shall not be used with an Indexed colour space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Int32,System.Int32,System.Int32,System.Double[],UglyToad.PdfPig.Functions.PdfFunction[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.FreeFormGouraudShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading">
            <summary>
            Lattice-form Gouraud-shaded triangle meshes (type 5) are based on the same geometrical
            construct as type 4 but with vertices specified as a pseudorectangular lattice.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.BitsPerCoordinate">
            <summary>
            (Required) The number of bits used to represent each vertex coordinate.
            The value shall be 1, 2, 4, 8, 12, 16, 24, or 32.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.BitsPerComponent">
            <summary>
            (Required) The number of bits used to represent each colour component.
            The value shall be 1, 2, 4, 8, 12, or 16.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.VerticesPerRow">
            <summary>
            (Required) The number of vertices in each row of the lattice; the value shall be greater than
            or equal to 2. The number of rows need not be specified.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.Decode">
            <summary>
            (Required) An array of numbers specifying how to map vertex coordinates and colour components
            into the appropriate ranges of values. The decoding method is similar to that used
            in image dictionaries. The ranges shall bespecified as follows:
            [xmin xmax ymin ymax c1, min c1, max … cn, min cn, max]
            Only one pair of c values shall be specified if a Function entry is present.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.Functions">
            <summary>
            (Optional) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number
            of colour components in the shading dictionary's colour space). If this entry is present,
            the colour data for each vertex shall be specified by a single parametric variable rather
            than by n separate colour components. The designated function(s) shall be called with each
            interpolated value of the parametric variable to determine the actual colour at each point.
            Each input value shall be forced into the range interval specified for the corresponding
            colour component in the shading dictionary's Decode array. Each function's domain shall be
            a superset of that interval. If the value returned by the function for a given colour
            component is out of range, it shall be adjusted to the nearest valid value.
            This entry shall not be used with an Indexed colour space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Int32,System.Int32,System.Int32,System.Double[],UglyToad.PdfPig.Functions.PdfFunction[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.LatticeFormGouraudShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading">
            <summary>
            Coons patch meshes (type 6) construct a shading from one or more colour patches, each
            bounded by four cubic Bézier curves.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.BitsPerCoordinate">
            <summary>
            (Required) The number of bits used to represent each vertex coordinate.
            The value shall be 1, 2, 4, 8, 12, 16, 24, or 32.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.BitsPerComponent">
            <summary>
            (Required) The number of bits used to represent each colour component.
            The value shall be 1, 2, 4, 8, 12, or 16.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.BitsPerFlag">
            <summary>
            (Required) The number of bits used to represent the edge flag for each patch (see below).
            The value shall be 2, 4, or 8, but only the least significant 2 bits in each flag
            value shall be used. Valid values for the edge flag shall be 0, 1, 2, and 3.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.Decode">
            <summary>
            (Required) An array of numbers specifying how to map coordinates and colour components into the
            appropriate ranges of values. The decoding method is similar to that used in image
            dictionaries. The ranges shall be specified as follows:
            [xmin xmax ymin ymax c1, min c1, max … cn, min cn, max]
            Only one pair of c values shall be specified if a Function entry is present.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.Functions">
            <summary>
            (Optional) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is
            the number of colour components in the shading dictionary's colour space). If this
            entry is present, the colour data for each vertex shall be specified by a single
            parametric variable rather than by n separate colour components. The designated
            function(s) shall be called with each interpolated value of the parametric variable
            to determine the actual colour at each point. Each input value shall be forced into
            the range interval specified for the corresponding colour component in the shading
            dictionary's Decode array. Each function’s domain shall be a superset of that interval.
            If the value returned by the function for a given colour component is out of range, it
            shall be adjusted to the nearest valid value.
            This entry shall not be used with an Indexed colour space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Int32,System.Int32,System.Int32,System.Double[],UglyToad.PdfPig.Functions.PdfFunction[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.CoonsPatchMeshesShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading">
            <summary>
            Tensor-product patch meshes (type 7) are similar to type 6 but with additional control
            points in each patch, affording greater control over colour mapping.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.BitsPerCoordinate">
            <summary>
            (Required) The number of bits used to represent each vertex coordinate.
            The value shall be 1, 2, 4, 8, 12, 16, 24, or 32.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.BitsPerComponent">
            <summary>
            (Required) The number of bits used to represent each colour component.
            The value shall be 1, 2, 4, 8, 12, or 16.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.BitsPerFlag">
            <summary>
            (Required) The number of bits used to represent the edge flag for each patch (see below).
            The value shall be 2, 4, or 8, but only the least significant 2 bits in each flag
            value shall be used. Valid values for the edge flag shall be 0, 1, 2, and 3.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.Decode">
            <summary>
            (Required) An array of numbers specifying how to map coordinates and colour components into the
            appropriate ranges of values. The decoding method is similar to that used in image
            dictionaries. The ranges shall be specified as follows:
            [xmin xmax ymin ymax c1, min c1, max … cn, min cn, max]
            Only one pair of c values shall be specified if a Function entry is present.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.Functions">
            <summary>
            (Optional) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is
            the number of colour components in the shading dictionary's colour space). If this
            entry is present, the colour data for each vertex shall be specified by a single
            parametric variable rather than by n separate colour components. The designated
            function(s) shall be called with each interpolated value of the parametric variable
            to determine the actual colour at each point. Each input value shall be forced into
            the range interval specified for the corresponding colour component in the shading
            dictionary's Decode array. Each function’s domain shall be a superset of that interval.
            If the value returned by the function for a given colour component is out of range, it
            shall be adjusted to the nearest valid value.
            This entry shall not be used with an Indexed colour space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading.#ctor(System.Boolean,UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Nullable{UglyToad.PdfPig.Core.PdfRectangle},System.Double[],System.Int32,System.Int32,System.Int32,System.Double[],UglyToad.PdfPig.Functions.PdfFunction[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Colors.TensorProductPatchMeshesShading"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Colors.ShadingType">
            <summary>
            Shading types.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.FunctionBased">
            <summary>
            Function-based shading.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.Axial">
            <summary>
            Axial shading.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.Radial">
            <summary>
            Radial shading.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.FreeFormGouraud">
            <summary>
            Free-form Gouraud-shaded triangle mesh.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.LatticeFormGouraud">
            <summary>
            Lattice-form Gouraud-shaded triangle mesh.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.CoonsPatch">
            <summary>
            Coons patch mesh.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Colors.ShadingType.TensorProductPatch">
            <summary>
            Tensor-product patch mesh
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.ContentStreamProcessor.letters">
            <summary>
            Stores each letter as it is encountered in the content stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.ContentStreamProcessor.paths">
            <summary>
            Stores each path as it is encountered in the content stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.ContentStreamProcessor.images">
            <summary>
            Stores a link to each image (either inline or XObject) as it is encountered in the content stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.ContentStreamProcessor.markedContents">
            <summary>
            Stores each marked content as it is encountered in the content stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.ContentStreamProcessor.textSequence">
            <summary>
            A counter to track individual calls to <see cref="M:UglyToad.PdfPig.Graphics.ContentStreamProcessor.ShowText(UglyToad.PdfPig.Core.IInputBytes)"/> operations used to determine if letters are likely to be
            in the same word/group. This exposes internal grouping of letters used by the PDF creator which may correspond to the
            intended grouping of letters into words.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Core.LineCapStyle">
            <summary>
            The line cap style specifies the shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineCapStyle.Butt">
            <summary>
             The stroke is squared off at the endpoint of the path. There is no projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineCapStyle.Round">
            <summary>
             A semicircular arc with a diameter equal to the line width is drawn around the endpoint and filled in. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineCapStyle.ProjectingSquare">
            <summary>
             The stroke continues beyond the endpoint of the path for a distance equal to half the line width and is squared off. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Core.LineDashPattern">
            <summary>
            The line dash pattern controls the pattern of dashes and gaps used to stroke paths.
            It is specified by a dash array and a dash phase. 
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Core.LineDashPattern.Phase">
            <summary>
            The distance into the dash pattern at which to start the dash.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Core.LineDashPattern.Array">
            <summary>
            The numbers that specify the lengths of alternating dashes and gaps.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Core.LineDashPattern.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Core.LineDashPattern"/>.
            </summary>
            <param name="phase">The phase. <see cref="P:UglyToad.PdfPig.Graphics.Core.LineDashPattern.Phase"/>.</param>
            <param name="array">The array. <see cref="P:UglyToad.PdfPig.Graphics.Core.LineDashPattern.Array"/>.</param>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Core.LineDashPattern.Solid">
            <summary>
            The default solid line.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Core.LineDashPattern.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Core.LineJoinStyle">
            <summary>
            The line join style specifies the shape to be used at the corners of paths that are stroked.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineJoinStyle.Miter">
            <summary>
            The outer edges of the strokes for the two segments are extended until they meet at an angle, as in a picture frame. 
            If the segments meet at too sharp an angle (as defined by the miter limit parameter), a bevel join is used instead. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineJoinStyle.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn around the point where the two segments meet, 
            connecting the outer edges of the strokes for the two segments
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.LineJoinStyle.Bevel">
            <summary>
             The two segments are finished with butt caps and the resulting notch beyond the ends of the segments is filled with a triangle. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Core.RenderingIntent">
            <summary>
            Specifying a rendering intent allows a PDF file to set priorities regarding which properties to preserve and which to sacrifice for CIE colors. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.RenderingIntent.AbsoluteColorimetric">
            <summary>
            No correction for the output medium's white point. Colors 
            only represented relative to the light source.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.RenderingIntent.RelativeColorimetric">
            <summary>
            Combines light source and output medium's white point.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.RenderingIntent.Saturation">
            <summary>
            Emphasises saturation rather than colorimetric accuracy.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Core.RenderingIntent.Perceptual">
            <summary>
            Modifies from colorimetric values to provide a "pleasing perceptual appearance".
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.CurrentFontState">
            <summary>
            The current state of text related parameters for a content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.FromExtendedGraphicsState">
            <summary>
            Whether the font comes from the extended graphics state via the <see cref="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary"/> operator.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.CharacterSpacing">
            <summary>
            A value in unscaled text space units which is added to the horizontal (or vertical if in vertical writing mode)
            glyph displacement.
            </summary>
            <remarks>
            In horizontal writing mode a positive value will expand the distance between letters/glyphs.
            Default value 0.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.WordSpacing">
            <summary>
            As for <see cref="P:UglyToad.PdfPig.Graphics.CurrentFontState.CharacterSpacing"/> but applies only for the space character (32).
            </summary>
            <remarks>
            Default value 0.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.HorizontalScaling">
            <summary>
            Adjusts the width of glyphs/letters by stretching (or compressing) them horizontally.
            Value is a percentage of the normal width.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.Leading">
            <summary>
            The vertical distance in unscaled text space units between the baselines of lines of text.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.FontName">
            <summary>
            The name of the currently active font.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.FontSize">
            <summary>
            The current font size.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.TextRenderingMode">
            <summary>
            The <see cref="P:UglyToad.PdfPig.Graphics.CurrentFontState.TextRenderingMode"/> for glyph outlines.
            </summary>
            <remarks>
            When the rendering mode requires filling the current non-stroking color in the state is used.<br/>
            When the rendering mode requires stroking the current stroking color in the state is used.<br/>
            The rendering mode has no impact on Type 3 fonts.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.Rise">
            <summary>
            The distance in unscaled text space units to move the default baseline either up or down.
            </summary>
            <remarks>
            Always applies to the vertical coordinate irrespective or writing mode.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentFontState.Knockout">
            <summary>
            Are all glyphs in a text object treated as a single elementary object for the purpose of the transparent imaging model?
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.CurrentFontState.DeepClone">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.CurrentGraphicsState">
            <summary>
            The state of the current graphics control parameters set by operations in the content stream.
            </summary>
            <remarks>
            Initialized per page.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.CurrentClippingPath">
            <summary>
            The current clipping path.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.FontState">
            <summary>
            The <see cref="T:UglyToad.PdfPig.Graphics.CurrentFontState"/> for this graphics state.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.LineWidth">
            <summary>
            Thickness in user space units of path to be stroked.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.CapStyle">
            <summary>
            Specifies the shape of line ends for open stroked paths.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.JoinStyle">
            <summary>
            Specifies the shape of joins between connected stroked path segments.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.MiterLimit">
            <summary>
            Maximum length of mitered line joins for paths before becoming a bevel.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.LineDashPattern">
            <summary>
            The pattern to be used for stroked lines.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.RenderingIntent">
            <summary>
            The rendering intent to use when converting CIE-based colors to device colors.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.StrokeAdjustment">
            <summary>
            Should a correction for rasterization effects be applied?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.AlphaConstantStroking">
            <summary>
            Opacity value to be used for transparent imaging.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.AlphaConstantNonStroking">
            <summary>
            Opacity value to be used for transparent imaging.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.AlphaSource">
            <summary>
            Should soft mask and alpha constant values be interpreted as shape (<see langword="true"/>) or opacity (<see langword="false"/>) values?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.CurrentTransformationMatrix">
            <summary>
            Maps positions from user coordinates to device coordinates.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.ColorSpaceContext">
            <summary>
            The active colorspaces for this content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.CurrentStrokingColor">
            <summary>
            The current active stroking color for paths.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.CurrentNonStrokingColor">
            <summary>
            The current active non-stroking color for text and fill.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.Overprint">
            <summary>
            Should painting in a colorant set erase (<see langword="false"/>)
            or leave unchanged (<see langword="true"/>) areas of other colorant sets?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.NonStrokingOverprint">
            <summary>
            As for <see cref="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.Overprint"/> but with non-stroking operations.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.OverprintMode">
            <summary>
            In DeviceCMYK color space a value of 0 for a component will erase a component (0)
            or leave it unchanged (1) for overprinting.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.Flatness">
            <summary>
            The precision for rendering curves, smaller numbers give smoother curves.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.CurrentGraphicsState.Smoothness">
            <summary>
            The precision for rendering color gradients on the output device.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.CurrentGraphicsState.DeepClone">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.IColorSpaceContext">
            <summary>
            Methods for manipulating and retrieving the current color state for a PDF content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.IColorSpaceContext.CurrentStrokingColorSpace">
            <summary>
            The <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails"/> used for stroking operations.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.IColorSpaceContext.CurrentNonStrokingColorSpace">
            <summary>
            The <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails"/> used for non-stroking operations.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetStrokingColorspace(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Set the current color space to use for stroking operations and initialize the stroking color.
            </summary>
            <param name="colorspace">The color space name.</param>
            <param name="dictionary">The color space dictionary. Default value is null.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetNonStrokingColorspace(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Set the current color space to use for nonstroking operations and initialize the nonstroking color.
            </summary>
            <param name="colorspace">The color space name.</param>
            <param name="dictionary">The color space dictionary. Default value is null.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetStrokingColor(System.Collections.Generic.IReadOnlyList{System.Decimal},UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Set the color to use for stroking operations using the current color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetStrokingColorGray(System.Decimal)">
            <summary>
            Set the stroking color space to DeviceGray and set the gray level to use for stroking operations.
            </summary>
            <param name="gray">A number between 0.0 (black) and 1.0 (white).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetStrokingColorRgb(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Set the stroking color space to DeviceRGB and set the color to use for stroking operations.
            </summary>
            <param name="r">Red - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
            <param name="g">Green - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
            <param name="b">Blue - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetStrokingColorCmyk(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Set the stroking color space to DeviceCMYK and set the color to use for stroking operations. 
            </summary>
            <param name="c">Cyan - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="m">Magenta - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="y">Yellow - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="k">Black - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetNonStrokingColor(System.Collections.Generic.IReadOnlyList{System.Decimal},UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Set the color to use for nonstroking operations using the current color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetNonStrokingColorGray(System.Decimal)">
            <summary>
            Set the nonstroking color space to DeviceGray and set the gray level to use for nonstroking operations.
            </summary>
            <param name="gray">A number between 0.0 (black) and 1.0 (white).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetNonStrokingColorRgb(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Set the nonstroking color space to DeviceRGB and set the color to use for nonstroking operations.
            </summary>
            <param name="r">Red - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
            <param name="g">Green - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
            <param name="b">Blue - A number between 0 (minimum intensity) and 1 (maximum intensity).</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IColorSpaceContext.SetNonStrokingColorCmyk(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Set the nonstroking color space to DeviceCMYK and set the color to use for nonstroking operations.
            </summary>
            <param name="c">Cyan - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="m">Magenta - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="y">Yellow - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
            <param name="k">Black - A number between 0 (minimum concentration) and 1 (maximum concentration).</param>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.IOperationContext">
            <summary>
            The current graphics state context when running a PDF content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.IOperationContext.CurrentPosition">
            <summary>
            The current position.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.IOperationContext.TextMatrices">
            <summary>
            The matrices for the current text state.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.IOperationContext.StackSize">
            <summary>
            The number of graphics states on the stack.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.GetCurrentState">
            <summary>
            Gets the current graphic state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.PopState">
            <summary>
            Sets the current graphics state to the state from the top of the stack.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.PushState">
            <summary>
            Saves a copy of the current graphics state on the stack.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ShowText(UglyToad.PdfPig.Core.IInputBytes)">
            <summary>
            Shows the text represented by the provided bytes using the current graphics state.
            </summary>
            <param name="bytes">The bytes of the text.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ShowPositionedText(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Tokens.IToken})">
            <summary>
            Interprets the tokens to draw text at positions.
            </summary>
            <param name="tokens">The tokens to show.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ApplyXObject(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Retrieves the named XObject and applies it to the current state.
            </summary>
            <param name="xObjectName">The name of the XObject.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.BeginSubpath">
            <summary>
            Start a new sub-path.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.CloseSubpath">
            <summary>
            Close the current subpath.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.StrokePath(System.Boolean)">
            <summary>
            Stroke the current path.
            </summary>
            <param name="close">Whether to also close the path.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.FillPath(UglyToad.PdfPig.Core.FillingRule,System.Boolean)">
            <summary>
            Fill the current path.
            </summary>
            <param name="fillingRule">The filling rule to use.</param>
            <param name="close">Whether to also close the path.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.FillStrokePath(UglyToad.PdfPig.Core.FillingRule,System.Boolean)">
            <summary>
            Fill and stroke the current path.
            </summary>
            <param name="fillingRule">The filling rule to use.</param>
            <param name="close">Whether to also close the path.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.MoveTo(System.Double,System.Double)">
            <summary>
            Add a move command to the path.
            <para>Should implement matrix transformations.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.BezierCurveTo(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add a bezier curve to the current subpath.
            <para>Should implement matrix transformations.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.BezierCurveTo(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add a bezier curve to the current subpath.
            <para>Should implement matrix transformations.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.LineTo(System.Double,System.Double)">
            <summary>
            Add a line command to the subpath.
            <para>Should implement matrix transformations.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.Rectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add a rectangle following the pdf specification (m, l, l, l, c) path. A new subpath will be created.
            <para>Should implement matrix transformations.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.EndPath">
            <summary>
            End the path object without filling or stroking it. This operator shall be a path-painting no-op,
            used primarily for the side effect of changing the current clipping path (see 8.5.4, "Clipping Path Operators").
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ClosePath">
            <summary>
            Close the current path.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.BeginMarkedContent(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Indicate that a marked content region is started.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.EndMarkedContent">
            <summary>
            Indicates that the current marked content region is complete.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetNamedGraphicsState(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Update the graphics state to apply the state from the named ExtGState dictionary.
            </summary>
            <param name="stateName">The name of the state to apply.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.BeginInlineImage">
            <summary>
            Indicate that an inline image is being defined.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetInlineImageProperties(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.IToken})">
            <summary>
            Define the properties of the inline image currently being drawn.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.EndInlineImage(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Indicates that the current inline image is complete.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ModifyClippingIntersect(UglyToad.PdfPig.Core.FillingRule)">
            <summary>
            Modify the clipping rule of the current path.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetFlatnessTolerance(System.Decimal)">
            <summary>
            Set the flatness tolerance in the graphics state.
            Flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s default flatness tolerance.
            </summary>
            <param name="tolerance"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetLineCap(UglyToad.PdfPig.Graphics.Core.LineCapStyle)">
            <summary>
            Set the line cap style in the graphics state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetLineDashPattern(UglyToad.PdfPig.Graphics.Core.LineDashPattern)">
            <summary>
            Set the line dash pattern in the graphics state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetLineJoin(UglyToad.PdfPig.Graphics.Core.LineJoinStyle)">
            <summary>
            Set the line join style in the graphics state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetLineWidth(System.Decimal)">
            <summary>
            Set the line width in the graphics state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetMiterLimit(System.Decimal)">
            <summary>
            Set the miter limit in the graphics state.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.MoveToNextLineWithOffset">
            <summary>
            Move to the start of the next line.
            </summary>
            <remarks>
            This performs this operation: 0 -Tl Td
            The offset is negative leading text (Tl) value, this is incorrect in the specification.
            </remarks>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetFontAndSize(UglyToad.PdfPig.Tokens.NameToken,System.Double)">
            <summary>
            Set the font and the font size.
            Font is the name of a font resource in the Font subdictionary of the current resource dictionary.
            Size is a number representing a scale factor.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetHorizontalScaling(System.Double)">
            <summary>
            Set the horizontal scaling.
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetTextLeading(System.Double)">
            <summary>
            Set the text leading.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetTextRenderingMode(UglyToad.PdfPig.Core.TextRenderingMode)">
            <summary>
            Set the text rendering mode.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetTextRise(System.Double)">
            <summary>
            Set text rise.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetWordSpacing(System.Double)">
            <summary>
            Sets the word spacing.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.ModifyCurrentTransformationMatrix(System.Double[])">
            <summary>
            Modify the current transformation matrix by concatenating the specified matrix.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.SetCharacterSpacing(System.Double)">
            <summary>
            Set the character spacing to a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.IOperationContext.PaintShading(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Paint the shape and colour shading described by a shading dictionary, subject to the current clipping path. The current colour in the graphics state is neither used nor altered. The effect is different from that of painting a path using a shading pattern as the current colour.
            </summary>
            <param name="shading">The name of a shading dictionary resource in the Shading subdictionary of the current resource dictionary.</param>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.MarkedContentStack">
            <summary>
            Handles building <see cref="T:UglyToad.PdfPig.Content.MarkedContentElement"/>s.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect">
            <inheritdoc />
            <summary>
            Modify the current clipping path by intersecting it with the current path, using the
            even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByEvenOddIntersect.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect">
            <inheritdoc />
            <summary>
            Modify the current clipping path by intersecting it with the current path, using the
            nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.ClippingPaths.ModifyClippingByNonZeroWindingIntersect.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection">
            <inheritdoc />
            <summary>
            Begin a compatibility section. Unrecognized operators (along with their operands) are ignored without error.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.BeginCompatibilitySection.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection">
            <inheritdoc />
            <summary>
            End a compatibility section.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.Compatibility.EndCompatibilitySection.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent">
            <inheritdoc />
            <summary>
            Set the color rendering intent in the graphics state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.RenderingIntent">
            <summary>
            The rendering intent for CIE-based colors.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent"/>.
            </summary>
            <param name="renderingIntent">The rendering intent.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetColorRenderingIntent.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance">
            <inheritdoc />
            <summary>
            Set the flatness tolerance in the graphics state. 
            Flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s default flatness tolerance.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.Tolerance">
            <summary>
            The flatness tolerance controls the maximum permitted distance in device pixels
            between the mathematically correct path and an approximation constructed from straight line segments.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.#ctor(System.Decimal)">
            <summary>
            Create new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance"/>.
            </summary>
            <param name="tolerance">The flatness tolerance.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetFlatnessTolerance.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap">
            <inheritdoc />
            <summary>
            Set the line cap style in the graphics state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.Cap">
            <summary>
            The cap style.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.#ctor(System.Int32)">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap" />.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.#ctor(UglyToad.PdfPig.Graphics.Core.LineCapStyle)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineCap.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern">
            <inheritdoc />
            <summary>
            Set the line dash pattern in the graphics state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.Pattern">
            <summary>
            The line dash pattern.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.#ctor(System.Decimal[],System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineDashPattern.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin">
            <inheritdoc />
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.Join">
            <summary>
            The line join style.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.#ctor(System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.#ctor(UglyToad.PdfPig.Graphics.Core.LineJoinStyle)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineJoin.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth">
            <inheritdoc />
            <summary>
            Set the line width in the graphics state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.Width">
            <summary>
            The line width.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth"/>.
            </summary>
            <param name="width">The line width.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetLineWidth.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit">
            <inheritdoc />
            <summary>
            Set the miter limit in the graphics state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.Limit">
            <summary>
            The miter limit. The miter limit imposes a maximum on the ratio of the miter length to the line width. 
            When the limit is exceeded, the join is converted from a miter to a bevel. 
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.General.SetMiterLimit.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.IGraphicsStateOperation">
            <summary>
            An operation with associated data from a content stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.IGraphicsStateOperation.Operator">
            <summary>
            The symbol representing the operator in the content stream.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.IGraphicsStateOperation.Write(System.IO.Stream)">
            <summary>
            Writes the operator and any operands as valid PDF content to the stream.
            </summary>
            <param name="stream">The stream to write to.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.IGraphicsStateOperation.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <summary>
            Applies the operation to the current context with the provided resources.
            <para>Matrix transformations should be implemented in <see cref="T:UglyToad.PdfPig.Graphics.IOperationContext"/>.</para>
            </summary>
            <param name="operationContext"></param>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage">
            <inheritdoc />
            <summary>
            Begin an inline image object.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImage.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData">
            <inheritdoc />
            <summary>
            Begin the image data for an inline image object. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Dictionary">
            <summary>
            The key-value pairs which specify attributes of the following image.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.#ctor(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.IToken})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage">
            <inheritdoc />
            <summary>
            End an inline image object.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.ImageData">
            <summary>
            The raw data for the inline image which should be interpreted according to the corresponding <see cref="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.BeginInlineImageData.Dictionary"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.#ctor(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage"/> operation.
            </summary>
            <param name="imageData">The raw byte data of this image.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InlineImages.EndInlineImage.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject">
            <inheritdoc />
            <summary>
            Paint the specified XObject. 
            The operand name must appear as a key in the XObject subdictionary of the current resource dictionary. 
            The associated value must be a stream whose Type entry, if present, is XObject.
            The effect of <see cref="T:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject" /> depends on the value of the XObject's Subtype entry, which may be Image, Form or PS. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.Name">
            <summary>
            The name of the XObject which appears in the XObject subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject"/>.
            </summary>
            <param name="name">The name of the XObject.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.InvokeNamedXObject.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent">
            <inheritdoc />
            <summary>
            Begin a marked-content sequence terminated by a balancing <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.Name">
            <summary>
            A name indicating the role or significance of the sequence.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent"/>.
            </summary>
            <param name="name">The name of the marked-content sequence.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContent.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties">
            <inheritdoc />
            <summary>
            Begin a marked-content sequence with an associated property list terminated by a balancing <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Name">
            <summary>
            A name indicating the role or significance of the point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.PropertyDictionaryName">
            <summary>
            The name of the property dictionary in the Properties subdictionary of the current resource dictionary.
            Can be <see langword="null"/> if the property dictionary is provided inline.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Properties">
            <summary>
            The marked-content sequence properties.
            Can be <see langword="null"/> if a name of the property dictionary is provided instead.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties"/>.
            </summary>
            <param name="name">The name of the marked-content point.</param>
            <param name="propertyDictionaryName">The name of the property dictionary.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties"/>.
            </summary>
            <param name="name">The name of the marked-content point.</param>
            <param name="properties">The properties of the marked-content point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.BeginMarkedContentWithProperties.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint">
            <inheritdoc />
            <summary>
            Designate a single marked-content point in the content stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.Name">
            <summary>
            A name indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint"/>.
            </summary>
            <param name="name">The name of the marked-content point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPoint.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties">
            <inheritdoc />
            <summary>
            Designate a single marked-content point in the content stream with an associated property list.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Name">
            <summary>
            A name indicating the role or significance of the point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.PropertyDictionaryName">
            <summary>
            The name of the property dictionary in the Properties subdictionary of the current resource dictionary.
            Can be <see langword="null"/> if the property dictionary is provided inline.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Properties">
            <summary>
            The marked-content point properties.
            Can be <see langword="null"/> if a name of the property dictionary is provided instead.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties"/>.
            </summary>
            <param name="name">The name of the marked-content point.</param>
            <param name="propertyDictionaryName">The name of the property dictionary.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokens.DictionaryToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties"/>.
            </summary>
            <param name="name">The name of the marked-content point.</param>
            <param name="properties">The properties of the marked-content point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.DesignateMarkedContentPointWithProperties.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent">
            <inheritdoc />
            <summary>
            End a marked-content sequence.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.MarkedContent.EndMarkedContent.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PaintShading">
            <summary>
            Paint the shape and color shading described by a shading dictionary, subject to the current clipping path.
            The current color in the graphics state is neither used nor altered.
            The effect is different from that of painting a path using a shading pattern as the current color.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PaintShading.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PaintShading.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PaintShading.Name">
            <summary>
            The name of a shading dictionary resource in the Shading subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PaintShading.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PaintShading"/>.
            </summary>
            <param name="name">The name of the shading dictionary.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PaintShading.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PaintShading.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PaintShading.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve">
            <inheritdoc />
            <summary>
            Append a cubic Bezier curve to the current path. 
            The curve extends from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bezier control points 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.X1">
            <summary>
            First control point x.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Y1">
            <summary>
            First control point y.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.X2">
            <summary>
            Second control point x.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Y2">
            <summary>
            Second control point y.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.X3">
            <summary>
            End point x.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Y3">
            <summary>
            End point y.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve"/>.
            </summary>
            <param name="x1">Control point 1 x coordinate.</param>
            <param name="y1">Control point 1 y coordinate.</param>
            <param name="x2">Control point 2 x coordinate.</param>
            <param name="y2">Control point 2 y coordinate.</param>
            <param name="x3">End point x coordinate.</param>
            <param name="y3">End point y coordinate.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendDualControlPointBezierCurve.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve">
            <inheritdoc />
            <summary>
            Append a cubic Bezier curve to the current path. 
            The curve extends from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the Bezier control points 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.X1">
            <summary>
            The x coordinate of the first control point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Y1">
            <summary>
            The y coordinate of the first control point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.X3">
            <summary>
            The x coordinate of the end point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Y3">
            <summary>
            The y coordinate of the end point.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve"/>.
            </summary>
            <param name="x1">Control point 1 x coordinate.</param>
            <param name="y1">Control point 1 y coordinate.</param>
            <param name="x3">Control point 2/End x coordinate.</param>
            <param name="y3">Control point 2/End y coordinate.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendEndControlPointBezierCurve.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle">
            <inheritdoc />
            <remarks>
            Append a rectangle to the current path as a complete subpath.
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.LowerLeftX">
            <summary>
            The x coordinate of the lower left corner.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.LowerLeftY">
            <summary>
            The y coordinate of the lower left corner.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle"/>.
            </summary>
            <param name="x">The x coordinate of the lower left corner.</param>
            <param name="y">The y coordinate of the lower left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendRectangle.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve">
            <inheritdoc />
            <summary>
            Append a cubic Bezier curve to the current path. 
            The curve extends from the current point to the point (x3, y3), using the current point and (x2, y2) as the Bezier control points 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.X2">
            <summary>
            The x coordinate of the second control point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Y2">
            <summary>
            The y coordinate of the second control point.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.X3">
            <summary>
            The x coordinate of the end point of the curve.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Y3">
            <summary>
            The y coordinate of the end point of the curve.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve"/>.
            </summary>
            <param name="x2">The x coordinate of the second control point.</param>
            <param name="y2">The y coordinate of the second control point.</param>
            <param name="x3">The x coordinate of the end point.</param>
            <param name="y3">The y coordinate of the end point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStartControlPointBezierCurve.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment">
            <inheritdoc />
            <summary>
            Append a straight line segment from the current point to the point (x, y).
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.X">
            <summary>
            The x coordinate of the end point of the line.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.Y">
            <summary>
            The y coordinate of the end point of the line.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment"/>.
            </summary>
            <param name="x">The x coordinate of the line's end point.</param>
            <param name="y">The y coordinate of the line's end point.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.AppendStraightLineSegment.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath">
            <inheritdoc />
            <summary>
            Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.X">
            <summary>
            The x coordinate for the subpath to begin at.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.Y">
            <summary>
            The y coordinate for the subpath to begin at.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath"/>.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.BeginNewSubpath.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath">
            <inheritdoc />
            <summary>
            Close the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, this does nothing. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathConstruction.CloseSubpath.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath">
            <inheritdoc />
            <summary>
            Close and stroke the path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseAndStrokePath.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke">
            <inheritdoc />
            <summary>
            Close, fill, and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathEvenOddRuleAndStroke.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke">
            <inheritdoc />
            <summary>
            Close, fill, and then stroke the path, using the nonzero winding number rule to determine the region to fill. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.CloseFillPathNonZeroWindingAndStroke.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath">
            <inheritdoc />
            <summary>
            End path without filling or stroking.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.EndPath.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule">
            <inheritdoc />
            <summary>
            Fill the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRule.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke">
            <inheritdoc />
            <summary>
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathEvenOddRuleAndStroke.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding">
            <inheritdoc />
            <summary>
            Fill the path, using the nonzero winding number rule to determine the region to fill. 
            Any subpaths that are open are implicitly closed before being filled.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke">
            <inheritdoc />
            <summary>
            Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingAndStroke.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility">
            <inheritdoc />
            <summary>
            Equivalent to <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding"/> included only for compatibility. 
            Although PDF consumer applications must be able to accept this operator, PDF producer applications should use <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWinding"/> instead.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.FillPathNonZeroWindingCompatibility.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath">
            <inheritdoc />
            <summary>
            Stroke the path.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.PathPainting.StrokePath.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor">
            <inheritdoc />
            <summary>
            Set the nonstroking color based on the current color space.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.Operands">
            <summary>
            The values for the color, 1 for grayscale, 3 for RGB, 4 for CMYK.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.#ctor(System.Decimal[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor"/>.
            </summary>
            <param name="operands">The color operands.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced">
            <inheritdoc />
            <summary>
            Set the stroking color based on the current color space with support for Pattern, Separation, DeviceN, and ICCBased color spaces.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.Operands">
            <summary>
            The values for the color.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.PatternName">
            <summary>
            The name of an entry in the Pattern subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.#ctor(System.Collections.Generic.IReadOnlyList{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced"/>.
            </summary>
            <param name="operands">The color operands.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.#ctor(System.Collections.Generic.IReadOnlyList{System.Decimal},UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced"/>.
            </summary>
            <param name="operands">The color operands.</param>
            <param name="patternName">The pattern name.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorAdvanced.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk">
            <inheritdoc />
            <summary>
            Set the non-stroking color space to DeviceCMYK and set the color to use for stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.C">
            <summary>
            The cyan level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.M">
            <summary>
            The magenta level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.Y">
            <summary>
            The yellow level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.K">
            <summary>
            The key level between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk"/>.
            </summary>
            <param name="c">The cyan level.</param>
            <param name="m">The magenta level.</param>
            <param name="y">The yellow level.</param>
            <param name="k">The key level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceCmyk.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray">
            <inheritdoc />
            <summary>
            Set the gray level for non-stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.Gray">
            <summary>
            The gray level between 0 (black) and 1 (white).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray"/>.
            </summary>
            <param name="gray">The gray level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceGray.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb">
            <inheritdoc />
            <summary>
            Set RGB color for non-stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.R">
            <summary>
            The red level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.G">
            <summary>
            The green level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.B">
            <summary>
            The blue level between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb"/>.
            </summary>
            <param name="r">The red level.</param>
            <param name="g">The green level.</param>
            <param name="b">The blue level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorDeviceRgb.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace">
            <inheritdoc />
            <summary>
            Set the current color space to use for nonstroking operations. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.Name">
            <summary>
            The name of the color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace"/>.
            </summary>
            <param name="name">The name of the color space.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetNonStrokeColorSpace.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor">
            <inheritdoc />
            <summary>
            Set the stroking color based on the current color space.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.Operands">
            <summary>
            The values for the color, 1 for grayscale, 3 for RGB, 4 for CMYK.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.#ctor(System.Decimal[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor"/>.
            </summary>
            <param name="operands">The color operands.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced">
            <inheritdoc />
            <summary>
            Set the stroking color based on the current color space with support for Pattern, Separation, DeviceN, and ICCBased color spaces.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.Operands">
            <summary>
            The values for the color.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.PatternName">
            <summary>
            The name of an entry in the Pattern subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.#ctor(System.Collections.Generic.IReadOnlyList{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColor"/>.
            </summary>
            <param name="operands">The color operands.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.#ctor(System.Collections.Generic.IReadOnlyList{System.Decimal},UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced"/>.
            </summary>
            <param name="operands">The color operands.</param>
            <param name="patternName">The pattern name.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorAdvanced.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk">
            <inheritdoc />
            <summary>
            Set the stroking color space to DeviceCMYK and set the color to use for stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.C">
            <summary>
            The cyan level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.M">
            <summary>
            The magenta level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.Y">
            <summary>
            The yellow level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.K">
            <summary>
            The key level between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk"/>.
            </summary>
            <param name="c">The cyan level.</param>
            <param name="m">The magenta level.</param>
            <param name="y">The yellow level.</param>
            <param name="k">The key level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceCmyk.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray">
            <inheritdoc />
            <summary>
            Set the gray level for stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.Gray">
            <summary>
            The gray level between 0 (black) and 1 (white).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray"/>.
            </summary>
            <param name="gray">The gray level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceGray.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb">
            <inheritdoc />
            <summary>
            Set RGB color for stroking operations.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.R">
            <summary>
            The red level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.G">
            <summary>
            The green level between 0 and 1.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.B">
            <summary>
            The blue level between 0 and 1.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb"/>.
            </summary>
            <param name="r">The red level.</param>
            <param name="g">The green level.</param>
            <param name="b">The blue level.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorDeviceRgb.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace">
            <inheritdoc />
            <summary>
            Set the current color space to use for stroking operations. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.Name">
            <summary>
            The name of the color space.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace"/>.
            </summary>
            <param name="name">The name of the color space.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SetStrokeColorSpace.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix">
            <inheritdoc />
            <summary>
            Modify the current transformation matrix by concatenating the specified matrix. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.Value">
            <summary>
            The 6 values for the transformation matrix.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.#ctor(System.Decimal[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix"/>.
            </summary>
            <param name="value">The 6 transformation matrix values.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.ModifyCurrentTransformationMatrix.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop">
            <inheritdoc />
            <summary>
            Restore the graphics state by removing the most recently saved state from the stack and making it the current state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Pop.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push">
            <inheritdoc />
            <summary>
            Save the current graphics state on the graphics state stack.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.Push.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary">
            <inheritdoc />
            <summary>
             Set the specified parameters in the graphics state using the ExtGState subdictionary with the given name.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.Name">
            <summary>
            The name of a graphics state parameter dictionary in the ExtGState subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.#ctor(UglyToad.PdfPig.Tokens.NameToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary"/>.
            </summary>
            <param name="name">The name of the ExtGState dictionary.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.SpecialGraphicsState.SetGraphicsStateParametersFromDictionary.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText">
            <inheritdoc />
            <summary>
            Begin a text object, initializing the text matrix and the text line matrix to the identity matrix. Text objects cannot be nested.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.BeginText.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText">
            <inheritdoc />
            <summary>
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextObjects.EndText.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine">
            <inheritdoc />
            <summary>
            Move to the start of the next line.
            </summary>
            <remarks>
            This performs this operation: 0 -Tl Td
            The offset is negative leading text (Tl) value, this is incorrect in the specification.
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.Value">
            <summary>
            The instance of the <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine"/> operation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.Operator">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLine.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset">
            <inheritdoc />
            <summary>
            Move to the start of the next line offset by Tx Ty.
            </summary>
            <remarks>
            Performs the following operation:
                       1  0  0<br />
            Tm = Tlm = 0  1  0  * Tlm<br />
                       tx ty 1
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Tx">
            <summary>
            The x value of the offset.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Ty">
            <summary>
            The y value of the offset.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset"/>.
            </summary>
            <param name="tx">The x offset.</param>
            <param name="ty">The y offset.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffset.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading">
            <inheritdoc />
            <summary>
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            This operator also sets the leading parameter in the text state.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Tx">
            <summary>
            The x value of the offset.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Ty">
            <summary>
            The y value of the offset and the inverse of the leading parameter.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading"/>.
            </summary>
            <param name="tx">The x value of the offset.</param>
            <param name="ty">The y value of the offset and the inverse of the leading parameter.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.MoveToNextLineWithOffsetSetLeading.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix">
            <inheritdoc />
            <summary>
            Set the text matrix and the text line matrix.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.Value">
            <summary>
            The values of the text matrix.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.#ctor(System.Decimal[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix"/>.
            </summary>
            <param name="value">The values of the text matrix.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextPositioning.SetTextMatrix.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText">
            <inheritdoc />
            <summary>
            Move to the next line and show a text string.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Text">
            <summary>
            The text to show as a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Bytes">
            <summary>
            The text to show as hex bytes.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText"/>.
            </summary>
            <param name="text">The text to show.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.#ctor(System.Byte[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText"/>.
            </summary>
            <param name="hexBytes">The bytes of the text to show.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowText.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing">
            <inheritdoc />
            <summary>
            Move to the next line and show a text string, using the first number as the word spacing and the second as the character spacing.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.WordSpacing">
            <summary>
            The word spacing.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.CharacterSpacing">
            <summary>
            The character spacing.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Bytes">
            <summary>
            The bytes of the text.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Text">
            <summary>
            The text to show.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.#ctor(System.Decimal,System.Decimal,System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing"/>.
            </summary>
            <param name="wordSpacing">The word spacing.</param>
            <param name="characterSpacing">The character spacing.</param>
            <param name="text">The text to show.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.#ctor(System.Decimal,System.Decimal,System.Byte[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing"/>.
            </summary>
            <param name="wordSpacing">The word spacing.</param>
            <param name="characterSpacing">The character spacing.</param>
            <param name="hexBytes">The bytes of the text to show.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.MoveToNextLineShowTextWithSpacing.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText">
            <inheritdoc />
            <summary>
            Show a text string
            </summary>
            <remarks>
            <para>The input is a sequence of character codes to be shown as glyphs.</para>
            <para>
            Generally each byte represents a single character code, however starting in version 1.2+
            a composite font might use multi-byte character codes to map to glyphs.
            For these composite fonts, the <see cref="T:UglyToad.PdfPig.Fonts.Cmap.CMap" /> of the font defines the mapping from code to glyph.
            </para>
            <para>
            The grouping of character codes in arguments to this operator does not have any impact on the meaning; for example:<br />
            (Abc) Tj is equivalent to (A) Tj (b) Tj (c) Tj<br />
            However grouping character codes makes the document easier to search and extract text from.
            </para>
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Text">
            <summary>
            The text string to show.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Bytes">
            <summary>
            The bytes of the string to show.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.#ctor(System.Byte[])">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning">
            <inheritdoc />
            <summary>
            Show one or more text strings, allowing individual glyph positioning. 
            Each element of array can be a string or a number.
            If the element is a string, this operator shows the string. 
            If it is a number, the operator adjusts the text position by that amount
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.Array">
            <summary>
            The array elements.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.#ctor(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Tokens.IToken})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning"/>.
            </summary>
            <param name="array">The array elements.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing">
            <inheritdoc />
            <summary>
            Set the character spacing to a number expressed in unscaled text space units.
            Initial value: 0. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.Spacing">
            <summary>
            The character spacing.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing"/>.
            </summary>
            <param name="spacing">The character spacing.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetCharacterSpacing.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize">
            <inheritdoc />
            <summary>
            Set the font and the font size. 
            Font is the name of a font resource in the Font subdictionary of the current resource dictionary.
            Size is a number representing a scale factor.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Font">
            <summary>
            The name of the font as defined in the resource dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Size">
            <summary>
            The font program defines glyphs for a standard size. This standard size is set so that each line of text will occupy 1 unit in user space.
            The size is the scale factor used to scale glyphs from the standard size to the display size rather than the font size in points.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.#ctor(UglyToad.PdfPig.Tokens.NameToken,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize"/>.
            </summary>
            <param name="font">The font name.</param>
            <param name="size">The font size.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetFontAndSize.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling">
            <inheritdoc />
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.Scale">
            <summary>
            A number specifying the percentage of the normal width.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling"/>.
            </summary>
            <param name="scale">The horizontal scaling percentage.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetHorizontalScaling.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading">
            <inheritdoc />
            <summary>
            Set the text leading.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.Leading">
            <summary>
            The text leading in unscaled text space units.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading"/>.
            </summary>
            <param name="leading">The text leading.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextLeading.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode">
            <inheritdoc />
            <summary>
            Set the text rendering mode.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.Mode">
            <summary>
            The text rendering mode to set.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.#ctor(UglyToad.PdfPig.Core.TextRenderingMode)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.#ctor(System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRenderingMode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise">
            <inheritdoc />
            <summary>
            Set text rise.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.Rise">
            <summary>
            The amount of text rise - how far to move the baseline up or down from its default location.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise"/>.
            </summary>
            <param name="rise">The text rise.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetTextRise.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing">
            <summary>
            Sets the word spacing.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.Spacing">
            <summary>
            Sets the width of the space ' ' character. For horizontal
            writing positive values increase the gap between words separated by space, for vertical writing
            positive values decrease the gap.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.#ctor(System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing"/>.
            </summary>
            <param name="spacing">The word spacing.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.SetWordSpacing.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth">
            <inheritdoc />
            <summary>
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color for a Type 3 font.
            wx specifies the horizontal displacement in the glyph coordinate system; 
            it must be consistent with the corresponding width in the font's Widths array.
            wy must be 0. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.HorizontalDisplacement">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.VerticalDisplacement">
            <summary>
            The vertical displacement in the glyph coordinate system. Must be 0.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth"/>.
            </summary>
            <param name="horizontalDisplacement">The horizontal displacement in the glyph coordinate system.</param>
            <param name="verticalDisplacement">The vertical displacement in the glyph coordinate system.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidth.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox">
            <inheritdoc />
            <summary>
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color for a Type 3 font.
            Also sets the glyph bounding box.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.Symbol">
            <summary>
            The symbol for this operation in a stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.Operator">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.HorizontalDisplacement">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.VerticalDisplacement">
            <summary>
            The vertical displacement in the glyph coordinate system. Must be 0.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.LowerLeftX">
            <summary>
            The lower left x coordinate of the glyph bounding box.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.LowerLeftY">
            <summary>
            The lower left y coordinate of the glyph bounding box.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.UpperRightX">
            <summary>
            The upper right x coordinate of the glyph bounding box.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.UpperRightY">
            <summary>
            The upper right y coordinate of the glyph bounding box.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox"/>.
            </summary>
            <param name="horizontalDisplacement">The horizontal displacement in the glyph coordinate system.</param>
            <param name="verticalDisplacement">The vertical displacement in the glyph coordinate system.</param>
            <param name="lowerLeftX">The lower left x coordinate of the glyph bounding box.</param>
            <param name="lowerLeftY">The lower left y coordinate of the glyph bounding box.</param>
            <param name="upperRightX">The upper right x coordinate of the glyph bounding box.</param>
            <param name="upperRightY">The upper right y coordinate of the glyph bounding box.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.Run(UglyToad.PdfPig.Graphics.IOperationContext)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.Write(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.Operations.TextState.Type3SetGlyphWidthAndBoundingBox.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.PdfPath">
            <summary>
            A path is made up of one or more disconnected subpaths, each comprising a sequence of connected segments. The topology of the path is unrestricted: it may be concave or convex, may contain multiple subpaths representing disjoint areas, and may intersect itself in arbitrary ways.
            <para>A path shall be composed of straight and curved line segments, which may connect to one another or may be disconnected.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.FillingRule">
            <summary>
            Rules for determining which points lie inside/outside the path.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.IsClipping">
            <summary>
            Returns true if this is a clipping path.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.IsFilled">
            <summary>
            Returns true if the path is filled.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.FillColor">
            <summary>
            The fill color.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.IsStroked">
            <summary>
            Returns true if the path is stroked.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.StrokeColor">
            <summary>
            The stroke color.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.LineWidth">
            <summary>
            Thickness in user space units of path to be stroked.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.LineDashPattern">
            <summary>
            The pattern to be used for stroked lines.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.LineCapStyle">
            <summary>
            The cap style to be used for stroked lines.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.PdfPath.LineJoinStyle">
            <summary>
            The join style to be used for stroked lines.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.PdfPath.SetClipping(UglyToad.PdfPig.Core.FillingRule)">
            <summary>
            Set the clipping mode for this path and IsClipping to true.
            <para>IsFilled and IsStroked flags will be set to false.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.PdfPath.SetFilled(UglyToad.PdfPig.Core.FillingRule)">
            <summary>
            Set the filling rule for this path and IsFilled to true.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.PdfPath.SetStroked">
            <summary>
            Set IsStroked to true.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.PdfPath.CloneEmpty">
            <summary>
            Create a clone with no Subpaths.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Graphics.PdfPath.GetBoundingRectangle">
            <summary>
            Gets a <see cref="T:UglyToad.PdfPig.Core.PdfRectangle"/> which entirely contains the geometry of the defined path.
            </summary>
            <returns>For paths which don't define any geometry this returns <see langword="null"/>.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.TextMatrices">
            <summary>
            Manages the Text Matrix (Tm), Text line matrix (Tlm) and used to generate the Text Rendering Matrix (Trm).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.TextMatrices.TextMatrix">
            <summary>
            The current text matrix (Tm).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.TextMatrices.TextLineMatrix">
            <summary>
            Captures the value of the <see cref="P:UglyToad.PdfPig.Graphics.TextMatrices.TextMatrix"/> at the beginning of a line of text.
            This is convenient for aligning evenly spaced lines of text. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Graphics.XObjectContentRecord">
            <summary>
            An XObject content record.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.XObjectContentRecord.Type">
            <summary>
            The XObject type.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.XObjectContentRecord.Stream">
            <summary>
            The XObject stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.XObjectContentRecord.AppliedTransformation">
            <summary>
            The applied transformation.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.XObjectContentRecord.DefaultRenderingIntent">
            <summary>
            The default rendering intent.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Graphics.XObjectContentRecord.DefaultColorSpace">
            <summary>
            The default color space.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.ColorSpaceDetailsByteConverter">
            <summary>
            Utility for working with the bytes in <see cref="T:UglyToad.PdfPig.Content.IPdfImage"/>s and converting according to their <see cref="T:UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails"/>.s
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.ColorSpaceDetailsByteConverter.Convert(UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails,System.Collections.Generic.IReadOnlyList{System.Byte},System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the output bytes (if available) of <see cref="M:UglyToad.PdfPig.Content.IPdfImage.TryGetBytes(System.Collections.Generic.IReadOnlyList{System.Byte}@)"/>
            to actual pixel values using the <see cref="P:UglyToad.PdfPig.Content.IPdfImage.ColorSpaceDetails"/>. For most images this doesn't
            change the data but for <see cref="F:UglyToad.PdfPig.Graphics.Colors.ColorSpace.Indexed"/> it will convert the bytes which are indexes into the
            real pixel data into the real pixel data.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.JpegInformation">
            <summary>
            Information read from a JPEG image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.JpegInformation.Width">
            <summary>
            Width of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.JpegInformation.Height">
            <summary>
            Height of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.JpegInformation.BitsPerComponent">
            <summary>
            Bits per component.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.JpegInformation.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.JpegInformation"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.StartOfBaselineDctFrame">
            <summary>
            Indicates that this is a baseline DCT-based JPEG, and specifies the width, height, number of components, and component subsampling.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.StartOfProgressiveDctFrame">
            <summary>
            Indicates that this is a progressive DCT-based JPEG, and specifies the width, height, number of components, and component subsampling.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.DefineHuffmanTable">
            <summary>
            Specifies one or more Huffman tables.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.StartOfScan">
            <summary>
            Begins a top-to-bottom scan of the image. In baseline images, there is generally a single scan.
            Progressive images usually contain multiple scans. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.DefineQuantizationTable">
            <summary>
            Specifies one or more quantization tables. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.DefineRestartInterval">
            <summary>
            Specifies the interval between RSTn markers, in Minimum Coded Units (MCUs).
            This marker is followed by two bytes indicating the fixed size so it can be treated like any other variable size segment.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart0">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart1">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart2">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart3">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart4">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart5">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart6">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Restart7">
            <summary>
            Inserted every r macroblocks.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.StartOfImage">
            <summary>
            Marks the start of a JPEG image file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.EndOfImage">
            <summary>
            Marks the end of a JPEG image file.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.JpegMarker.Comment">
            <summary>
            Marks a text comment.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.Adam7.PassToScanlineGridIndex">
            <summary>
            For a given pass number (1 indexed) the scanline indexes of the lines included in that pass in the 8x8 grid.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.Adler32Checksum">
            <summary>
            Used to calculate the Adler-32 checksum used for ZLIB data in accordance with 
            RFC 1950: ZLIB Compressed Data Format Specification.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Adler32Checksum.Calculate(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Calculate the Adler-32 checksum for some data.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.ChunkHeader">
            <summary>
            The header for a data chunk in a PNG file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.Position">
            <summary>
            The position/start of the chunk header within the stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.Length">
            <summary>
            The length of the chunk in bytes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.Name">
            <summary>
            The name of the chunk, uppercase first letter means the chunk is critical (vs. ancillary).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.IsCritical">
            <summary>
            Whether the chunk is critical (must be read by all readers) or ancillary (may be ignored).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.IsPublic">
            <summary>
            A public chunk is one that is defined in the International Standard or is registered in the list of public chunk types maintained by the Registration Authority. 
            Applications can also define private (unregistered) chunk types for their own purposes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ChunkHeader.IsSafeToCopy">
            <summary>
            Whether the (if unrecognized) chunk is safe to copy.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.ChunkHeader.#ctor(System.Int64,System.Int32,System.String)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.Png.ChunkHeader"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.ChunkHeader.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.ColorType">
            <summary>
            Describes the interpretation of the image data.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.ColorType.None">
            <summary>
            Grayscale.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.ColorType.PaletteUsed">
            <summary>
            Colors are stored in a palette rather than directly in the data.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.ColorType.ColorUsed">
            <summary>
            The image uses color.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.ColorType.AlphaChannelUsed">
            <summary>
            The image has an alpha channel.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.CompressionMethod">
            <summary>
            The method used to compress the image data.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.CompressionMethod.DeflateWithSlidingWindow">
            <summary>
            Deflate/inflate compression with a sliding window of at most 32768 bytes.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.Crc32">
            <summary>
            32-bit Cyclic Redundancy Code used by the PNG for checking the data is intact.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Crc32.Calculate(System.Byte[])">
            <summary>
            Calculate the CRC32 for data.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Crc32.Calculate(System.Collections.Generic.List{System.Byte})">
            <summary>
            Calculate the CRC32 for data.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Crc32.Calculate(System.Byte[],System.Byte[])">
            <summary>
            Calculate the combined CRC32 for data.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Decoder.GetPaethValue(System.Byte,System.Byte,System.Byte)">
            <summary>
            Computes a simple linear function of the three neighboring pixels (left, above, upper left),
            then chooses as predictor the neighboring pixel closest to the computed value.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.FilterMethod">
            <summary>
            Indicates the pre-processing method applied to the image data before compression.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterMethod.AdaptiveFiltering">
            <summary>
            Adaptive filtering with five basic filter types.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterType.None">
            <summary>
            The raw byte is unaltered.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterType.Sub">
            <summary>
            The byte to the left.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterType.Up">
            <summary>
            The byte above.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterType.Average">
            <summary>
            The mean of bytes left and above, rounded down.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.FilterType.Paeth">
            <summary>
            Byte to the left, above or top-left based on Paeth's algorithm.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.IChunkVisitor">
            <summary>
            Enables execution of custom logic whenever a chunk is read.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.IChunkVisitor.Visit(System.IO.Stream,UglyToad.PdfPig.Images.Png.ImageHeader,UglyToad.PdfPig.Images.Png.ChunkHeader,System.Byte[],System.Byte[])">
            <summary>
            Called by the PNG reader after a chunk is read.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.ImageHeader">
            <summary>
            The high level information about the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.Width">
            <summary>
            The width of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.Height">
            <summary>
            The height of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.BitDepth">
            <summary>
            The bit depth of the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.ColorType">
            <summary>
            The color type of the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.CompressionMethod">
            <summary>
            The compression method used for the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.FilterMethod">
            <summary>
            The filter method used for the image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.ImageHeader.InterlaceMethod">
            <summary>
            The interlace method used by the image..
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.ImageHeader.#ctor(System.Int32,System.Int32,System.Byte,UglyToad.PdfPig.Images.Png.ColorType,UglyToad.PdfPig.Images.Png.CompressionMethod,UglyToad.PdfPig.Images.Png.FilterMethod,UglyToad.PdfPig.Images.Png.InterlaceMethod)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.Png.ImageHeader"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.ImageHeader.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.InterlaceMethod">
            <summary>
            Indicates the transmission order of the image data.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.InterlaceMethod.None">
            <summary>
            No interlace.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Images.Png.InterlaceMethod.Adam7">
            <summary>
            Adam7 interlace.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Palette.#ctor(System.Byte[])">
            <summary>
            Creates a palette object. Input palette data length from PLTE chunk must be a multiple of 3.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Palette.SetAlphaValues(System.Byte[])">
            <summary>
            Adds transparency values from tRNS chunk.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.Pixel">
            <summary>
            A pixel in a <see cref="T:UglyToad.PdfPig.Images.Png.Png"/> image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Pixel.R">
            <summary>
            The red value for the pixel.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Pixel.G">
            <summary>
            The green value for the pixel.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Pixel.B">
            <summary>
            The blue value for the pixel.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Pixel.A">
            <summary>
            The alpha transparency value for the pixel.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Pixel.IsGrayscale">
            <summary>
            Whether the pixel is grayscale (if <see langword="true"/> <see cref="P:UglyToad.PdfPig.Images.Png.Pixel.R"/>, <see cref="P:UglyToad.PdfPig.Images.Png.Pixel.G"/> and <see cref="P:UglyToad.PdfPig.Images.Png.Pixel.B"/> will all have the same value).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.Png.Pixel"/>.
            </summary>
            <param name="r">The red value for the pixel.</param>
            <param name="g">The green value for the pixel.</param>
            <param name="b">The blue value for the pixel.</param>
            <param name="a">The alpha transparency value for the pixel.</param>
            <param name="isGrayscale">Whether the pixel is grayscale.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.Png.Pixel"/> which has <see cref="P:UglyToad.PdfPig.Images.Png.Pixel.IsGrayscale"/> false and is fully opaque.
            </summary>
            <param name="r">The red value for the pixel.</param>
            <param name="g">The green value for the pixel.</param>
            <param name="b">The blue value for the pixel.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.#ctor(System.Byte)">
            <summary>
            Create a new grayscale <see cref="T:UglyToad.PdfPig.Images.Png.Pixel"/>.
            </summary>
            <param name="grayscale">The grayscale value.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.Equals(UglyToad.PdfPig.Images.Png.Pixel)">
            <summary>
            Whether the pixel values are equal.
            </summary>
            <param name="other">The other pixel.</param>
            <returns><see langword="true"/> if all pixel values are equal otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Pixel.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.Png">
            <summary>
            A PNG image. Call <see cref="M:UglyToad.PdfPig.Images.Png.Png.Open(System.Byte[],UglyToad.PdfPig.Images.Png.IChunkVisitor)"/> to open from file or bytes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Png.Header">
            <summary>
            The header data from the PNG image.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Png.Width">
            <summary>
            The width of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Png.Height">
            <summary>
            The height of the image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.Png.HasAlphaChannel">
            <summary>
            Whether the image has an alpha (transparency) layer.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Png.GetPixel(System.Int32,System.Int32)">
            <summary>
            Get the pixel at the given column and row (x, y).
            </summary>
            <remarks>
            Pixel values are generated on demand from the underlying data to prevent holding many items in memory at once, so consumers
            should cache values if they're going to be looped over many time.
            </remarks>
            <param name="x">The x coordinate (column).</param>
            <param name="y">The y coordinate (row).</param>
            <returns>The pixel at the coordinate.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Png.Open(System.IO.Stream,UglyToad.PdfPig.Images.Png.IChunkVisitor)">
            <summary>
            Read the PNG image from the stream.
            </summary>
            <param name="stream">The stream containing PNG data to be read.</param>
            <param name="chunkVisitor">Optional: A visitor which is called whenever a chunk is read by the library.</param>
            <returns>The <see cref="T:UglyToad.PdfPig.Images.Png.Png"/> data from the stream.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Png.Open(System.Byte[],UglyToad.PdfPig.Images.Png.IChunkVisitor)">
            <summary>
            Read the PNG image from the bytes.
            </summary>
            <param name="bytes">The bytes of the PNG data to be read.</param>
            <param name="chunkVisitor">Optional: A visitor which is called whenever a chunk is read by the library.</param>
            <returns>The <see cref="T:UglyToad.PdfPig.Images.Png.Png"/> data from the bytes.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.Png.Open(System.String,UglyToad.PdfPig.Images.Png.IChunkVisitor)">
            <summary>
            Read the PNG from the file path.
            </summary>
            <param name="filePath">The path to the PNG file to open.</param>
            <param name="chunkVisitor">Optional: A visitor which is called whenever a chunk is read by the library.</param>
            <remarks>This will open the file to obtain a <see cref="T:System.IO.FileStream"/> so will lock the file during reading.</remarks>
            <returns>The <see cref="T:UglyToad.PdfPig.Images.Png.Png"/> data from the file.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.PngBuilder">
            <summary>
            Used to construct PNG images. Call <see cref="M:UglyToad.PdfPig.Images.Png.PngBuilder.Create(System.Int32,System.Int32,System.Boolean)"/> to make a new builder.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.PngBuilder.Create(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a builder for a PNG with the given width and size.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.PngBuilder.SetPixel(System.Byte,System.Byte,System.Byte,System.Int32,System.Int32)">
            <summary>
            Sets the RGB pixel value for the given column (x) and row (y).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.PngBuilder.SetPixel(UglyToad.PdfPig.Images.Png.Pixel,System.Int32,System.Int32)">
            <summary>
            Set the pixel value for the given column (x) and row (y).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.PngBuilder.Save">
            <summary>
            Get the bytes of the PNG file for this builder.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.PngBuilder.Save(System.IO.Stream)">
            <summary>
            Write the PNG file bytes to the provided stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.PngOpenerSettings.ChunkVisitor">
            <summary>
            The code to execute whenever a chunk is read. Can be <see langword="null"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Images.Png.PngOpenerSettings.DisallowTrailingData">
            <summary>
            Whether to throw if the image contains data after the image end marker.
            <see langword="false"/> by default.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Images.Png.RawPngData">
            <summary>
            Provides convenience methods for indexing into a raw byte array to extract pixel values.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Images.Png.RawPngData.#ctor(System.Byte[],System.Int32,UglyToad.PdfPig.Images.Png.Palette,UglyToad.PdfPig.Images.Png.ImageHeader)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Images.Png.RawPngData"/>.
            </summary>
            <param name="data">The decoded pixel data as bytes.</param>
            <param name="bytesPerPixel">The number of bytes in each pixel.</param>
            <param name="palette">The palette for the image.</param>
            <param name="imageHeader">The image header.</param>
        </member>
        <member name="T:UglyToad.PdfPig.InternalParsingOptions">
            <summary>
            <see cref="T:UglyToad.PdfPig.ParsingOptions"/> but without being a public API/
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.#ctor">
            Default constructor.
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.#ctor(System.Int32)">
            Default constructor.
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.#ctor(System.Byte[])">
            Create a random access buffer using the given byte array.
            
            @param input the byte array to be read
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.#ctor(System.IO.BinaryReader)">
            Create a random access buffer of the given input stream by copying the data.
            
            @param input the input stream to be read
            @throws IOException if something went wrong while copying the data
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Dispose">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.clear">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Seek(System.Int64)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.GetPosition">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Read">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Read(System.Byte[],System.Int32,System.Int32)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Length">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.write(System.Int32)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.write(System.Byte[])">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.write(System.Byte[],System.Int32,System.Int32)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.ExpandBuffer">
            create a new buffer chunk and adjust all pointers and indices.
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.NextBuffer">
            switch to the next buffer chunk and reset the buffer pointer.
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.CheckClosed">
            Ensure that the RandomAccessBuffer is not closed
            @throws IOException
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.IsClosed">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.IsEof">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Available">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Peek">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Rewind(System.Int32)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.ReadFully(System.Int32)">
            {@inheritDoc}
        </member>
        <member name="M:UglyToad.PdfPig.IO.RandomAccessBuffer.Read(System.Byte[])">
            {@inheritDoc}
        </member>
        <member name="T:UglyToad.PdfPig.Logging.ILog">
            <summary>
            Logs internal messages from the PDF parsing process. Consumers can provide their own implementation
            in the <see cref="T:UglyToad.PdfPig.ParsingOptions"/> to intercept log messages.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Logging.ILog.Debug(System.String)">
            <summary>
            Record an informational debug message.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Logging.ILog.Debug(System.String,System.Exception)">
            <summary>
            Record an informational debug message with exception.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Logging.ILog.Warn(System.String)">
            <summary>
            Record an warning message due to a non-error issue encountered in parsing.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Logging.ILog.Error(System.String)">
            <summary>
            Record an error message due to an issue encountered in parsing.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Logging.ILog.Error(System.String,System.Exception)">
            <summary>
            Record an error message due to an issue encountered in parsing with exception.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.BookmarkNode">
            <summary>
            A node in the <see cref="T:UglyToad.PdfPig.Outline.Bookmarks"/> (also known as outlines) of a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.BookmarkNode.Title">
            <summary>
            The text displayed for this node.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.BookmarkNode.Children">
            <summary>
            The bookmark's sub-bookmarks.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.BookmarkNode.IsLeaf">
            <summary>
            Whether this node is a leaf node (has no children).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.BookmarkNode.Level">
            <summary>
            The node's level in the hierarchy.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.BookmarkNode.#ctor(System.String,System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.BookmarkNode"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.Bookmarks">
            <summary>
            The bookmarks in a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Bookmarks.Roots">
            <summary>
            The roots of the bookmarks' node tree.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Bookmarks.#ctor(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.Bookmarks" />.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Bookmarks.GetNodes">
            <summary>
            Get all nodes.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.BookmarksProvider.GetBookmarks(UglyToad.PdfPig.Content.Catalog)">
            <summary>
            Extract bookmarks, if any.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.BookmarksProvider.ReadBookmarksRecursively(UglyToad.PdfPig.Tokens.DictionaryToken,System.Int32,System.Boolean,System.Collections.Generic.HashSet{UglyToad.PdfPig.Core.IndirectReference},UglyToad.PdfPig.Outline.NamedDestinations,System.Collections.Generic.List{UglyToad.PdfPig.Outline.BookmarkNode})">
            <summary>
            Extract bookmarks recursively.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Destinations.DestinationProvider.TryGetDestination(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Outline.NamedDestinations,UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner,UglyToad.PdfPig.Logging.ILog,System.Boolean,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination@)">
            <summary>
            Get explicit destination or a named destination (Ref 12.3.2.3) from dictionary
            </summary>
            <param name="dictionary"></param>
            <param name="destinationToken">Token name, can be D or Dest</param>
            <param name="namedDestinations"></param>
            <param name="pdfScanner"></param>
            <param name="log"></param>
            <param name="isRemoteDestination">in case we are looking up a destination for a GoToR (Go To Remote) action: pass in true
            to enforce a check for indirect page references (which is not allowed for GoToR)</param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination">
            <summary>
            A destination location in the same file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination.PageNumber">
            <summary>
            The page number (1-based) of the destination.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination.Type">
            <summary>
            The display type of the destination.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination.Coordinates">
            <summary>
            The display coordinates of the destination.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination.#ctor(System.Int32,UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType,UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates">
            <summary>
            The coordinates of the region to display for a <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.Empty">
            <summary>
            An empty set of coordinates where no values have been set.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.Left">
            <summary>
            The left side of the region to display.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.Top">
            <summary>
            The top edge of the region to display.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.Right">
            <summary>
            The right side of the region to display
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.Bottom">
            <summary>
            The bottom edge of the region to display.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.#ctor(System.Nullable{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType">
            <summary>
            The display type for opening an <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestination"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.XyzCoordinates">
            <summary>
            Display the page with the given top left coordinates and 
            zoom level.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitPage">
            <summary>
            Fit the entire page within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitHorizontally">
            <summary>
            Fit the entire page width within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitVertically">
            <summary>
            Fit the entire page height within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitRectangle">
            <summary>
            Fit the rectangle specified by the <see cref="T:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationCoordinates"/>
            within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitBoundingBox">
            <summary>
            Fit the page's bounding box within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitBoundingBoxHorizontally">
            <summary>
            Fit the page's bounding box width within the window.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.Destinations.ExplicitDestinationType.FitBoundingBoxVertically">
            <summary>
            Fit the page's bounding box height within the window.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.NamedDestinations">
            <summary>
            Named destinations in a PDF document
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.NamedDestinations.namedDestinations">
            <summary>
            Dictionary containing explicit destinations, keyed by name
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Outline.NamedDestinations.pages">
            <summary>
            Pages are required for getting explicit destinations
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.NamedDestinations.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination},UglyToad.PdfPig.Content.Pages)">
            <summary>
            Constructor
            </summary>
            <param name="namedDestinations"></param>
            <param name="pages"></param>
        </member>
        <member name="T:UglyToad.PdfPig.Outline.DocumentBookmarkNode">
            <inheritdoc />
            <summary>
            A node in the <see cref="T:UglyToad.PdfPig.Outline.Bookmarks" /> of a PDF document which corresponds
            to a location in the current document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.DocumentBookmarkNode.PageNumber">
            <summary>
            The page number where the bookmark is located.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.DocumentBookmarkNode.Destination">
            <summary>
            The destination of the bookmark in the current document.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.DocumentBookmarkNode.#ctor(System.String,System.Int32,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.DocumentBookmarkNode"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.DocumentBookmarkNode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Outline.EmbeddedBookmarkNode">
            <inheritdoc />
            <summary>
            A node in the <see cref="T:UglyToad.PdfPig.Outline.Bookmarks" /> of a PDF document which corresponds
            to a location in an embedded file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.EmbeddedBookmarkNode.FileSpecification">
            <summary>
            The file specification for the embedded file
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.EmbeddedBookmarkNode.#ctor(System.String,System.Int32,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode},System.String)">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.ExternalBookmarkNode" />.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.EmbeddedBookmarkNode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Outline.ExternalBookmarkNode">
            <inheritdoc />
            <summary>
            A node in the <see cref="T:UglyToad.PdfPig.Outline.Bookmarks" /> of a PDF document which corresponds
            to a location in an external file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.ExternalBookmarkNode.FileName">
            <summary>
            The name of the file containing this bookmark.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.ExternalBookmarkNode.#ctor(System.String,System.Int32,UglyToad.PdfPig.Outline.Destinations.ExplicitDestination,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode},System.String)">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.ExternalBookmarkNode" />.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.ExternalBookmarkNode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Outline.UriBookmarkNode">
            <inheritdoc />
            <summary>
            A node in the <see cref="T:UglyToad.PdfPig.Outline.Bookmarks" /> of a PDF document which corresponds
            to a uniform resource identifier on the Internet.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Outline.UriBookmarkNode.Uri">
            <summary>
            The uniform resource identifier to resolve.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.UriBookmarkNode.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Outline.BookmarkNode})">
            <inheritdoc />
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Outline.ExternalBookmarkNode" />.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Outline.UriBookmarkNode.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.Parser.DocumentInformationFactory">
            <summary>
            Parse the dictionary from a PDF file trailer.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.DocumentInformationFactory.Create(UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner,UglyToad.PdfPig.CrossReference.TrailerDictionary,System.Boolean)">
            <summary>
            Convert the file trailer dictionary into a <see cref="T:UglyToad.PdfPig.Content.DocumentInformation"/> instance.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.FileStructure.CrossReferenceObjectOffsetValidator.ValidateCrossReferenceOffsets(UglyToad.PdfPig.Core.IInputBytes,UglyToad.PdfPig.CrossReference.CrossReferenceTable,UglyToad.PdfPig.Logging.ILog,System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Core.IndirectReference,System.Int64}@)">
            <summary>
            Check that the offsets in the cross reference are correct.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Parser.FileStructure.FileHeaderParser">
            <summary>
            Used to retrieve the version header from the PDF file.
            </summary>
            <remarks>
            The first line of a PDF file should be a header consisting of the 5 characters %PDF– followed by a version number of the form 1.N, where N is a digit between 0 and 7.
            A conforming reader should accept files with any of the following headers:
            %PDF–1.0
            %PDF–1.1
            %PDF–1.2
            %PDF–1.3
            %PDF–1.4
            %PDF–1.5
            %PDF–1.6
            %PDF–1.7
            This parser allows versions up to 1.9.
            For versions equal or greater to PDF 1.4, the optional Version entry in the document's catalog dictionary should be used instead of the header version.
            </remarks>
        </member>
        <member name="F:UglyToad.PdfPig.Parser.FileStructure.FileTrailerParser.EndOfFileSearchRange">
            <summary>
            The %%EOF may be further back in the file.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Parser.ParsingCachingProviders">
            <summary>
            For objects which provide document scoped caching.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Parser.Parts.BruteForceSearcher">
            <summary>
            Brute force search for all objects in the document.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.Parts.BruteForceSearcher.GetObjectLocations(UglyToad.PdfPig.Core.IInputBytes)">
            <summary>
            Find the offset of every object contained in the document by searching the entire document contents.
            </summary>
            <param name="bytes">The bytes of the document.</param>
            <returns>The object keys and offsets for the objects in this document.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamFieldSize">
            <summary>
            The array representing the size of the fields in a cross reference stream.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamFieldSize.Field1Size">
            <summary>
            The type of the entry.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamFieldSize.Field2Size">
            <summary>
            Type 0 and 2 is the object number, Type 1 this is the byte offset from beginning of file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamFieldSize.Field3Size">
            <summary>
            For types 0 and 1 this is the generation number. For type 2 it is the stream index.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamFieldSize.LineLength">
            <summary>
            How many bytes are in a line.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.Parts.CrossReference.CrossReferenceStreamParser.Parse(System.Int64,System.Nullable{System.Int64},UglyToad.PdfPig.Tokens.StreamToken)">
            <summary>
            Parses through the unfiltered stream and populates the xrefTable HashMap.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition">
            <summary>
            Each subsection of the cross-reference table starts with a line defining the starting object number
            and the count of objects in the subsection.
            </summary>
            <example>
            xref
            12 16
            ...
            
            Defines a table subsection that starts with object 12 and has 16 entries (12-27).
            </example>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition.FirstNumber">
            <summary>
            The first object number in the table.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition.Count">
            <summary>
            The number of consecutive objects declared in the table.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition.#ctor(System.Int64,System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition"/> to define a range of consecutive objects in the cross-reference table.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition.TryRead(UglyToad.PdfPig.Logging.ILog,UglyToad.PdfPig.Core.IInputBytes,UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition@)">
            <summary>
            Attempts to read the <see cref="T:UglyToad.PdfPig.Parser.Parts.CrossReference.TableSubsectionDefinition"/> from the current line of the source.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.ParsingOptions">
            <summary>
            Configures options used by the parser when reading PDF documents.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.LenientParsingOff">
            <summary>
            A default <see cref="T:UglyToad.PdfPig.ParsingOptions"/> with <see cref="P:UglyToad.PdfPig.ParsingOptions.UseLenientParsing"/> set to false.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.ClipPaths">
            <summary>
            Should the parser apply clipping to paths?
            Defaults to <see langword="false"/>.
            <para>Bezier curves will be transformed into polylines if clipping is set to <see langword="true"/>.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.UseLenientParsing">
            <summary>
            Should the parser ignore issues where the document does not conform to the PDF specification?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.Logger">
            <summary>
            The <see cref="T:UglyToad.PdfPig.Logging.ILog"/> used to record messages raised by the parsing process.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.Password">
            <summary>
            The password to use to open the document if it is encrypted. If you need to supply multiple passwords to test against
            you can use <see cref="P:UglyToad.PdfPig.ParsingOptions.Passwords"/>. The value of <see cref="P:UglyToad.PdfPig.ParsingOptions.Password"/> will be included in the list to test against.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.Passwords">
            <summary>
            All passwords to try when opening this document, will include any values set for <see cref="P:UglyToad.PdfPig.ParsingOptions.Password"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.ParsingOptions.SkipMissingFonts">
            <summary>
            Skip extracting content where the font could not be found, will result in some letters being skipped/missed
            but will prevent the library throwing where the source PDF has some corrupted text. Also skips XObjects like
            forms and images when missing.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfDocument">
            <inheritdoc />
            <summary>
            Provides access to document level information for this PDF document as well as access to the <see cref="T:UglyToad.PdfPig.Content.Page"/>s contained in the document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.Information">
            <summary>
            The metadata associated with this document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.Structure">
            <summary>
            Access to the underlying raw structure of the document. 
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.Advanced">
            <summary>
            Access to rare or advanced features of the PDF specification.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.Version">
            <summary>
            The version number of the PDF specification which this file conforms to, for example 1.4.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.NumberOfPages">
            <summary>
            Get the number of pages in this document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfDocument.IsEncrypted">
            <summary>
            Whether the document content is encrypted.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.Open(System.Byte[],UglyToad.PdfPig.ParsingOptions)">
            <summary>
            Creates a <see cref="T:UglyToad.PdfPig.PdfDocument"/> for reading from the provided file bytes.
            </summary>
            <param name="fileBytes">The bytes of the PDF file.</param>
            <param name="options">Optional parameters controlling parsing.</param>
            <returns>A <see cref="T:UglyToad.PdfPig.PdfDocument"/> providing access to the file contents.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.Open(System.String,UglyToad.PdfPig.ParsingOptions)">
            <summary>
            Opens a file and creates a <see cref="T:UglyToad.PdfPig.PdfDocument"/> for reading from the provided file path.
            </summary>
            <param name="filePath">The full path to the file location of the PDF file.</param>
            <param name="options">Optional parameters controlling parsing.</param>
            <returns>A <see cref="T:UglyToad.PdfPig.PdfDocument"/> providing access to the file contents.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.Open(System.IO.Stream,UglyToad.PdfPig.ParsingOptions)">
            <summary>
            Creates a <see cref="T:UglyToad.PdfPig.PdfDocument"/> for reading from the provided stream.
            The caller must manage disposing the stream. The created PdfDocument will not dispose the stream.
            </summary>
            <param name="stream">
            A stream of the file contents, this must support reading and seeking.
            The PdfDocument will not dispose of the provided stream.
            </param>
            <param name="options">Optional parameters controlling parsing.</param>
            <returns>A <see cref="T:UglyToad.PdfPig.PdfDocument"/> providing access to the file contents.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.GetPage(System.Int32)">
            <summary>
            Get the page with the specified page number (1 indexed).
            </summary>
            <param name="pageNumber">The number of the page to return, this starts from 1.</param>
            <returns>The page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.GetPages">
            <summary>
            Gets all pages in this document in order.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.TryGetXmpMetadata(UglyToad.PdfPig.Content.XmpMetadata@)">
            <summary>
            Get the document level metadata if present.
            The metadata is XML in the (Extensible Metadata Platform) XMP format.
            </summary>
            <remarks>This will throw a <see cref="T:System.ObjectDisposedException"/> if called on a disposed <see cref="T:UglyToad.PdfPig.PdfDocument"/>.</remarks>
            <param name="metadata">The metadata stream if it exists.</param>
            <returns><see langword="true"/> if the metadata is present, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.TryGetBookmarks(UglyToad.PdfPig.Outline.Bookmarks@)">
            <summary>
            Gets the bookmarks if this document contains some.
            </summary>
            <remarks>This will throw a <see cref="T:System.ObjectDisposedException"/> if called on a disposed <see cref="T:UglyToad.PdfPig.PdfDocument"/>.</remarks>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.TryGetForm(UglyToad.PdfPig.AcroForms.AcroForm@)">
            <summary>
            Gets the form if this document contains one.
            </summary>
            <remarks>This will throw a <see cref="T:System.ObjectDisposedException"/> if called on a disposed <see cref="T:UglyToad.PdfPig.PdfDocument"/>.</remarks>
            <returns>An <see cref="T:UglyToad.PdfPig.AcroForms.AcroForm"/> from the document or <see langword="null"/> if not present.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfDocument.Dispose">
            <inheritdoc />
            <summary>
            Dispose the <see cref="T:UglyToad.PdfPig.PdfDocument" /> and close any unmanaged resources.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfExtensions">
            <summary>
            Extensions for PDF types.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfExtensions.TryGet``1(UglyToad.PdfPig.Tokens.DictionaryToken,UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner,``0@)">
            <summary>
            Try and get the entry with a given name and type or look-up the object if it's an indirect reference.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfExtensions.Decode(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Filters.IFilterProvider)">
            <summary>
            Get the decoded data from this stream.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CharacterBoundingBox">
            <summary>
            Character bounding box.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharacterBoundingBox.GlyphBounds">
            <summary>
            The glyph bounds.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharacterBoundingBox.Width">
            <summary>
            THe width.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CharacterIdentifierSystemInfo">
            <summary>
            Specifies the character collection associated with the <see cref="T:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont"/> (CIDFont).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharacterIdentifierSystemInfo.Registry">
            <summary>
            Identifies the issuer of the character collection.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharacterIdentifierSystemInfo.Ordering">
            <summary>
            Uniquely identifies the character collection within the parent registry.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharacterIdentifierSystemInfo.Supplement">
            <summary>
            The supplement number of the character collection.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CharStringStack">
            <summary>
            The stack of numeric operands currently active in a CharString.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharStringStack.Length">
            <summary>
            The current size of the stack.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CharStringStack.CanPop">
            <summary>
            Whether it's possible to pop a value from either end of the stack.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CharStringStack.PopTop">
            <summary>
            Remove and return the value from the top of the stack.
            </summary>
            <returns>The value from the top of the stack.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CharStringStack.PopBottom">
            <summary>
            Remove and return the value from the bottom of the stack.
            </summary>
            <returns>The value from the bottom of the stack.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CharStringStack.Push(System.Double)">
            <summary>
            Adds the value to the top of the stack.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CharStringStack.Clear">
            <summary>
            Removes all values from the stack.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.CharacterIdentifierToGlyphIndexMap">
            <summary>
            Specifies mapping from character identifiers to glyph indices.
            Can either be defined as a name in which case it must be Identity or a stream which defines the mapping.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.CidFonts.CidFontType.Type0">
            <summary>
            Glyph descriptions based on Adobe Type 1 format.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.CidFonts.CidFontType.Type2">
            <summary>
            Glyph descriptions based on TrueType format.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont">
            <summary>
            A CID font contains glyph descriptions accessed by
            CID (character identifier) as character selectors.
            </summary>
            <remarks>
            A CID font contains information about a CIDFont program but is
            not itself a font. It can only be a descendant of a Type 0 font.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.Type">
            <summary>
            <see cref="F:UglyToad.PdfPig.Tokens.NameToken.Font"/>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.SubType">
            <summary>
            Either Type0 (Adobe Type 1 font) or Type2 (TrueType font).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.BaseFont">
            <summary>
            The PostScript name of the CIDFont.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.SystemInfo">
            <summary>
            The definition of the character collection for the font.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the glyph path for the given character code.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="path">The glyph path for the given character code.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.TryGetPath(System.Int32,System.Func{System.Int32,System.Nullable{System.Int32}},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the glyph path for the given character code.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="characterCodeToGlyphId"></param>
            <param name="path">The glyph path for the given character code.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the normalised glyph path for the given character code in a PDF.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="path">The normalized glyph path for the given character code.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFont.TryGetNormalisedPath(System.Int32,System.Func{System.Int32,System.Nullable{System.Int32}},System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the normalised glyph path for the given character code in a PDF.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="characterCodeToGlyphId"></param>
            <param name="path">The normalized glyph path for the given character code.</param>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.ICidFontProgram">
            <summary>
            Represents either an Adobe Type 1 or TrueType font program for a CIDFont.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.Type0CidFont">
            <inheritdoc/>
            <summary>
            Type 0 CID fonts contain glyph descriptions based on the
            Adobe Type 1 font format.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.Type2CidFont">
            <inheritdoc />
            <summary>
            Type 2 CID fonts contains glyph descriptions based on
            the TrueType font format.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents">
            <summary>
            Defines the default position and displacement vector vertical components
            for fonts which have vertical writing modes.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.Default">
            <summary>
            The default value of <see cref="T:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents"/> if not defined by a font.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.Position">
            <summary>
            The vertical component of the position vector.
            </summary>
            <remarks>
            The full position vector unless overridden by the W2 array is:
            (w0/2, Position)
            Where w0 is the width of the given glyph.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.Displacement">
            <summary>
            The vertical component of the displacement vector.
            </summary>
            <remarks>
            The full displacement vector is:
            (0, Displacement)
            </remarks>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.#ctor(System.Double,System.Double)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.GetPositionVector(System.Double)">
            <summary>
            Get the full position vector for a given glyph.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.GetDisplacementVector">
            <summary>
            Get the full displacement vector.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics">
            <summary>
            Glyphs from fonts which support vertical writing mode define displacement and position vectors.
            The position vector specifies how the horizontal writing origin is transformed into the vertical writing origin.
            The displacement vector specifies how far to move vertically before drawing the next glyph.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.DefaultVerticalWritingMetrics">
            <summary>
            The default position and displacement vectors where not overridden.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.IndividualVerticalWritingDisplacements">
            <summary>
            Overrides displacement vector y components for glyphs specified by CID code.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.IndividualVerticalWritingPositions">
            <summary>
            Overrides position vector (x and y) components for glyphs specified by CID code.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.#ctor(UglyToad.PdfPig.PdfFonts.CidFonts.VerticalVectorComponents,System.Collections.Generic.IReadOnlyDictionary{System.Int32,System.Double},System.Collections.Generic.IReadOnlyDictionary{System.Int32,UglyToad.PdfPig.Geometry.PdfVector})">
            <summary>
            Create new <see cref="T:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.GetPositionVector(System.Int32,System.Double)">
            <summary>
            Get the position vector used to convert horizontal glyph origin to vertical origin.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.CidFonts.VerticalWritingMetrics.GetDisplacementVector(System.Int32)">
            <summary>
            Get the displacement vector used to move the origin to the next glyph location after drawing.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder">
            <summary>
            A mutable class used when parsing and generating a <see cref="T:UglyToad.PdfPig.PdfFonts.Cmap.CMap"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder.CharacterIdentifierSystemInfo">
            <summary>
             Defines the character collection associated CIDFont/s for this CMap.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder.WMode">
            <summary>
            An <see langword="int"/> that determines the writing mode for any CIDFont combined with this CMap.
            0: Horizontal
            1: Vertical
            </summary>
            <remarks>
            Defined as optional.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder.Name">
            <summary>
            The PostScript name of the CMap.
            </summary>
            <remarks>
            Defined as required.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder.Version">
            <summary>
            Defines the version of this CIDFont file.
            </summary>
            <remarks>
            Defined as optional.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder.Type">
            <summary>
            Defines changes to the internal structure of Character Map files
            or operator semantics.
            </summary>
            <remarks>
            Defined as required.
            </remarks>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Cmap.CidCharacterMapping">
            <summary>
            Maps from a single character code to its CID.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CidCharacterMapping.SourceCharacterCode">
            <summary>
            The character code.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CidCharacterMapping.DestinationCid">
            <summary>
            The CID to map to.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CidCharacterMapping.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new single mapping from a character code to a CID.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Cmap.CidRange">
            <summary>
            Associates the beginning and end of a range of character codes with the starting CID for the range.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.firstCharacterCode">
            <summary>
            The beginning of the range of character codes.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.lastCharacterCode">
            <summary>
            The end of the range of character codes.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.cid">
            <summary>
            The CID associated with the beginning character code.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:UglyToad.PdfPig.PdfFonts.Cmap.CidRange"/> to associate a range of character codes to a range of CIDs.
            </summary>
            <param name="firstCharacterCode">The first character code in the range.</param>
            <param name="lastCharacterCode">The last character code in the range.</param>
            <param name="cid">The first CID for the range.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.Contains(System.Int32)">
            <summary>
            Determines if this <see cref="T:UglyToad.PdfPig.PdfFonts.Cmap.CidRange"/> contains a mapping for the character code.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CidRange.TryMap(System.Int32,System.Int32@)">
            <summary>
            Attempts to map the given character code to the corresponding CID in this range.
            </summary>
            <param name="characterCode">Character code</param>
            <param name="cidValue">The CID if found.</param>
            <returns><see langword="true"/> if the character code maps to a CID in this range or <see langword="false"/> if the character is out of range.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Cmap.CMap">
            <summary>
            The CMap (character code map) maps character codes to character identifiers (CIDs).
            The set of characters which a CMap refers to is the "character set" (charset).
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.Type">
            <summary>
            Defines the type of the internal organization of the CMap file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.Name">
            <summary>
            Defines the name of the CMap file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.Version">
            <summary>
            The version number of the CIDFont file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.CodespaceRanges">
            <summary>
            Describes the set of valid input character codes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.CidRanges">
            <summary>
            Associates ranges of character codes with their corresponding CID values.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.CidCharacterMappings">
            <summary>
            Overrides CID mappings for single character codes.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CMap.WritingMode">
            <summary>
            Controls whether the font associated with the CMap writes horizontally or vertically.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.Cmap.CMap.hasEmptyCodespace">
            <summary>
            Issue #202 seems to indicate empty codespace ranges are possible.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CMap.TryConvertToUnicode(System.Int32,System.String@)">
            <summary>
            Returns the sequence of Unicode characters for the given character code.
            </summary>
            <param name="code">Character code</param>
            <param name="result">Unicode characters(may be more than one, e.g "fi" ligature)</param>
            <returns><see langword="true"/> if this character map contains an entry for this code, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CMap.ConvertToCid(System.Int32)">
            <summary>
            Converts a character code to a CID.
            </summary>
            <param name="code">The character code.</param>
            <returns>The corresponding CID for the character code.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange">
            <summary>
             A codespace range is specified by a pair of codes of some particular length giving the lower and upper bounds of that range.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.Start">
            <summary>
            The lower-bound of this range.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.End">
            <summary>
            The upper-bound of this range.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.StartInt">
            <summary>
            The lower-bound of this range as an integer.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.EndInt">
            <summary>
            The upper-bound of this range as an integer.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.CodeLength">
            <summary>
            The number of bytes for numbers in this range.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.#ctor(System.Collections.Generic.IReadOnlyList{System.Byte},System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Creates a new instance of <see cref="T:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.Matches(System.Byte[])">
            <summary>
            Returns <see langword="true"/> if the given code bytes match this codespace range.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Cmap.CodespaceRange.IsFullMatch(System.Byte[],System.Int32)">
            <summary>
            Returns true if the given code bytes match this codespace range.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Composite.ToUnicodeCMap">
            <summary>
            Defines the information content (actual text) of the font
            as opposed to the display format.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Composite.ToUnicodeCMap.CanMapToUnicode">
            <summary>
            Does the font provide a CMap to map CIDs to Unicode values?
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Composite.ToUnicodeCMap.IsUsingIdentityAsUnicodeMap">
            <summary>
            Is this document (unexpectedly) using a predefined Identity-H/V CMap as its ToUnicode CMap?
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Composite.Type0Font">
            <summary>
            Defines glyphs using a CIDFont
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Composite.Type0Font.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Composite.Type0Font.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.DescriptorFontFile">
            <summary>
            Holds the location and type of the stream containing the corresponding font program.
            </summary>
            <remarks>
            This can either be a Type 1 font program (FontFile - <see cref="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.Type1"/>),
            a TrueType font program (FontFile2 - <see cref="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.TrueType"/>) or a font program
            whose format is given by the Subtype of the stream dictionary (FontFile3 - <see cref="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.FromSubtype"/>).
            At most only 1 of these entries is present.
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.ObjectKey">
            <summary>
            The object containing the stream for this font program.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FileType">
            <summary>
            The type of the font program represented by this descriptor.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.#ctor(UglyToad.PdfPig.Tokens.IndirectReferenceToken,UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.PdfFonts.DescriptorFontFile"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType">
            <summary>
            The type of font program represented by the stream used by this font descriptor.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.Type1">
            <summary>
            A Type 1 font program.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.TrueType">
            <summary>
            A TrueType font program.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.DescriptorFontFile.FontFileType.FromSubtype">
            <summary>
            A type defined by the stream dictionary's Subtype entry.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.FontDescriptor">
            <summary>
            Specifies metrics and attributes of a simple font or CID Font for the whole font rather than per-glyph.
            </summary>
            <remarks>
            <para>
            Provides information to enable consumer applications to find a substitute font when the font is unavailable.
            </para>
            <para>
            Font descriptors are not used with Type 0 fonts.
            </para>
            <para>
            A font descriptor is a dictionary used to specify various attributes.
            </para>
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontName">
            <summary>
            The PostScript name for the font.
            </summary>
            <remarks>Required</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontFamily">
            <summary>
            The preferred font family.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Stretch">
            <summary>
            The font stretch value.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontWeight">
            <summary>
            The weight/thickness of the font.
            </summary>
            <remarks>
            Possible values:
            100<br/>
            200<br/>
            300<br/>
            500 (normal)<br/>
            600<br/>
            700<br/>
            800<br/>
            900<br/>
            Optional
            </remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Flags">
            <summary>
            Defines various font characteristics. See <see cref="T:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags"/>.
            </summary>
            <remarks>Required</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.BoundingBox">
            <summary>
            A rectangle in glyph coordinates which represents the smallest
            rectangle containing all glyphs of the font.
            </summary>
            <remarks>Required (Except Type 3)</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.ItalicAngle">
            <summary>
            The angle in degrees counter-clockwise from vertical of the vertical
            lines of the font.
            The value is negative for fonts sloping right (italic fonts).
            </summary>
            <example>9 o'clock is represented by 90 degrees. 3 o'clock is -90 degrees.</example>
            <remarks>Required</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Ascent">
            <summary>
            The maximum height above the baseline for any glyph from this font (except for accents).
            </summary>
            <remarks>Required (Except Type 3)</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Descent">
            <summary>
            The maximum depth below the baseline for any glyph in the font. This is negative.
            </summary>
            <remarks>Required (Except Type 3)</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Leading">
            <summary>
            The spacing between consecutive lines of text. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.CapHeight">
            <summary>
            The vertical distance of the top of flat capital letters from the baseline.
            </summary>
            <remarks>Required (Where Latin Characters, Except Type 3)</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.XHeight">
            <summary>
            The x height of the font. The vertical distance of the top of flat non-ascending
            lowercase letters (e.g. x) from the baseline. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.StemVertical">
            <summary>
            The horizontal thickness of vertical stems of glyphs.
            </summary>
            <remarks>Required (Except Type 3)</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.StemHorizontal">
            <summary>
            The vertical thickness of horizontal stems of glyphs. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.AverageWidth">
            <summary>
            The average glyph width in the font. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.MaxWidth">
            <summary>
            The maximum glyph width in the font. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.MissingWidth">
            <summary>
            The width for character codes whose widths are not present in the Widths
            array of the font dictionary. Default 0.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontFile">
            <summary>
            The bytes of the font program.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.CharSet">
            <summary>
            The character names defined in a font subset.
            </summary>
            <remarks>Optional</remarks>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.FontDescriptor.#ctor(UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.PdfFonts.FontDescriptor"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder">
            <summary>
            Provides a mutable way to construct a <see cref="T:UglyToad.PdfPig.PdfFonts.FontDescriptor"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.FontName">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontName"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.FontFamily">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontFamily"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Stretch">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Stretch"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.FontWeight">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontWeight"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Flags">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Flags"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.BoundingBox">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.BoundingBox"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.ItalicAngle">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.ItalicAngle"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Ascent">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Ascent"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Descent">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Descent"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Leading">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Leading"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.CapHeight">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.CapHeight"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.XHeight">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.XHeight"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.StemVertical">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.StemVertical"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.StemHorizontal">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.StemHorizontal"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.AverageWidth">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.AverageWidth"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.MaxWidth">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.MaxWidth"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.MissingWidth">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.MissingWidth"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.FontFile">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.FontFile"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.CharSet">
            <summary>
            Sets the <see cref="P:UglyToad.PdfPig.PdfFonts.FontDescriptor.CharSet"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.#ctor(UglyToad.PdfPig.Tokens.NameToken,UglyToad.PdfPig.PdfFonts.FontDescriptorFlags)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.FontDescriptor.Builder.Build">
            <summary>
            Create the <see cref="T:UglyToad.PdfPig.PdfFonts.FontDescriptor"/> with values from this builder.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags">
            <summary>
            Specifies various characteristics of a font.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.None">
            <summary>
            No flags are set.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.Symbolic">
            <summary>
            There are glyphs outside the Adobe standard Latin set.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.Script">
            <summary>
            The glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.NonSymbolic">
            <summary>
            Font uses a (sub)set of the Adobe standard Latin set.
            </summary>
            <remarks>Cannot be set at the same time as <see cref="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.Symbolic"/>.</remarks>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.Italic">
            <summary>
            Font is italic.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.AllCap">
            <summary>
            Font contains only uppercase letters.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.SmallCap">
            <summary>
            Lowercase letters are smaller versions of the uppercase equivalent.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDescriptorFlags.ForceBold">
            <summary>
            Forces small bold text to be rendered bold.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.FontDetails">
            <summary>
            Summary details of the font used to draw a glyph.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDetails.DefaultWeight">
            <summary>
            The normal weight for a font.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontDetails.BoldWeight">
            <summary>
            The bold weight for a font.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDetails.Name">
            <summary>
            The font name.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDetails.IsBold">
            <summary>
            Whether the font is bold.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDetails.Weight">
            <summary>
            The font weight, values above 500 represent bold.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.FontDetails.IsItalic">
            <summary>
            Whether the font is italic.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.FontDetails.#ctor(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.PdfFonts.FontDetails"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.FontDetails.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.FontStretch">
            <summary>
            The font stretch.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.Unknown">
            <summary>
            Not specified or not a recognised value.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.UltraCondensed">
            <summary>
            Ultra Condensed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.ExtraCondensed">
            <summary>
            Extra Condensed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.Condensed">
            <summary>
            Condensed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.SemiCondensed">
            <summary>
            Semi Condensed.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.SemiExpanded">
            <summary>
            Semi Expanded
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.Expanded">
            <summary>
            Expanded
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.ExtraExpanded">
            <summary>
            Extra Expanded
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.PdfFonts.FontStretch.UltraExpanded">
            <summary>
            Ultra Expanded
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.IFont">
            <summary>
            Font base interface.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.IFont.Name">
            <summary>
            The font name.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.IFont.IsVertical">
            <summary>
            Is the font vertical.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.IFont.Details">
            <summary>
            The font details.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.ReadCharacterCode(UglyToad.PdfPig.Core.IInputBytes,System.Int32@)">
            <summary>
            Read the character code.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.TryGetUnicode(System.Int32,System.String@)">
            <summary>
            Try get the unicode value.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.GetBoundingBox(System.Int32)">
            <summary>
            Get the font bounding box.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.GetFontMatrix">
            <summary>
            Get the font transformation matrix.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the glyph path for the given character code.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="path">The glyph path for the given character code.</param>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IFont.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            Returns the normalised glyph path for the given character code in a PDF.
            </summary>
            <param name="characterCode">Character code in a PDF. Not to be confused with unicode.</param>
            <param name="path">The normalized glyph path for the given character code.</param>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.IVerticalWritingSupported">
            <summary>
            A font which supports a vertical writing mode in addition to the default horizontal writing mode.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.IVerticalWritingSupported.GetPositionVector(System.Int32)">
            <summary>
            In vertical fonts the glyph position is described by a position vector from the origin used for horizontal writing.
            The position vector is applied to the horizontal writing origin to give a new vertical writing origin. 
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Parser.Parts.BaseFontRangeParser">
            <summary>
            The beginbfrange and endbfrange operators map i ranges of input codes to the corresponding output code range.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Parser.Parts.ICidFontPartParser`1">
            <summary>
            Provides parsing for a certain operator type in a CID font definition.
            </summary>
            <typeparam name="TToken">The type of the token preceding the operation we wish to parse.</typeparam>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Parser.Parts.ICidFontPartParser`1.Parse(`0,UglyToad.PdfPig.Tokenization.Scanner.ITokenScanner,UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder)">
            <summary>
            Parse the definition for this part of the CID font and write the results to the <see cref="T:UglyToad.PdfPig.PdfFonts.Cmap.CharacterMapBuilder"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.TrueTypeSimpleFont.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.TrueTypeSimpleFont.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Simple.TrueTypeStandard14FallbackSimpleFont">
            <summary>
            Some TrueType fonts use both the Standard 14 descriptor and the TrueType font from disk.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.TrueTypeStandard14FallbackSimpleFont.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.TrueTypeStandard14FallbackSimpleFont.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Simple.Type1FontSimple">
            <summary>
            A font based on the Adobe Type 1 font format.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type1FontSimple.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type1FontSimple.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <inheritdoc/>
        </member>
        <member name="T:UglyToad.PdfPig.PdfFonts.Simple.Type1Standard14Font">
            <summary>
            A font using one of the Adobe Standard 14 fonts. Can use a custom encoding.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type1Standard14Font.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            <inheritdoc/>
            <para>Not implemeted.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type1Standard14Font.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            <inheritdoc/>
            <para>Not implemeted.</para>
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.PdfFonts.Simple.Type3Font.Name">
            <summary>
            Type 3 fonts are usually unnamed.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type3Font.TryGetPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            <inheritdoc/>
            <para>Type 3 fonts do not use vector paths. Always returns <c>false</c>.</para>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.PdfFonts.Simple.Type3Font.TryGetNormalisedPath(System.Int32,System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Core.PdfSubpath}@)">
            <summary>
            <inheritdoc/>
            <para>Type 3 fonts do not use vector paths. Always returns <c>false</c>.</para>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Rendering.IPageImageRenderer">
            <summary>
            Render page as an image.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Rendering.IPageImageRenderer.Render(UglyToad.PdfPig.Content.Page,System.Double,UglyToad.PdfPig.Rendering.PdfRendererImageFormat)">
            <summary>
            Render page as an image.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="scale">The scale to apply to the page (i.e. zoom level).</param>
            <param name="imageFormat">The output image format, if supported.</param>
            <returns>The image as a memory stream.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Rendering.PdfRendererImageFormat">
            <summary>
            The output image format of the <see cref="T:UglyToad.PdfPig.Rendering.IPageImageRenderer"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Rendering.PdfRendererImageFormat.Bmp">
            <summary>
            Bitmap image format.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Rendering.PdfRendererImageFormat.Jpeg">
            <summary>
            Jpeg/Jpg image format.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Rendering.PdfRendererImageFormat.Png">
            <summary>
            Png image format.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Rendering.PdfRendererImageFormat.Tiff">
            <summary>
            Tiff image format.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Rendering.PdfRendererImageFormat.Gif">
            <summary>
            Gif image format.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Structure">
            <summary>
            Provides access to explore and retrieve the underlying PDF objects from the document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Structure.Catalog">
            <summary>
            The root of the document's hierarchy providing access to the page tree as well as other information.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Structure.CrossReferenceTable">
            <summary>
            The cross-reference table enables direct access to objects by number.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Structure.TokenScanner">
            <summary>
            Provides access to tokenization capabilities for objects by object number.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Structure.GetObject(UglyToad.PdfPig.Core.IndirectReference)">
            <summary>
            Retrieve the tokenized object with the specified object reference number.
            </summary>
            <param name="reference">The object reference number.</param>
            <returns>The tokenized PDF object from the file.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner">
            <summary>
            Tokenizes objects from bytes in a PDF file.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner.Get(UglyToad.PdfPig.Core.IndirectReference)">
            <summary>
            Tokenize the object with a given object number.
            May return null when the reference is undefined
            </summary>
            <param name="reference">The object number for the object to tokenize.</param>
            <returns>The tokenized object.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner.ReplaceToken(UglyToad.PdfPig.Core.IndirectReference,UglyToad.PdfPig.Tokens.IToken)">
            <summary>
            Adds the token to an internal cache that will be returned instead of
            scanning the source PDF data.
            </summary>
            <param name="reference">The object number for the object to replace.</param>
            <param name="token">The token to replace the existing data.</param>
        </member>
        <member name="F:UglyToad.PdfPig.Tokenization.Scanner.ObjectLocationProvider.crossReferenceTable">
            <summary>
            Since we want to scan objects while reading the cross reference table we lazily load it when it's ready.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Tokenization.Scanner.ObjectLocationProvider.loadedFromTable">
            <summary>
            Indicates whether we now have a cross reference table.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Tokenization.Scanner.PdfTokenScanner.readTokens">
            <summary>
            Stores tokens encountered between obj - endobj markers for each <see cref="M:UglyToad.PdfPig.Tokenization.Scanner.PdfTokenScanner.MoveNext"/> call.
            Cleared after each operation.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Tokenization.Scanner.PossibleStreamEndLocation">
            <summary>
            Used internally by the <see cref="T:UglyToad.PdfPig.Tokenization.Scanner.PdfTokenScanner"/> when reading streams to store any occurrences of 'endobj' or 'endstream' observed.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Tokenization.Scanner.PossibleStreamEndLocation.Offset">
            <summary>
            The offset at which the token started in the file.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Tokenization.Scanner.PossibleStreamEndLocation.Type">
            <summary>
            The type, one of either <see cref="F:UglyToad.PdfPig.Tokens.OperatorToken.EndObject"/> or <see cref="F:UglyToad.PdfPig.Tokens.OperatorToken.EndStream"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Tokenization.Scanner.PossibleStreamEndLocation.#ctor(System.Int64,UglyToad.PdfPig.Tokens.OperatorToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Tokenization.Scanner.PossibleStreamEndLocation"/>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.Adler32Checksum">
            <summary>
            Used to calculate the Adler-32 checksum used for ZLIB data in accordance with 
            RFC 1950: ZLIB Compressed Data Format Specification.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Adler32Checksum.Calculate(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Calculate the Adler-32 checksum for some data.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example><code>
            [CanBeNull] object Test() => null;
            
            void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>.
            </summary>
            <example><code>
            [NotNull] object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ItemNotNullAttribute">
            <summary>
            Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
            and Lazy classes to indicate that the value of a collection item, of the Task.Result property
            or of the Lazy.Value property can never be null.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ItemCanBeNullAttribute">
            <summary>
            Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
            and Lazy classes to indicate that the value of a collection item, of the Task.Result property
            or of the Lazy.Value property can be null.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form.
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            void ShowError(string message, params object[] args) { /* do something */ }
            
            void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:UglyToad.PdfPig.Util.JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example><code>
            void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
             is used to notify that some property value changed.
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
             
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               string _name;
             
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for method output
            means that the methos doesn't return normally (throws or terminates the process).<br/>
            Value <c>canbenull</c> is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute
            with rows separated by semicolon. There is no notion of order rows, all rows are checked
            for applicability and applied per each program state tracked by R# analysis.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=&gt; halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null =&gt; true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null =&gt; null; notnull =&gt; notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("=&gt; true, result: notnull; =&gt; false, result: null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            class Foo {
              string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            
            class UsesNoEquality {
              void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            class ComponentAttribute : Attribute { }
            
            [Component] // ComponentAttribute requires implementing IComponent interface
            class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections).
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes
            as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type.</summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.UsedImplicitlyAttribute"/>.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used.</summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack.
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>.
            </summary>
            <example><code>
            [Pure] int Multiply(int x, int y) => x * y;
            
            void M() {
              Multiply(123, 42); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MustUseReturnValueAttribute">
            <summary>
            Indicates that the return value of method invocation must be used.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.ProvidesContextAttribute">
            <summary>
            Indicates the type member or parameter of some type, that should be used instead of all other ways
            to get the value that type. This annotation is useful when you have some "context" value evaluated
            and stored somewhere, meaning that all other ways to get this value must be consolidated with existing one.
            </summary>
            <example><code>
            class Foo {
              [ProvidesContext] IBarService _barService = ...;
            
              void ProcessNode(INode node) {
                DoSomething(node, node.GetGlobalServices().Bar);
                //              ^ Warning: use value of '_barService' field
              }
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.SourceTemplateAttribute">
            <summary>
            An extension method marked with this attribute is processed by ReSharper code completion
            as a 'Source Template'. When extension method is completed over some expression, it's source code
            is automatically expanded like a template at call site.
            </summary>
            <remarks>
            Template method body can contain valid source code and/or special comments starting with '$'.
            Text inside these comments is added as source code when the template is applied. Template parameters
            can be used either as additional method parameters or as identifiers wrapped in two '$' signs.
            Use the <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute"/> attribute to specify macros for parameters.
            </remarks>
            <example>
            In this example, the 'forEach' method is a source template available over all values
            of enumerable types, producing ordinary C# 'foreach' statement and placing caret inside block:
            <code>
            [SourceTemplate]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs) {
              foreach (var x in xs) {
                 //$ $END$
              }
            }
            </code>
            </example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute">
            <summary>
            Allows specifying a macro for a parameter of a <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.SourceTemplateAttribute">source template</see>.
            </summary>
            <remarks>
            You can apply the attribute on the whole method or on any of its additional parameters. The macro expression
            is defined in the <see cref="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Expression"/> property. When applied on a method, the target
            template parameter is defined in the <see cref="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Target"/> property. To apply the macro silently
            for the parameter, set the <see cref="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Editable"/> property value = -1.
            </remarks>
            <example>
            Applying the attribute on a source template method:
            <code>
            [SourceTemplate, Macro(Target = "item", Expression = "suggestVariableName()")]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; collection) {
              foreach (var item in collection) {
                //$ $END$
              }
            }
            </code>
            Applying the attribute on a template method parameter:
            <code>
            [SourceTemplate]
            public static void something(this Entity x, [Macro(Expression = "guid()", Editable = -1)] string newguid) {
              /*$ var $x$Id = "$newguid$" + x.ToString();
              x.DoSomething($x$Id); */
            }
            </code>
            </example>
        </member>
        <member name="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Expression">
            <summary>
            Allows specifying a macro that will be executed for a <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.SourceTemplateAttribute">source template</see>
            parameter when the template is expanded.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Editable">
            <summary>
            Allows specifying which occurrence of the target parameter becomes editable when the template is deployed.
            </summary>
            <remarks>
            If the target parameter is used several times in the template, only one occurrence becomes editable;
            other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,
            use values >= 0. To make the parameter non-editable when the template is expanded, use -1.
            </remarks>>
        </member>
        <member name="P:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute.Target">
            <summary>
            Identifies the target parameter of a <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.SourceTemplateAttribute">source template</see> if the
            <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.MacroAttribute"/> is applied on a template method.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcSuppressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view component. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcViewComponentAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view component name.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcViewComponentViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view component view. If applied to a method, the MVC view component view name is default.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method, constructor invocation or property access
            over collection type affects content of the collection.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.CollectionAccessType.None">
            <summary>Method does not use or modify content of the collection.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.CollectionAccessType.Read">
            <summary>Method only reads content of the collection but does not modify it.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>Method can change content of the collection but does not add new elements.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.CollectionAccessType.UpdatedContent">
            <summary>Method can add new elements to the collection.</summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with 
            <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionMethodAttribute"/> attribute. The mandatory argument of
            the attribute is the assertion type.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionType.IS_TRUE">
            <summary>Marked parameter should be evaluated to true.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionType.IS_FALSE">
            <summary>Marked parameter should be evaluated to false.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionType.IS_NULL">
            <summary>Marked parameter should be evaluated to null value.</summary>
        </member>
        <member name="F:UglyToad.PdfPig.Util.JetBrains.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>Marked parameter should be evaluated to not null value.</summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.NoReorderAttribute">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            </summary>
            <remarks>
            The attribute must be mentioned in your member reordering patterns
            </remarks>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be treated
            as <c>ItemsControl</c>-derived type, to enable inner items <c>DataContext</c> type resolve.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            </summary>
            <remarks>
            Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:UglyToad.PdfPig.Util.JetBrains.Annotations.XamlItemsControlAttribute"/> attribute.
            </remarks>
        </member>
        <member name="T:UglyToad.PdfPig.Util.DateFormatHelper">
            <summary>
            Helper class for dates.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.DateFormatHelper.TryParseDateTimeOffset(System.String,System.DateTimeOffset@)">
            <summary>
            Try parsing a pdf formatted date string into a <see cref="T:System.DateTimeOffset"/>.
            <para>Date values used in a PDF shall conform to a standard date format, which closely 
            follows that of the international standard ASN.1, defined in ISO/IEC 8824. A date shall be a text string 
            of the form (D:YYYYMMDDHHmmSSOHH'mm).</para>
            </summary>
            <param name="s">The pdf formated date string, e.g. D:199812231952-08'00.</param>
            <param name="offset">The parsed date.</param>
            <returns>True if parsed.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Util.DefaultWordExtractor">
            <summary>
            Default Word Extractor.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.DefaultWordExtractor.GetWords(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.Letter})">
            <summary>
            Gets the words.
            </summary>
            <param name="letters">The letters in the page.</param>
        </member>
        <member name="P:UglyToad.PdfPig.Util.DefaultWordExtractor.Instance">
            <summary>
            Create an instance of Default Word Extractor, <see cref="T:UglyToad.PdfPig.Util.DefaultWordExtractor"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.Hex">
             Utility functions for hex encoding.
            
             @author John Hewson
        </member>
        <member name="F:UglyToad.PdfPig.Util.Hex.HexChars">
             for hex conversion.
             
             https://stackoverflow.com/questions/2817752/java-code-to-convert-byte-to-hexadecimal
            
        </member>
        <member name="M:UglyToad.PdfPig.Util.Hex.GetString(System.Byte[])">
            <summary>
            Returns a hex string for the given byte array.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.IWordExtractor">
            <summary>
            An approach used to generate words from a set of letters.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.IWordExtractor.GetWords(System.Collections.Generic.IReadOnlyList{UglyToad.PdfPig.Content.Letter})">
            <summary>
            Generate words from the input set of letters.
            </summary>
            <param name="letters">The letters to generate words for.</param>
            <returns>An enumerable of words from this approach.</returns>
        </member>
        <member name="F:UglyToad.PdfPig.Util.Matrix3x3.Identity">
            <summary>
            The identity matrix. The result of multiplying a matrix with
            the identity matrix is the matrix itself.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a 3x3 matrix with the following layout:
            
            | m11  m12  m13 |
            | m21  m22  m23 |
            | m31  m32  m33 |
            
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.Inverse">
             <summary>
             Returns a new matrix that is the inverse of this matrix (i.e. multiplying a matrix with
             its inverse matrix yields the identity matrix).
            
             If an inverse matrix does not exist, null is returned.
             </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.Multiply(System.Double)">
            <summary>
            Returns a new matrix with each element being a mulitple of the supplied factor.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.Multiply(System.ValueTuple{System.Double,System.Double,System.Double})">
            <summary>
            Multiplies this matrix with the supplied 3-element vector
            and returns a new 3-element vector as the result.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.Multiply(UglyToad.PdfPig.Util.Matrix3x3)">
            <summary>
            Returns a new matrix that is the 'dot product' of this matrix
            and the supplied matrix.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.Matrix3x3.Transpose">
            <summary>
            Returns a new matrix that is the transpose of this matrix
            (i.e. the tranpose of a matrix, is a matrix with its rows
            and column interchanged)
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Util.WhitespaceSizeStatistics">
            <summary>
            Measures of whitespace size based on point size.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.WhitespaceSizeStatistics.GetExpectedWhitespaceSize(UglyToad.PdfPig.Content.Letter)">
            <summary>
            Get the average whitespace sized expected for a given letter.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Util.WhitespaceSizeStatistics.IsProbablyWhitespace(System.Double,UglyToad.PdfPig.Content.Letter)">
            <summary>
            Check if the measured gap is probably big enough to be a whitespace character based on the letter.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.IPdfStreamWriter.AttemptDeduplication">
            <summary>
            Sets if the stream writer should attempt to deduplicate objects.
            May not have any affect if <see cref="T:UglyToad.PdfPig.Writer.IPdfStreamWriter"/> does not
            support deduplication.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.IPdfStreamWriter.Stream">
            <summary>
            The underlying stream used by the writer.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.IPdfStreamWriter.WriteToken(UglyToad.PdfPig.Tokens.IToken)">
            <summary>
            Writes a single token to the stream.
            </summary>
            <param name="token">Token to write.</param>
            <returns>Indirect reference to the token.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.IPdfStreamWriter.WriteToken(UglyToad.PdfPig.Tokens.IToken,UglyToad.PdfPig.Tokens.IndirectReferenceToken)">
            <summary>
            Writes a token to a reserved object number.
            </summary>
            <param name="token">Token to write.</param>
            <param name="indirectReference">Reserved indirect reference.</param>
            <returns>Reserved indirect reference.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.IPdfStreamWriter.ReserveObjectNumber">
            <summary>
            Reserves an object number for an object to be written.
            Useful with cyclic references where object number must be known before
            writing.
            </summary>
            <returns>A reserved indirect reference.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.IPdfStreamWriter.InitializePdf(System.Decimal)">
            <summary>
            Initializes the PDF stream with pdf header.
            </summary>
            <param name="version">Version of PDF.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.IPdfStreamWriter.CompletePdf(UglyToad.PdfPig.Tokens.IndirectReferenceToken,UglyToad.PdfPig.Tokens.IndirectReferenceToken)">
            <summary>
            Completes the PDF writing trailing PDF information.
            </summary>
            <param name="catalogReference">Indirect reference of catalog.</param>
            <param name="documentInformationReference">Reference to document information (optional)</param>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.ITokenWriter">
            <summary>
            Writes any type of <see cref="T:UglyToad.PdfPig.Tokens.IToken"/> to the corresponding PDF document format output.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.ITokenWriter.WriteToken(UglyToad.PdfPig.Tokens.IToken,System.IO.Stream)">
            <summary>
            Writes the given input token to the output stream with the correct PDF format and encoding including whitespace and line breaks as applicable.
            </summary>
            <param name="token">The token to write to the stream.</param>
            <param name="outputStream">The stream to write the token to.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.ITokenWriter.WriteObject(System.Int64,System.Int32,System.Byte[],System.IO.Stream)">
            <summary>
            Writes pre-serialized token as an object token to the output stream.
            </summary>
            <param name="objectNumber">Object number of the indirect object.</param>
            <param name="generation">Generation of the indirect object.</param>
            <param name="data">Pre-serialized object contents.</param>
            <param name="outputStream">The stream to write the token to.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.ITokenWriter.WriteCrossReferenceTable(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Core.IndirectReference,System.Int64},UglyToad.PdfPig.Core.IndirectReference,System.IO.Stream,System.Nullable{UglyToad.PdfPig.Core.IndirectReference})">
            <summary>
            Writes a valid single section cross-reference (xref) table plus trailer dictionary to the output for the set of object offsets.
            </summary>
            <param name="objectOffsets">The byte offset from the start of the document for each object in the document.</param>
            <param name="catalogToken">The object representing the catalog dictionary which is referenced from the trailer dictionary.</param>
            <param name="outputStream">The output stream to write to.</param>
            <param name="documentInformationReference">The object reference for the document information dictionary if present.</param>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.NoTextTokenWriter">
            <summary>
            Derived class of <see cref="T:UglyToad.PdfPig.Writer.TokenWriter"/> that does not write <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText"/> or <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning"/> operations in streams
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.NoTextTokenWriter.WriteStream(UglyToad.PdfPig.Tokens.StreamToken,System.IO.Stream)">
            <summary>
            Write stream without <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText"/> or <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning"/> operations
            </summary>
            <param name="streamToken"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.NoTextTokenWriter.TryGetStreamWithoutText(UglyToad.PdfPig.Tokens.StreamToken,UglyToad.PdfPig.Tokens.StreamToken@)">
            <summary>
            Try get a stream without <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowText"/> or <see cref="T:UglyToad.PdfPig.Graphics.Operations.TextShowing.ShowTextsWithPositioning"/> operations.
            </summary>
            <param name="streamToken"></param>
            <param name="outputStreamToken"></param>
            <returns>true if any text operation found (and we have a valid <paramref name="outputStreamToken"/> without the text operations),
            false if no text operation found (in which case <paramref name="outputStreamToken"/> is null)</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfAStandard">
            <summary>
            The standard of PDF/A compliance for generated documents.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.None">
            <summary>
            No PDF/A compliance.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A1B">
            <summary>
            Compliance with PDF/A1-B. Level B (basic) conformance are standards necessary for the reliable reproduction of a document's visual appearance.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A1A">
            <summary>
            Compliance with PDF/A1-A. Level A (accessible) conformance are PDF/A1-B standards in addition to features intended to improve a document's accessibility. 
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A2B">
            <summary>
            Compliance with PDF/A2-B. Level B (basic) conformance are standards necessary for the reliable reproduction of a document's visual appearance.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A2A">
            <summary>
            Compliance with PDF/A2-A. Level A (accessible) conformance are PDF/A2-B standards in addition to features intended to improve a document's accessibility.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A3B">
            <summary>
            Compliance with PDF/A3-B. Level B (basic) conformance are PDF/A2-B standards in addition to support for embedded files
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfAStandard.A3A">
            <summary>
            Compliance with PDF/A3-A. Level A (accessible) conformance are PDF/A3-B standards in addition to features intended to improve a document's accessibility.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash">
            <summary>
            A hash combiner that is implemented with the Fowler/Noll/Vo algorithm (FNV-1a). This is a mutable struct for performance reasons.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Offset">
            <summary>
            The starting point of the FNV hash.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Prime">
            <summary>
            The prime number used to compute the FNV hash.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.HashCode">
            <summary>
            Gets the current result of the hash function.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Create">
            <summary>
            Creates a new FNV hash initialized to <see cref="F:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Offset"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Combine(System.Byte)">
            <summary>
            Adds the specified byte to the hash.
            </summary>
            <param name="data">The byte to hash.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDedupStreamWriter.FnvHash.Combine(System.Int32)">
            <summary>
            Adds the specified integer to this hash, in little-endian order.
            </summary>
            <param name="data">The integer to hash.</param>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfDocumentBuilder">
            <summary>
            Provides methods to construct new PDF documents.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.ArchiveStandard">
            <summary>
            The standard of PDF/A compliance of the generated document. Defaults to <see cref="F:UglyToad.PdfPig.Writer.PdfAStandard.None"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.IncludeDocumentInformation">
            <summary>
            Whether to include the document information dictionary in the produced document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformation">
            <summary>
            The values of the fields to include in the document information dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Bookmarks">
            <summary>
            The bookmark nodes to include in the document outline dictionary.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Pages">
            <summary>
            The current page builders in the document and the corresponding 1 indexed page numbers. Use <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(System.Double,System.Double)"/>
            or <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(UglyToad.PdfPig.Content.PageSize,System.Boolean)"/> to add a new page.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Fonts">
            <summary>
            The fonts currently available in the document builder added via <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte})"/> or <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddStandard14Font(UglyToad.PdfPig.Fonts.Standard14Fonts.Standard14Font)"/>. Keyed by id for internal purposes.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.#ctor">
            <summary>
            Creates a document builder keeping resources in memory.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.#ctor(System.Decimal)">
            <summary>
            Creates a document builder keeping resources in memory.
            </summary>
            <param name="version">Pdf version to use in header.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.#ctor(System.IO.Stream,System.Boolean,UglyToad.PdfPig.Writer.PdfWriterType,System.Decimal,UglyToad.PdfPig.Writer.ITokenWriter)">
            <summary>
            Creates a document builder using the supplied stream.
            </summary>
            <param name="stream">Steam to write pdf to.</param>
            <param name="disposeStream">If stream should be disposed when builder is.</param>
            <param name="type">Type of pdf stream writer to use</param>
            <param name="version">Pdf version to use in header.</param>
            <param name="tokenWriter">Token writer to use</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.CanUseTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte},System.Collections.Generic.IReadOnlyList{System.String}@)">
            <summary>
            Determines whether the bytes of the TrueType font file provided can be used in a PDF document.
            </summary>
            <param name="fontFileBytes">The bytes of a TrueType font file.</param>
            <param name="reasons">Any reason messages explaining why the file can't be used, if applicable.</param>
            <returns><see langword="true"/> if the file can be used, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>
            Adds a TrueType font to the builder so that pages in this document can use it.
            </summary>
            <param name="fontFileBytes">The bytes of a TrueType font.</param>
            <returns>An identifier which can be passed to <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddText(System.String,System.Decimal,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont)"/>.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddStandard14Font(UglyToad.PdfPig.Fonts.Standard14Fonts.Standard14Font)">
            <summary>
            Adds one of the Standard 14 fonts which are included by default in PDF programs so that pages in this document can use it. These Standard 14 fonts are old and possibly obsolete.
            </summary>
            <param name="type">The type of the Standard 14 font to use.</param>
            <returns>An identifier which can be passed to <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddText(System.String,System.Decimal,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont)"/>.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(System.Double,System.Double)">
            <summary>
            Add a new page with the specified size, this page will be included in the output when <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Build"/> is called.
            </summary>
            <param name="width">The width of the page in points.</param>
            <param name="height">The height of the page in points.</param>
            <returns>A builder for editing the new page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(UglyToad.PdfPig.Content.PageSize,System.Boolean)">
            <summary>
            Add a new page with the specified size, this page will be included in the output when <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Build"/> is called.
            </summary>
            <param name="size">The size of the page to add.</param>
            <param name="isPortrait">Whether the page is in portait or landscape orientation.</param>
            <returns>A builder for editing the new page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(UglyToad.PdfPig.PdfDocument,System.Int32)">
            <summary>
            Add a new page with the specified size, this page will be included in the output when <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Build"/> is called.
            </summary>
            <param name="document">Source document.</param>
            <param name="pageNumber">Page to copy.</param>
            <returns>A builder for editing the page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddPage(UglyToad.PdfPig.PdfDocument,System.Int32,System.Func{UglyToad.PdfPig.Actions.PdfAction,UglyToad.PdfPig.Actions.PdfAction})">
            <summary>
            Add a new page with the specified size, this page will be included in the output when <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Build"/> is called.
            </summary>
            <param name="document">Source document.</param>
            <param name="pageNumber">Page to copy.</param>
            <param name="copyLink">If set, links are copied based on the result of the delegate.</param>
            <returns>A builder for editing the page.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Build">
            <summary>
            Builds a PDF document from the current content of this builder and its pages.
            </summary>
            <returns>The bytes of the resulting PDF document.</returns>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont">
            <summary>
            A key representing a font available to use on the current document builder. Create by adding a font to a document using either
            <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddStandard14Font(UglyToad.PdfPig.Fonts.Standard14Fonts.Standard14Font)"/> or <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte})"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont.Id">
            <summary>
            The Id uniquely identifying this font on the builder.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont.Reference">
            <summary>
            Reference to the added font.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont.#ctor(System.Guid,UglyToad.PdfPig.Tokens.IndirectReferenceToken)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder">
            <summary>
            Sets the values of the <see cref="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformation"/> dictionary for the document being created.
            Control inclusion of the document information dictionary on the output with <see cref="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.IncludeDocumentInformation"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Title">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Title"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Author">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Author"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Subject">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Subject"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Keywords">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Keywords"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Creator">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Creator"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.Producer">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.Producer"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.CreationDate">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.CreationDate"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder.ModifiedDate">
            <summary>
            <see cref="P:UglyToad.PdfPig.Content.DocumentInformation.ModifiedDate"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.Dispose">
            <summary>
            Disposes underlying stream if set to do so.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfMerger">
            <summary>
            Merges PDF documents into each other.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder)">
            <summary>
            Merge two PDF documents together with the pages from <paramref name="file1"/> followed by <paramref name="file2"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.String,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder)">
            <summary>
            Merge two PDF documents together with the pages from <paramref name="file1"/> followed by <paramref name="file2"/> into the output stream.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.String[])">
            <summary>
            Merge multiple PDF documents together with the pages in the order the file paths are provided.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder,System.String[])">
            <summary>
            Merge multiple PDF documents together with the pages in the order the file paths are provided.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.IO.Stream,System.String[])">
            <summary>
            Merge multiple PDF documents together with the pages in the order the file paths are provided into the output stream
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.IO.Stream,UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder,System.String[])">
            <summary>
            Merge multiple PDF documents together with the pages in the order the file paths are provided into the output stream
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.Collections.Generic.IReadOnlyList{System.Byte[]},System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IReadOnlyList{System.Int32}},UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder)">
            <summary>
            Merge the set of PDF documents.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfMerger.Merge(System.Collections.Generic.IReadOnlyList{System.IO.Stream},System.IO.Stream,System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IReadOnlyList{System.Int32}},UglyToad.PdfPig.Writer.PdfAStandard,UglyToad.PdfPig.Writer.PdfDocumentBuilder.DocumentInformationBuilder)">
            <summary>
            Merge the set of PDF documents into the output stream
            The caller must manage disposing the stream. The created PdfDocument will not dispose the stream.
            <param name="streams">
            A list of streams for the files contents, this must support reading and seeking.
            </param>
            <param name="output">Must be writable</param>
            <param name="pagesBundle"></param>
            <param name="archiveStandard"></param>
            <param name="docInfoBuilder"></param>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfPageBuilder">
            <summary>
            A builder used to add construct a page in a PDF document.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.PageNumber">
            <summary>
            The number of this page, 1-indexed.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.PageSize">
            <summary>
            The current size of the page.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.CurrentStream">
            <summary>
            Access to the underlying data structures for advanced use cases.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.ContentStreams">
            <summary>
            Access to
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.NewContentStreamBefore">
            <summary>
            Allow to append a new content stream before the current one and select it
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.NewContentStreamAfter">
            <summary>
            Allow to append a new content stream after the current one and select it
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SelectContentStream(System.Int32)">
            <summary>
            Select a content stream from the list, by his index
            </summary>
            <param name="index">index of the content stream to be selected</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.DrawLine(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,System.Decimal)">
            <summary>
            Draws a line on the current page between two points with the specified line width.
            </summary>
            <param name="from">The first point on the line.</param>
            <param name="to">The last point on the line.</param>
            <param name="lineWidth">The width of the line in user space units.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.DrawRectangle(UglyToad.PdfPig.Core.PdfPoint,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Draws a rectangle on the current page starting at the specified point with the given width, height and line width.
            </summary>
            <param name="position">The position of the rectangle, for positive width and height this is the bottom-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
            <param name="lineWidth">The width of the line border of the rectangle.</param>
            <param name="fill">Whether to fill with the color set by <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextAndFillColor(System.Byte,System.Byte,System.Byte)"/>.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetRotation(UglyToad.PdfPig.Content.PageRotationDegrees)">
            <summary>
            Set the number of degrees by which the page is rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.DrawTriangle(UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Core.PdfPoint,System.Decimal,System.Boolean)">
            <summary>
            Draws a triangle on the current page with the specified points and line width.
            </summary>
            <param name="point1">Position of the first corner of the triangle.</param>
            <param name="point2">Position of the second corner of the triangle.</param>
            <param name="point3">Position of the third corner of the triangle.</param>
            <param name="lineWidth">The width of the line border of the triangle.</param>
            <param name="fill">Whether to fill with the color set by <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextAndFillColor(System.Byte,System.Byte,System.Byte)"/>.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.DrawCircle(UglyToad.PdfPig.Core.PdfPoint,System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Draws a circle on the current page centering at the specified point with the given diameter and line width.
            </summary>
            <param name="center">The center position of the circle.</param>
            <param name="diameter">The diameter of the circle.</param>
            <param name="lineWidth">The width of the line border of the circle.</param>
            <param name="fill">Whether to fill with the color set by <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextAndFillColor(System.Byte,System.Byte,System.Byte)"/>.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.DrawEllipsis(UglyToad.PdfPig.Core.PdfPoint,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Draws an ellipsis on the current page centering at the specified point with the given width, height and line width.
            </summary>
            <param name="center">The center position of the ellipsis.</param>
            <param name="width">The width of the ellipsis.</param>
            <param name="height">The height of the ellipsis.</param>
            <param name="lineWidth">The width of the line border of the ellipsis.</param>
            <param name="fill">Whether to fill with the color set by <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextAndFillColor(System.Byte,System.Byte,System.Byte)"/>.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetStrokeColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the stroke color for any following operations to the RGB value. Use <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.ResetColor"/> to reset.
            </summary>
            <param name="r">Red - 0 to 255</param>
            <param name="g">Green - 0 to 255</param>
            <param name="b">Blue - 0 to 255</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetStrokeColorExact(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Sets the stroke color with the exact decimal value between 0 and 1 for any following operations to the RGB value. Use <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.ResetColor"/> to reset.
            </summary>
            <param name="r">Red - 0 to 1</param>
            <param name="g">Green - 0 to 1</param>
            <param name="b">Blue - 0 to 1</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextAndFillColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the fill and text color for any following operations to the RGB value. Use <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.ResetColor"/> to reset.
            </summary>
            <param name="r">Red - 0 to 255</param>
            <param name="g">Green - 0 to 255</param>
            <param name="b">Blue - 0 to 255</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.ResetColor">
            <summary>
            Restores the stroke, text and fill color to default (black).
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.MeasureText(System.String,System.Decimal,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont)">
            <summary>
            Calculates the size and position of each letter in a given string in the provided font without changing the state of the page. 
            </summary>
            <param name="text">The text to measure each letter of.</param>
            <param name="fontSize">The size of the font in user space units.</param>
            <param name="position">The position of the baseline (lower-left corner) to start drawing the text from.</param>
            <param name="font">
            A font added to the document using <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte})"/>
            or <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddStandard14Font(UglyToad.PdfPig.Fonts.Standard14Fonts.Standard14Font)"/> methods.
            </param> 
            <returns>The letters from the input text with their corresponding size and position.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddText(System.String,System.Decimal,UglyToad.PdfPig.Core.PdfPoint,UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddedFont)">
            <summary>
            Draws the text in the provided font at the specified position and returns the letters which will be drawn. 
            </summary>
            <param name="text">The text to draw to the page.</param>
            <param name="fontSize">The size of the font in user space units.</param>
            <param name="position">The position of the baseline (lower-left corner) to start drawing the text from.</param>
            <param name="font">
            A font added to the document using <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddTrueTypeFont(System.Collections.Generic.IReadOnlyList{System.Byte})"/>
            or <see cref="M:UglyToad.PdfPig.Writer.PdfDocumentBuilder.AddStandard14Font(UglyToad.PdfPig.Fonts.Standard14Fonts.Standard14Font)"/> methods.
            </param> 
            <returns>The letters from the input text with their corresponding size and position.</returns>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.SetTextRenderingMode(UglyToad.PdfPig.Core.TextRenderingMode)">
             <summary>
             Set the text rendering mode. This will apply to all future calls to AddText until called again.
            
             To insert invisible text, for example output of OCR, use <c>TextRenderingMode.Neither</c>.
             </summary>
             <param name="mode">Text rendering mode to set.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the JPEG image represented by the input bytes at the specified location.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(System.IO.Stream,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the JPEG image represented by the input stream at the specified location.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the JPEG image previously added using <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)"/>,
            this will share the same image data to prevent duplication.
            </summary>
            <param name="image">An image previously added to this page or another page.</param>
            <param name="placementRectangle">The size and location to draw the image on this page.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddImage(UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the image previously added using <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)"/>
            or <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddPng(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)"/> sharing the same image to prevent duplication.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddPng(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the PNG image represented by the input bytes at the specified location.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddPng(System.IO.Stream,UglyToad.PdfPig.Core.PdfRectangle)">
            <summary>
            Adds the PNG image represented by the input stream at the specified location.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.CopyFrom(UglyToad.PdfPig.Content.Page)">
            <summary>
            Copy a page from unknown source to this page
            </summary>
            <param name="srcPage">Page to be copied</param>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfPageBuilder.IContentStream">
            <summary>
            Provides access to the raw page data structures for advanced editing use cases.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.IContentStream.Operations">
            <summary>
            The operations making up the page content stream.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage">
            <summary>
            A key representing an image available to use for the current document builder.
            Create it by adding an image to a page using <see cref="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddJpeg(System.Byte[],UglyToad.PdfPig.Core.PdfRectangle)"/>.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage.Id">
            <summary>
            The Id uniquely identifying this image on the builder.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage.Reference">
            <summary>
            The reference to the stored image XObject.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage.Width">
            <summary>
            The width of the raw image in pixels.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage.Height">
            <summary>
            The height of the raw image in pixels.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage.#ctor(UglyToad.PdfPig.Core.IndirectReference,System.Int32,System.Int32)">
            <summary>
            Create a new <see cref="T:UglyToad.PdfPig.Writer.PdfPageBuilder.AddedImage"/>.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfStreamWriter">
            <summary>
            This class would lazily flush all token. Allowing us to make changes to references without need to rewrite the whole stream
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfTextRemover">
            <summary>
            Class to remove text from PDFs, useful as a preprocessing step for Optical Character Recognition (OCR).
            Note that this should not be used to redact content from PDFs, this is not a secure or reliable way to redact text.
            </summary>
            <remarks>
            This is being made internal for release of the next major version subject to some refinements.
            It can be re-enabled for nightly versions of 0.1.9.
            </remarks>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfTextRemover.RemoveText(System.String,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Return PDF without text as bytes
            <param name="filePath">Path to PDF</param>
            <param name="pagesBundle">List of pages to emit; if null all pages are emitted</param>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfTextRemover.RemoveText(System.IO.Stream,System.String,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Write PDF without text to the output stream. The caller must manage disposing the output stream.
            <param name="output">Must be writable</param>
            <param name="filePath">Path to PDF</param>
            <param name="pagesBundle">List of pages to emit; if null all pages are emitted</param>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfTextRemover.RemoveText(System.Byte[],System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Remove text from the PDF (passed in as a byte array) and return it as a new byte array
            <param name="file">PDF document (as byte array)</param>
            <param name="pagesBundle">List of pages to emit; if null all pages are emitted</param>
            <returns>PDF without text (as a byte array)</returns>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfTextRemover.RemoveText(System.IO.Stream,System.IO.Stream,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Remove text from the PDF in the input stream and write it to the output stream.
            The caller must manage disposing the stream. The created PdfDocument will not dispose the stream.
            <param name="stream">Streams for the file contents, this must support reading and seeking.</param>
            <param name="output">Must be writable</param>
            <param name="pagesBundle">List of pages to emit; if null all pages are emitted</param>
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.PdfTextRemover.RemoveText(UglyToad.PdfPig.PdfDocument,System.IO.Stream,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Remove text from the PDF and write it to the output stream.
            The caller must manage disposing the stream. The created PdfDocument will not dispose the stream.
            <param name="file">PDF document</param>
            <param name="output">Must be writable</param>
            <param name="pagesBundle">List of pages to emit; if null all pages are emitted</param>
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.PdfWriterType">
            <summary>
            Type of pdf writer to use.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfWriterType.Default">
            <summary>
            Default output writer
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.PdfWriterType.ObjectInMemoryDedup">
            <summary>
            De-duplicates objects while writing but requires keeping in memory reference.
            </summary>
        </member>
        <member name="T:UglyToad.PdfPig.Writer.TokenWriter">
            <summary>
            Writes any type of <see cref="T:UglyToad.PdfPig.Tokens.IToken"/> to the corresponding PDF document format output.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.TokenWriter.StreamStart">
            <summary>
            Bytes that indicate start of stream
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.Writer.TokenWriter.StreamEnd">
            <summary>
            Bytes that indicate end start of stream
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.Writer.TokenWriter.Instance">
            <summary>
            Single global instance
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteToken(UglyToad.PdfPig.Tokens.IToken,System.IO.Stream)">
            <summary>
            Writes the given input token to the output stream with the correct PDF format and encoding including whitespace and line breaks as applicable.
            </summary>
            <param name="token">The token to write to the stream.</param>
            <param name="outputStream">The stream to write the token to.</param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteCrossReferenceTable(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Core.IndirectReference,System.Int64},UglyToad.PdfPig.Core.IndirectReference,System.IO.Stream,System.Nullable{UglyToad.PdfPig.Core.IndirectReference})">
            <inheritdoc cref="M:UglyToad.PdfPig.Writer.ITokenWriter.WriteCrossReferenceTable(System.Collections.Generic.IReadOnlyDictionary{UglyToad.PdfPig.Core.IndirectReference,System.Int64},UglyToad.PdfPig.Core.IndirectReference,System.IO.Stream,System.Nullable{UglyToad.PdfPig.Core.IndirectReference})" />
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteObject(System.Int64,System.Int32,System.Byte[],System.IO.Stream)">
            <inheritdoc cref="M:UglyToad.PdfPig.Writer.ITokenWriter.WriteObject(System.Int64,System.Int32,System.Byte[],System.IO.Stream)" />
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteHex(UglyToad.PdfPig.Tokens.HexToken,System.IO.Stream)">
            <summary>
            Write a hex value to the output stream
            </summary>
            <param name="hex"></param>
            <param name="stream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteArray(UglyToad.PdfPig.Tokens.ArrayToken,System.IO.Stream)">
            <summary>
            Write an array to the output stream, with whitespace at the end.
            </summary>
            <param name="array"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteBoolean(UglyToad.PdfPig.Tokens.BooleanToken,System.IO.Stream)">
            <summary>
            Write a boolean "true" or "false" to the output stream, with whitespace at the end.
            </summary>
            <param name="boolean"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteComment(UglyToad.PdfPig.Tokens.CommentToken,System.IO.Stream)">
            <summary>
            Write a "%comment" in the output stream, with a line break at the end.
            </summary>
            <param name="comment"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteDictionary(UglyToad.PdfPig.Tokens.DictionaryToken,System.IO.Stream)">
            <summary>
            Writes dictionary key/value pairs to output stream as Name/Token pairs.
            </summary>
            <param name="dictionary"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteIndirectReference(UglyToad.PdfPig.Tokens.IndirectReferenceToken,System.IO.Stream)">
            <summary>
            Write an indirect reference to the stream, with whitespace at the end. 
            </summary>
            <param name="reference"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteName(UglyToad.PdfPig.Tokens.NameToken,System.IO.Stream)">
            <summary>
            Write a name to the stream, with whitespace at the end.
            </summary>
            <param name="name"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteNumber(UglyToad.PdfPig.Tokens.NumericToken,System.IO.Stream)">
            <summary>
            Write a number to the stream, with whitespace at the end. 
            </summary>
            <param name="number"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteObject(UglyToad.PdfPig.Tokens.ObjectToken,System.IO.Stream)">
            <summary>
            Write an object to the stream, with a line break at the end. It writes the following contents:
            - "[ObjectNumber] [Generation] obj"
            - Object data
            - "endobj"
            </summary>
            <param name="objectToken"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteStream(UglyToad.PdfPig.Tokens.StreamToken,System.IO.Stream)">
            <summary>
            Write a stream token to the output stream, with the following contents:
            - Dictionary specifying the length of the stream, any applied compression filters and additional information.
            - Stream start indicator
            - Bytes in the StreamToken data
            - Stream end indicator
            </summary>
            <param name="streamToken"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteString(UglyToad.PdfPig.Tokens.StringToken,System.IO.Stream)">
            <summary>
            Write string to the stream, with whitespace at the end
            </summary>
            <param name="stringToken"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteInt(System.Int32,System.IO.Stream)">
            <summary>
            Write an integer to the stream
            </summary>
            <param name="value"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteLineBreak(System.IO.Stream)">
            <summary>
            Write a line break to the output stream
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteLong(System.Int64,System.IO.Stream)">
            <summary>
            Write a long to the stream
            </summary>
            <param name="value"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.TokenWriter.WriteWhitespace(System.IO.Stream)">
            <summary>
            Write a space to the output stream
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:UglyToad.PdfPig.Writer.WriterUtil.CopyToken(UglyToad.PdfPig.Writer.IPdfStreamWriter,UglyToad.PdfPig.Tokens.IToken,UglyToad.PdfPig.Tokenization.Scanner.IPdfTokenScanner,System.Collections.Generic.IDictionary{UglyToad.PdfPig.Core.IndirectReference,UglyToad.PdfPig.Tokens.IndirectReferenceToken},System.Collections.Generic.Dictionary{UglyToad.PdfPig.Core.IndirectReference,UglyToad.PdfPig.Tokens.IndirectReferenceToken})">
            <summary>
            The purpose of this method is to resolve indirect reference. That mean copy the reference's content to the new document's stream
            and replace the indirect reference with the correct/new one
            </summary>
            <param name="writer">PDF stream writer</param>
            <param name="tokenToCopy">Token to inspect for reference</param>
            <param name="tokenScanner">scanner get the content from the original document</param>
            <param name="referencesFromDocument">Map of previously copied tokens for original document.</param>
            <param name="callstack">Call stack of indirect references</param>
            <returns>A reference of the token that was copied. With all the reference updated</returns>
        </member>
        <member name="T:UglyToad.PdfPig.XObjects.XObjectImage">
            <inheritdoc />
            <summary>
            A PostScript image XObject.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.Bounds">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.WidthInSamples">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.HeightInSamples">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.BitsPerComponent">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.IsJpxEncoded">
            <summary>
            The JPX filter encodes data using the JPEG2000 compression method.
            A JPEG2000 data stream allows different versions of the image to be decoded
            allowing for thumbnails to be extracted.
            </summary>
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.RenderingIntent">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.IsImageMask">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.Decode">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.Interpolate">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.IsInlineImage">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.ImageDictionary">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.RawBytes">
            <inheritdoc />
        </member>
        <member name="P:UglyToad.PdfPig.XObjects.XObjectImage.ColorSpaceDetails">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.XObjects.XObjectImage.#ctor(UglyToad.PdfPig.Core.PdfRectangle,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,UglyToad.PdfPig.Graphics.Core.RenderingIntent,System.Boolean,System.Collections.Generic.IReadOnlyList{System.Decimal},UglyToad.PdfPig.Tokens.DictionaryToken,System.Collections.Generic.IReadOnlyList{System.Byte},System.Lazy{System.Collections.Generic.IReadOnlyList{System.Byte}},UglyToad.PdfPig.Graphics.Colors.ColorSpaceDetails)">
            <summary>
            Creates a new <see cref="T:UglyToad.PdfPig.XObjects.XObjectImage"/>.
            </summary>
        </member>
        <member name="M:UglyToad.PdfPig.XObjects.XObjectImage.TryGetBytes(System.Collections.Generic.IReadOnlyList{System.Byte}@)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.XObjects.XObjectImage.TryGetPng(System.Byte[]@)">
            <inheritdoc />
        </member>
        <member name="M:UglyToad.PdfPig.XObjects.XObjectImage.ToString">
            <inheritdoc />
        </member>
        <member name="T:UglyToad.PdfPig.XObjects.XObjectType">
            <summary>
            XObject type.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.XObjects.XObjectType.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.XObjects.XObjectType.Form">
            <summary>
            Form.
            </summary>
        </member>
        <member name="F:UglyToad.PdfPig.XObjects.XObjectType.PostScript">
            <summary>
            PostScript.
            </summary>
        </member>
    </members>
</doc>
