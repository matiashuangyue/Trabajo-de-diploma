<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Adobe.DocumentServices.PDFTools</name>
    </assembly>
    <members>
        <member name="T:Adobe.DocumentServices.PDFTools.auth.Credentials">
            <summary>
            Marker base class for different types of credentials. Currently it supports only <see cref="T:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials"/>.
            The factory methods within this class can be used to create instances of credentials classes.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.Credentials.ServiceAccountCredentialsBuilder">
            <summary>
            Creates a new <c>ServiceAccountCredentials</c> builder.
            </summary>
            <returns>a <c>ServiceAccountCredentials</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials">
            <summary>
            Service Account credentials allow your application to call PDF Tools API on behalf of the application itself, or on behalf of an enterprise organization.
            For getting the credentials, <a href = "https://www.adobe.com/go/dcsdks_credentials?ref=getStartedWithServicesSdk" > Click Here</a>
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.ClientId">
            <value>
            Client Id (API Key)
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.ClientSecret">
            <value>
            Client Secret
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.PrivateKey">
            <value>
            Content of the Private Key (PEM format)
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.AccountId">
            <value>
            Account ID(format: id@techacct.adobe.com)
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.OrganizationId">
            <value>
            Identifies the organization(format: org_ident@AdobeOrg) that has been configured for access to PDF Tools API.
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials"/> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.WithClientId(System.String)">
            <summary>
            Set Client ID (API Key)
            </summary>
            <param name="clientId">Client Id</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.WithClientSecret(System.String)">
            <summary>
            Set Client Secret
            </summary>
            <param name="clientSecret">Client Secret</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.WithPrivateKey(System.String)">
            <summary>
            Set private key
            </summary>
            <param name="privateKey">content of the private key file in PEM format</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.WithOrganizationId(System.String)">
            <summary>
            Set Organization Id (format: org_ident@AdobeOrg) that has been configured for access to PDF Tools API
            </summary>
            <param name="organizationId">Organization Id</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.WithAccountId(System.String)">
            <summary>
            Set Account Id (format: id@techacct.adobe.com)
            </summary>
            <param name="accountId">Account ID</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.FromFile(System.String)">
            <summary>
            Sets Service Account Credentials using the JSON credentials file path.
            All the keys in the JSON structure are optional.
            <p>
            JSON structure:
            <pre>{
                "client_credentials": {
                    "client_id": "CLIENT_ID",
                    "client_secret": "CLIENT_SECRET"
                },
                "service_account_credentials": {
                    "organization_id": "org_ident@AdobeOrg",
                    "account_id": "id@techacct.adobe.com",
                    "private_key_file": "private.key"
                }
            }</pre></p>
            </summary>
            private_key_file is the path of private key file.It will be looked up in the classpath and the directory of JSON credentials file.            /// <param name="credentialsFilePath">JSON credentials config file path</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.auth.ServiceAccountCredentials"/> instance built from the current state of this builder.
            </summary>
            <exception cref="T:System.ArgumentException">if any of clientId, clientSecret, privateKey, accountId and organizationId are not provided.</exception>
            <returns>a new <c>ServiceAccountCredentials</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.ClientConfig">
            <summary>
            Encapsulates the API request configurations
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.ConfigBuilder">
            <summary>
            Creates a new <c>ClientConfig</c> builder.
            </summary>
            <returns><c>ClientConfig.Builder</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.ClientConfig.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.ClientConfig"/> instance
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.Builder.WithTimeout(System.Int32)">
            <summary>
            Sets the timeout. It should be greater than zero.
            </summary>
            <param name="timeout">determines the timeout in milliseconds for establishing a connection, sending a request, and getting a response. Default value is 400000 milliseconds</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.Builder.WithReadWriteTimeout(System.Int32)">
            <summary>
            Sets the read write timeout. It should be greater than zero.
            </summary>
            <param name="readWriteTimeout">determines the read write in milliseconds to read or write data after connection is established.. Default value is 10000 milliseconds</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.Builder.FromFile(System.String)">
            <summary>
            Sets the timeout and read write timeout using the JSON client config file path.
            All the keys in the JSON structure are optional.
            <p>
            JSON structure:
            <pre>{
                "timeout": "400000",
                "readWriteTimeout": "10000"
            }
            </pre></p>
            </summary>
            <param name="clientConfigFilePath">JSON client config file path</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ClientConfig.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.ClientConfig"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>ClientConfig</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.core.auth.JwtAuthenticator">
            <summary>
            An authenticator implementation which deals with service account authentication through JWT
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.core.auth.JwtAuthenticator.RefreshSessionToken">
            <summary>
            Fetches a new Session Token from IMS
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.core.http.HttpBaseRequest.Copy">
            <summary>
            Creates a deep copy of the HttpBaseRequest(all the parameters which is initialized during discovery caching)
            </summary>
            <returns>a new <c>HttpBaseRequest instance</c>></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.core.IMediaType.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.exception.SDKException">
            <summary>
            SdkException is typically thrown for client-side or network errors.
            </summary>
            <seealso cref = "T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException"/>
            <seealso cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException"/>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.SDKException.#ctor">
            <summary>
            Constructs an SDKException
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.SDKException.#ctor(System.String)">
            <summary>
            Constructs an SDKException with the specified detail message.
            </summary>
            <param name="message">the detail message</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.SDKException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an SDKException with the specified detail message and a reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">the detail message</param>
            <param name="inner">the inner exception</param>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">
            <summary>
            ServiceApiException is thrown when an underlying service API call results in an error.
            </summary>
            <seealso cref = "T:Adobe.DocumentServices.PDFTools.exception.SDKException"/>
            <seealso cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException"/>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.DEFAULT_ERROR_CODE">
            <value>
            The default value of error code if there is no error code for this service failure.
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.requestId">
            <summary>
            Tracking id for the failed http request
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.statusCode">
            <summary>
            The http status code of the response
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.errorCode">
            <summary>
            Tracking id for the failed http request
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.StatusCode">
            <value>
            The http status code of the response
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.RequestId">
            <value>
            Tracking id for the failed http request
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.ErrorCode">
            <value>
            The error code of the response
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor">
            <summary>
            Constructs a <c>ServiceApiException</c>.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor(System.String)">
            <summary>
            Constructs a <c>ServiceApiException</c> with the specified detail message.
            </summary>
            <param name="message">the detail message</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a <c>ServiceApiException</c> with the specified detail message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">the detail message</param>
            <param name="inner">a reference to the inner exception</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructs a <c>ServiceApiException</c> with the specified detail message, requestId and returned HTTP status code.
            </summary>
            <param name="message">the detail message</param>
            <param name="requestId">X-Request-Id header value to track the request</param>
            <param name="statusCode">HTTP Status code returned in API response</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Constructs a <c>ServiceApiException</c> with the specified detail message, requestId, returned HTTP status code and error code.
            </summary>
            <param name="message">the detail message</param>
            <param name="requestId">X-Request-Id header value to track the request</param>
            <param name="statusCode">HTTP Status code returned in API response</param>
            <param name="errorCode">Error code returned in API response</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.#ctor(System.String,System.String,System.Int32,System.Exception)">
            <summary>
            Constructs a <c>ServiceApiException</c> with the specified detail message, requestId, returned HTTP status code and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">the detail message</param>
            <param name="requestId">X-Request-Id header value to track the request</param>
            <param name="statusCode">HTTP Status code returned in API response</param>
            <param name="inner">a reference to the inner exception</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceApiException.ToString">
            <summary>
            Returns the string reprensentation of ServiceApiException
            </summary>
            <returns>the string reprensentation of ServiceApiException</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">
            <summary>
            ServiceUsageException is thrown when either Service usage limit has been reached or credentials quota has been exhausted.
            </summary>
            <seealso cref = "T:Adobe.DocumentServices.PDFTools.exception.SDKException"/>
            <seealso cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException"/>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.DEFAULT_STATUS_CODE">
            <value>
            The default value of status code if there is no status code for this service failure.
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.DEFAULT_ERROR_CODE">
            <value>
            The default value of error code if there is no error code for this service failure.
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.requestTrackingId">
            <summary>
            Tracking id for the failed http request
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.statusCode">
            <summary>
            The http status code of the response
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.errorCode">
            <summary>
            The error code of the response
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.StatusCode">
            <value>
            The http status code of the response
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.ErrorCode">
            <value>
            The error code of the response
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.RequestTrackingId">
            <value>
            Tracking id for the failed http request
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.#ctor(System.String)">
            <summary>
            Constructs a <c>ServiceUsageException</c> with the specified detail message.
            </summary>
            <param name="message">the detail message</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructs a <c>ServiceUsageException</c> with the specified detail message, requestTrackingId and returned HTTP status code.
            </summary>
            <param name="message">the detail message</param>
            <param name="requestTrackingId">X-Request-Id header value to track the request</param>
            <param name="statusCode">HTTP Status code returned in API response</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Constructs a <c>ServiceUsageException</c> with the specified detail message, requestTrackingId, returned HTTP status code and error code.
            </summary>
            <param name="message">the detail message</param>
            <param name="requestTrackingId">X-Request-Id header value to track the request</param>
            <param name="statusCode">HTTP Status code returned in API response</param>
            <param name="errorCode">Error code returned in API response</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException.ToString">
            <summary>
            Returns the string reprensentation of ServiceUsageException
            </summary>
            <returns>the string reprensentation of ServiceUsageException</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.ExecutionContext">
            <summary>
            Represents the execution context of an <see cref="T:Adobe.DocumentServices.PDFTools.IOperation`1"/>. An execution context typically consists of the desired
            authentication credentials and client configurations such as timeouts.
            <para>
            For each set of authentication credentials, a <c>ExecutionContext</c> instance can be reused across operations.
            </para>
            <Example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory() + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder().FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            CreatePDFOperation cpdfOperation = CreatePDFOperation.CreateNew();
            cpdfOperation.setInput(FileRef.CreateFromLocalFile("createPdfInput.docx"));
            cpdfOperation.Execute(context);
            </code>
            </Example>
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ExecutionContext.Create(Adobe.DocumentServices.PDFTools.auth.Credentials)">
            <summary>
            Creates a context instance using the provided <see cref="T:Adobe.DocumentServices.PDFTools.auth.Credentials"/>.
            </summary>
            <param name="credentials">a <see cref="T:Adobe.DocumentServices.PDFTools.auth.Credentials"/> instance</param>
            <returns>a new <c>ExecutionContext</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.ExecutionContext.Create(Adobe.DocumentServices.PDFTools.auth.Credentials,Adobe.DocumentServices.PDFTools.ClientConfig)">
            <summary>
            Creates a context instance using the provided <see cref="T:Adobe.DocumentServices.PDFTools.auth.Credentials"/> and <see cref="T:Adobe.DocumentServices.PDFTools.ClientConfig"/>
            </summary>
            <param name="credentials">a <see cref="T:Adobe.DocumentServices.PDFTools.auth.Credentials"/> instance</param>
            <param name="clientConfig">a <see cref="T:Adobe.DocumentServices.PDFTools.ClientConfig"/> instance for providing custom http timeouts</param>
            <returns>a new <c>ExecutionContext</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.io.FileRef">
            <summary>
            This class represents either a local file or a URL-based web page. It is typically used by <see cref="T:Adobe.DocumentServices.PDFTools.IOperation`1"/>
            implementations which accept or return files.
            <para>
            If a FileRef instance is created by this SDK and it refers to a temporary file location, calling any of the overloaded
            <c>saveAs</c> methods will delete the temporary file.
            </para>
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.io.FileRef.CreateFromLocalFile(System.String)">
            <summary>
            Creates a FileRef instance from a local file path where the media type can be inferred from the file extension.
            <para>
            To specify the media type explicitly, use <see cref="M:Adobe.DocumentServices.PDFTools.io.FileRef.CreateFromLocalFile(System.String,System.String)"/>.
            </para>
            </summary>
            <param name="localSource">Local file path</param>
            <returns>a FileRef instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.io.FileRef.CreateFromLocalFile(System.String,System.String)">
            <summary>
            Creates a FileRef instance from a local file path with an explicitly specified media type.
            <para>
            If the media type can be inferred from the file extension, consider <see cref="M:Adobe.DocumentServices.PDFTools.io.FileRef.CreateFromLocalFile(System.String)"/>.
            </para>
            </summary>
            <param name="localSource">Local file path</param>
            <param name="mediaType">Media type to identify the local file format</param>
            <returns>a FileRef instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.io.FileRef.CreateFromStream(System.IO.Stream,System.String)">
            <summary>
            Creates a FileRef instance from an input stream using the specified media type.
            <para>
            The <c>Stream</c> is not read by this method but by consumers of file content such as
            <see cref="M:Adobe.DocumentServices.PDFTools.IOperation`1.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)"/>
            </para>
            </summary>
            <param name="inputStream">Stream representing the file</param>
            <param name="mediaType">Media type, to identify the file format</param>
            <returns>a FileRef instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.io.FileRef.SaveAs(System.String)">
            <summary>
            Saves this file to the location specified by <c>targetLocation</c>.
            If this FileRef instance refers to a temporary local file created by the SDK, that temporary file is deleted.
            <para>
            The directory mentioned in <c>targetLocation</c> is created if it does not exist.
            </para>
            </summary>
            <param name="targetLocation">Local file path</param>
            <exception cref="T:System.IO.IOException">File already exists in the target location</exception>
            <exception cref="T:System.ArgumentException">Invalid sourceFile or destination file name</exception>
            <exception cref="T:System.UnauthorizedAccessException">Does not have the required permission to move the file to a specified location</exception>
            <exception cref="T:System.InvalidOperationException">thrown when method SaveAs called on non operation results</exception>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.io.FileRef.SaveAs(System.IO.Stream)">
            <summary>
            Writes the contents of this file to <c>outputStream</c>.
            If this FileRef instance refers to a temporary local file created by the SDK, that temporary file is deleted.
            <para>
            Note: This method does not close <c>outputStream</c>.
            </para>
            </summary>
            <param name="outputStream">the destination output stream</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentException">Invalid sourceFile name</exception>
            <exception cref="T:System.UnauthorizedAccessException">Does not have the required permission to delete the source file</exception>
            <exception cref="T:System.InvalidOperationException">thrown when method SaveAs called on non operation results</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.IOperation`1">
            <summary>
            This interface represents the basic contract for all the Operations.
            It imposes no restrictions or particular details on the operation execution process and leaves the
            specifics of setting up the operations to their individual implementations.
            <para>
            A successfully executed <c>Operation</c> instance should not be reused.
            </para>
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.IOperation`1.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the provided context instance.
            </summary>
            <param name="context">an ExecutionContext instance</param>
            <returns>an Operation-specific result</returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception><exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client conifg file or the input source does not exist in a specified path</exception>	
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>	
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>	
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel">
            <summary>
             Supported compression levels for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.HIGH">
            <summary>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 100 dpi to 72 dpi (dots per inch).
            This option uses JPEG medium quality compression.
            Output pdf will not contain hidden layers, document structure, metadata, javascript, user properties and print settings.
            </summary>
            <value>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 100 dpi to 72 dpi.
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.MEDIUM">
            <summary>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 200 dpi to 144 dpi (dots per inch).
            This option uses JP2K medium quality compression.
            </summary>
            <value>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 200 dpi to 144 dpi.
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.LOW">
            <summary>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 250 dpi to 200 dpi (dots per inch).
            This option uses JP2K high quality compression.
            </summary>
            <value>
            Reduces the file size of pdf by reducing resolution of the coloured and grayscale images above 250 dpi to 200 dpi.
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.#ctor(System.String)">
            <summary>
            Constructs Compression Level from its string representation
            </summary>
            <param name="compressionLevel">string representation</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.From(System.String)">
            <summary>
            Return an CompressionLevel instance
            </summary>
            <param name="compressionLevel">string representation of Compression Level whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.Values">
            <summary>
            Return all the possible values of this CompressionLevel
            </summary>
            <value>
            Values of CompressionLevel
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel.Value">
            <value>
            Returns the string representation of this CompressionLevel
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions">
            <summary>
            Parameters for reducing file size of a pdf using <see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions"/>.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.CompressPDFOptionsBuilder">
            <summary>
            Creates a new <c>CompressPDFOptions</c> builder.
            </summary>
            <returns>a <c>CompressPDFOptions.Builder</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions"/> instance. 
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.CompressionLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.WithCompressionLevel(Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel)">
            <summary>
            Sets compression level to be used for Compress PDF, specified by <see cref="P:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.CompressionLevel"/>
            </summary>
            <param name="compressionLevel"><see cref="P:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.CompressionLevel"/>. /></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>CompressPDFOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions">
            <summary>
            Parameters for converting HTML to PDF using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.DEFAULT_IS_PRINT_HEADER_FOOTER">
            <summary>
            Default values for options
            </summary>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions"/> instance. 
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.IncludesHeaderFooter">
            <summary>
            Returns includesHeaderFooter option parameter
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.PageLayout">
            <summary>
            Returns pageLayout option parameter
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.DataToMerge">
            <summary>
            Returns dataToMerge option parameter
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.IncludeHeaderFooter(System.Boolean)">
            <summary>
            Sets the includeHeaderFooter parameter. If true, default header and footer will be included in resulting PDF.
            The default header consists of the date and the document.title.
            The default footer consists of the file name and page number.
            
            </summary>
            <param name="includeHeaderFooter">true if default header and footer should be included in the resulting PDF. Default value is <c>true</c></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.WithPageLayout(Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout)">
            <summary>
            Sets the pageLayout parameter.
            </summary>
            <param name="pageLayout">intended page layout of the resulting PDF file</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.WithDataToMerge(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Sets the data to be used by the javascript in the source html file to manipulate the HTML DOM before it gets converted to PDF.
            This mechanism is intended to be used to supply data that might otherwise be retrieved using ajax requests.
            <p>
            To make use of this mechanism, the source html file must include a script element such as:
            <code>
            &lt;script src="./json.js" type="text/javascript"&gt;&lt;/script&gt;
            </code>
            where json.js refers to the JSON data </p>
            <p>And also Requires javascript in the source html file to make use of this JSON data to manipulate the HTML DOM.</p>
            </summary>
            <param name="dataToMerge">the <see cref="T:Newtonsoft.Json.Linq.JObject"/> object</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFFromHTMLOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>CreatePDFFromHTMLOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions">
            <summary>
            Marker base class for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/> options.
            The factory methods within this class can be used to create instances of options classes corresponding to the source
            media type.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions.HtmlOptionsBuilder">
            <summary>
            Creates a new <c>CreatePDFFromHtmlOptions</c> builder.
            </summary>
            <returns>a <c>CreatePDFFromHtmlOptions.Builder</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions.WordOptionsBuilder">
            <summary>
            Creates a new <c>CreatePDFFromWordOptions</c> builder.
            </summary>
            <returns>a <c>CreatePDFFromWordOptions.Builder</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions.ExcelOptionsBuilder">
            <summary>
            Creates a new <c>CreatePDFFromExcelOptions</c> builder.
            </summary>
            <returns>a <c>CreatePDFFromExcelOptions.Builder</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions.PPTOptionsBuilder">
            <summary>
            Creates a new <c>CreatePDFFromPPTOptions</c> builder.
            </summary>
            <returns>a <c>CreatePDFFromPPTOptions.Builder</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions">
            <summary>
            Parameters for converting Excel to PDF using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions.Builder.DocumentLanguage">
            <summary>
            Returns documentLanguage option parameter
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions.Builder.WithDocumentLanguage(Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage)">
            <summary>
            Sets office preferred editing language to be used for conversion, specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage"/>.
            </summary>
            <param name="documentLanguage"><see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage"/>. Default value is <see cref="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.EN_US"/></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.CreatePDFFromExcelOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>CreatePDFFromExcelOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage">
            <summary>
             Supported locales for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.DA_DK">
            <value>
             Represents <c>Danish (Denmark)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.LT_LT">
            <value>
              Represents <c>Lithuanian (Lithuania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.SL_SI">
            <value>
              Represents <c>Slovenian (Slovenia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.EL_GR">
            <value>
              Represents <c>Greek (Greece)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.RU_RU">
            <value>
              Represents <c>Russian (Russia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.EN_US">
            <value>
              Represents <c>English (United States)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.ZH_HK">
            <value>
              Represents <c>Chinese (Hong Kong)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.HU_HU">
            <value>
              Represents <c>Hungarian (Hungary)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.ET_EE">
            <value>
              Represents <c>Estonian (Estonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.PT_BR">
            <value>
              Represents <c>Portuguese (Brazil)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.UK_UA">
            <value>
              Represents <c>Ukrainian (Ukraine)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.NB_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.PL_PL">
            <value>
              Represents <c>Polish (Poland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.LV_LV">
            <value>
              Represents <c>Latvian (Latvia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.FI_FI">
            <value>
              Represents <c>Finnish (Finland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.JA_JP">
            <value>
              Represents <c>Japanese (Japan)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.ES_ES">
            <value>
              Represents <c>Spanish (Spain)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.BG_BG">
            <value>
              Represents <c>Bulgarian (Bulgaria)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.EN_GB">
            <value>
              Represents <c>English (United Kingdom)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.CS_CZ">
            <value>
              Represents <c>Czech (Czech Republic)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.MT_MT">
            <value>
              Represents <c>Maltese (Malta)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.DE_DE">
            <value>
              Represents <c>German (Germany)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.HR_HR">
            <value>
              Represents <c>Croatian (Croatia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.SK_SK">
            <value>
              Represents <c>Slovak (Slovakia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.SR_SR">
            <value>
              Represents <c>Serbian (Serbia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.CA_CA">
            <value>
              Represents <c>Catalan (Canada)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.MK_MK">
            <value>
              Represents <c>Macedonian (Macedonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.KO_KR">
            <value>
              Represents <c>Korean (Korea)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.DE_CH">
            <value>
              Represents <c>German (Switzerland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.NL_NL">
            <value>
              Represents <c>Dutch (Netherlands)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.ZH_CN">
            <value>
              Represents <c>Chinese (China)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.SV_SE">
            <value>
              Represents <c>Swedish (Sweden)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.IT_IT">
            <value>
              Represents <c>Italian (Italy)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.NO_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.TR_TR">
            <value>
              Represents <c>Turkish (Turkey)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.FR_FR">
            <value>
              Represents <c>French (France)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.RO_RO">
            <value>
              Represents <c>Romanian (Romania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.IW_IL">
            <value>
              Represents <c>Hebrew (Israel)</c> locale
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.#ctor(System.String)">
            <summary>
            Construct a locale from a language code
            </summary>
            <param name="documentLanguage">language code</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.From(System.String)">
            <summary>
            Return an SupportedDocumentLanguage instance
            </summary>
            <param name="documentLanguage">language code whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.Values">
            <summary>
            Return all the possible values of this SupportedDocumentLanguage
            </summary>
            <value>
            Values of SupportedDocumentLanguage
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.excel.SupportedDocumentLanguage.DocumentLanguage">
            <value>
            Returns the language code of this SupportedDocumentLanguage
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout">
            <summary>
            Class for specifying the layout of a page.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.DEFAULT_PAGE_WIDTH">
            <summary>
            Default value of the page width (in inches)
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.DEFAULT_PAGE_HEIGHT">
            <summary>
            Default value of the page height (in inches)
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.pageHeight">
            <summary>
            Height of the page, in inches
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.pageWidth">
            <summary>
            Width of the page, in inches
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.#ctor">
            <summary>
            Constructor to initialize a default page layout. The default layout sets
            the height as 11 inches, width as 8 inches.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.PageHeight">
            <summary>
            Get height of the page, in inches
            </summary>
            <value>
            Height of the page, in inches
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.PageWidth">
            <summary>
            Get width of the page, in inches
            </summary>
            <value>
            Width of the page, in inches
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.PageLayout.SetPageSize(System.Double,System.Double)">
            <summary>
            Sets a custom page size.
            </summary>
            <param name="pageWidth">width of the page in inches</param>
            <param name="pageHeight">height of the page in inches</param>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions">
            <summary>
            Parameters for converting PPT to PDF using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions.Builder.DocumentLanguage">
            <summary>
            Returns documentLanguage option parameter
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions.Builder.WithDocumentLanguage(Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage)">
            <summary>
            Sets office preferred editing language to be used for conversion, specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage"/>.
            </summary>
            <param name="documentLanguage"><see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage"/>. Default value is <see cref="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.EN_US"/></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.CreatePDFFromPPTOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>CreatePDFFromPPTOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage">
            <summary>
             Supported locales for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.DA_DK">
            <value>
             Represents <c>Danish (Denmark)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.LT_LT">
            <value>
              Represents <c>Lithuanian (Lithuania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.SL_SI">
            <value>
              Represents <c>Slovenian (Slovenia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.EL_GR">
            <value>
              Represents <c>Greek (Greece)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.RU_RU">
            <value>
              Represents <c>Russian (Russia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.EN_US">
            <value>
              Represents <c>English (United States)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.ZH_HK">
            <value>
              Represents <c>Chinese (Hong Kong)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.HU_HU">
            <value>
              Represents <c>Hungarian (Hungary)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.ET_EE">
            <value>
              Represents <c>Estonian (Estonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.PT_BR">
            <value>
              Represents <c>Portuguese (Brazil)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.UK_UA">
            <value>
              Represents <c>Ukrainian (Ukraine)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.NB_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.PL_PL">
            <value>
              Represents <c>Polish (Poland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.LV_LV">
            <value>
              Represents <c>Latvian (Latvia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.FI_FI">
            <value>
              Represents <c>Finnish (Finland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.JA_JP">
            <value>
              Represents <c>Japanese (Japan)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.ES_ES">
            <value>
              Represents <c>Spanish (Spain)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.BG_BG">
            <value>
              Represents <c>Bulgarian (Bulgaria)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.EN_GB">
            <value>
              Represents <c>English (United Kingdom)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.CS_CZ">
            <value>
              Represents <c>Czech (Czech Republic)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.MT_MT">
            <value>
              Represents <c>Maltese (Malta)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.DE_DE">
            <value>
              Represents <c>German (Germany)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.HR_HR">
            <value>
              Represents <c>Croatian (Croatia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.SK_SK">
            <value>
              Represents <c>Slovak (Slovakia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.SR_SR">
            <value>
              Represents <c>Serbian (Serbia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.CA_CA">
            <value>
              Represents <c>Catalan (Canada)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.MK_MK">
            <value>
              Represents <c>Macedonian (Macedonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.KO_KR">
            <value>
              Represents <c>Korean (Korea)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.DE_CH">
            <value>
              Represents <c>German (Switzerland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.NL_NL">
            <value>
              Represents <c>Dutch (Netherlands)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.ZH_CN">
            <value>
              Represents <c>Chinese (China)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.SV_SE">
            <value>
              Represents <c>Swedish (Sweden)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.IT_IT">
            <value>
              Represents <c>Italian (Italy)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.NO_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.TR_TR">
            <value>
              Represents <c>Turkish (Turkey)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.FR_FR">
            <value>
              Represents <c>French (France)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.RO_RO">
            <value>
              Represents <c>Romanian (Romania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.IW_IL">
            <value>
              Represents <c>Hebrew (Israel)</c> locale
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.#ctor(System.String)">
            <summary>
            Construct a locale from a language code
            </summary>
            <param name="documentLanguage">language code</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.From(System.String)">
            <summary>
            Return an SupportedDocumentLanguage instance
            </summary>
            <param name="documentLanguage">language code whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.Values">
            <summary>
            Return all the possible values of this SupportedDocumentLanguage
            </summary>
            <value>
            Values of SupportedDocumentLanguage
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.ppt.SupportedDocumentLanguage.DocumentLanguage">
            <value>
            Returns the language code of this SupportedDocumentLanguage
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions">
            <summary>
            Parameters for converting Word to PDF using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions.Builder.DocumentLanguage">
            <summary>
            Returns documentLanguage option parameter
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions.Builder.WithDocumentLanguage(Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage)">
            <summary>
            Sets office preferred editing language to be used for conversion, specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage"/>.
            </summary>
            <param name="documentLanguage"><see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage"/>. Default value is <see cref="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.EN_US"/></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.CreatePDFFromWordOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>CreatePDFFromWordOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage">
            <summary>
             Supported locales for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.DA_DK">
            <value>
             Represents <c>Danish (Denmark)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.LT_LT">
            <value>
              Represents <c>Lithuanian (Lithuania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.SL_SI">
            <value>
              Represents <c>Slovenian (Slovenia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.EL_GR">
            <value>
              Represents <c>Greek (Greece)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.RU_RU">
            <value>
              Represents <c>Russian (Russia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.EN_US">
            <value>
              Represents <c>English (United States)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.ZH_HK">
            <value>
              Represents <c>Chinese (Hong Kong)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.HU_HU">
            <value>
              Represents <c>Hungarian (Hungary)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.ET_EE">
            <value>
              Represents <c>Estonian (Estonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.PT_BR">
            <value>
              Represents <c>Portuguese (Brazil)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.UK_UA">
            <value>
              Represents <c>Ukrainian (Ukraine)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.NB_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.PL_PL">
            <value>
              Represents <c>Polish (Poland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.LV_LV">
            <value>
              Represents <c>Latvian (Latvia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.FI_FI">
            <value>
              Represents <c>Finnish (Finland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.JA_JP">
            <value>
              Represents <c>Japanese (Japan)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.ES_ES">
            <value>
              Represents <c>Spanish (Spain)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.BG_BG">
            <value>
              Represents <c>Bulgarian (Bulgaria)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.EN_GB">
            <value>
              Represents <c>English (United Kingdom)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.CS_CZ">
            <value>
              Represents <c>Czech (Czech Republic)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.MT_MT">
            <value>
              Represents <c>Maltese (Malta)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.DE_DE">
            <value>
              Represents <c>German (Germany)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.HR_HR">
            <value>
              Represents <c>Croatian (Croatia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.SK_SK">
            <value>
              Represents <c>Slovak (Slovakia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.SR_SR">
            <value>
              Represents <c>Serbian (Serbia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.CA_CA">
            <value>
              Represents <c>Catalan (Canada)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.MK_MK">
            <value>
              Represents <c>Macedonian (Macedonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.KO_KR">
            <value>
              Represents <c>Korean (Korea)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.DE_CH">
            <value>
              Represents <c>German (Switzerland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.NL_NL">
            <value>
              Represents <c>Dutch (Netherlands)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.ZH_CN">
            <value>
              Represents <c>Chinese (China)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.SV_SE">
            <value>
              Represents <c>Swedish (Sweden)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.IT_IT">
            <value>
              Represents <c>Italian (Italy)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.NO_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.TR_TR">
            <value>
              Represents <c>Turkish (Turkey)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.FR_FR">
            <value>
              Represents <c>French (France)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.RO_RO">
            <value>
              Represents <c>Romanian (Romania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.IW_IL">
            <value>
              Represents <c>Hebrew (Israel)</c> locale
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.#ctor(System.String)">
            <summary>
            Construct a locale from a language code
            </summary>
            <param name="documentLanguage">language code</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.From(System.String)">
            <summary>
            Return an SupportedDocumentLanguage instance
            </summary>
            <param name="documentLanguage">language code whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.Values">
            <summary>
            Return all the possible values of this SupportedDocumentLanguage
            </summary>
            <value>
            Values of SupportedDocumentLanguage
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.createpdf.word.SupportedDocumentLanguage.DocumentLanguage">
            <value>
            Returns the language code of this SupportedDocumentLanguage
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.documentmerge.DocumentMergeOptions">
            <summary>
            Parameters for specifying the input JSON data and the desired output format for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation"/>.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.documentmerge.DocumentMergeOptions.#ctor(Newtonsoft.Json.Linq.JObject,Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat)">
            <summary>
            Creates a new <c>DocumentMergeOptions</c> instance
            </summary>
            <param name="jsonDataForMerge">JSON object specifying the input datasource for the document merge process</param>
            <param name="outputFormat">target format of the generated output document</param>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.documentmerge.DocumentMergeOptions.OutputFormat">
            <summary>
            Returns the intended target format of the generated output document. Possible values are PDF and DOCX.
            </summary>
            <returns> the output file format</returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.documentmerge.DocumentMergeOptions.JsonDataForMerge">
            <summary>
            Represents the input datasource for the document merge process as a JSON Object
            </summary>
            <returns> the input JSON Data to be merged with document template </returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat">
            <summary>
            Supported output formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation"/>.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.PDF">
            <value>
            Represents <c>application/pdf</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.DOCX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.wordprocessingml.document</c> media type
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.#ctor(System.String)">
            <summary>
            Constructs outputFormat from its string representation
            </summary>
            <param name="outputFormat">string representation</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.From(System.String)">
            <summary>
            Return an OutputFormat instance
            </summary>
            <param name="outputFormat">string representation of output format</param>
            <returns>An instance of <see cref="T:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.Values">
            <summary>
            Return all the possible values of this OutputFormat
            </summary>
            <value>
            Values of OutputFormat
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.documentmerge.OutputFormat.Format">
            <value>
            Returns the string representation of this OutputFormat
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat">
            <summary>
            Supported target formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation"/>
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileFormat">file extension</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.ToString">
            <summary>
            Returns the file extension of this format
            </summary>
            <returns>file extension of this format</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.DOC">
            <value>
            Represents <c>application/msword</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.DOCX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.wordprocessingml.document</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.XLSX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.PPTX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.presentationml.presentation</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.RTF">
            <value>
            Represents <c>text/rtf</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.JPEG">
            <value>
            Represents <c>image/jpeg</c> media type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat.PNG">
            <value>
            Represents <c>image/png</c> media type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions">
            <summary>
            Parameters for converting PDF to a searchable PDF using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation"/>.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.OCROptionsBuilder">
            <summary>
            Creates a new <c>OCROptions</c> builder.
            </summary>
            <returns>a <c>OCROptions.Builder</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions"/> instance. 
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.OcrLocale">
            <summary>
            
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.OcrType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.WithOcrLocale(Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale)">
            <summary>
            Sets input language to be used for OCR, specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale"/>.
            </summary>
            <param name="ocrLocale"><see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale"/>. Default value is <see cref="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.EN_US"/></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.WithOcrType(Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType)">
            <summary>
            Sets OCR type, specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType"/>
            </summary>
            <param name="ocrType"><see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType"/>. Default value is <see cref="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.SEARCHABLE_IMAGE"/></param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>OCROptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale">
            <summary>
             Supported locales for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.DA_DK">
            <value>
             Represents <c>Danish (Denmark)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.LT_LT">
            <value>
              Represents <c>Lithuanian (Lithuania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.SL_SI">
            <value>
              Represents <c>Slovenian (Slovenia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.EL_GR">
            <value>
              Represents <c>Greek (Greece)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.RU_RU">
            <value>
              Represents <c>Russian (Russia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.EN_US">
            <value>
              Represents <c>English (United States)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.ZH_HK">
            <value>
              Represents <c>Chinese (Hong Kong)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.HU_HU">
            <value>
              Represents <c>Hungarian (Hungary)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.ET_EE">
            <value>
              Represents <c>Estonian (Estonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.PT_BR">
            <value>
              Represents <c>Portuguese (Brazil)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.UK_UA">
            <value>
              Represents <c>Ukrainian (Ukraine)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.NB_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.PL_PL">
            <value>
              Represents <c>Polish (Poland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.LV_LV">
            <value>
              Represents <c>Latvian (Latvia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.FI_FI">
            <value>
              Represents <c>Finnish (Finland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.JA_JP">
            <value>
              Represents <c>Japanese (Japan)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.ES_ES">
            <value>
              Represents <c>Spanish (Spain)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.BG_BG">
            <value>
              Represents <c>Bulgarian (Bulgaria)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.EN_GB">
            <value>
              Represents <c>English (United Kingdom)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.CS_CZ">
            <value>
              Represents <c>Czech (Czech Republic)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.MT_MT">
            <value>
              Represents <c>Maltese (Malta)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.DE_DE">
            <value>
              Represents <c>German (Germany)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.HR_HR">
            <value>
              Represents <c>Croatian (Croatia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.SK_SK">
            <value>
              Represents <c>Slovak (Slovakia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.SR_SR">
            <value>
              Represents <c>Serbian (Serbia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.CA_CA">
            <value>
              Represents <c>Catalan (Canada)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.MK_MK">
            <value>
              Represents <c>Macedonian (Macedonia)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.KO_KR">
            <value>
              Represents <c>Korean (Korea)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.DE_CH">
            <value>
              Represents <c>German (Switzerland)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.NL_NL">
            <value>
              Represents <c>Dutch (Netherlands)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.ZH_CN">
            <value>
              Represents <c>Chinese (China)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.SV_SE">
            <value>
              Represents <c>Swedish (Sweden)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.IT_IT">
            <value>
              Represents <c>Italian (Italy)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.NO_NO">
            <value>
              Represents <c>Norwegian (Norway)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.TR_TR">
            <value>
              Represents <c>Turkish (Turkey)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.FR_FR">
            <value>
              Represents <c>French (France)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.RO_RO">
            <value>
              Represents <c>Romanian (Romania)</c> locale
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.IW_IL">
            <value>
              Represents <c>Hebrew (Israel)</c> locale
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.#ctor(System.String)">
            <summary>
            Construct a locale from a language code
            </summary>
            <param name="ocrLocale">language code</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.From(System.String)">
            <summary>
            Return an OCRSupportedLocale instance
            </summary>
            <param name="ocrLocale">language code whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.Values">
            <summary>
            Return all the possible values of this OCRSupportedLocale
            </summary>
            <value>
            Values of OCRSupportedLocale
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale.OcrLocale">
            <value>
            Returns the language code of this OCRSupportedLocale
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType">
            <summary>
             Supported OCR types for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.SEARCHABLE_IMAGE">
            <summary>
             Ensures that text is searchable and selectable. This option keeps the original image, deskews it as needed,
             and places an invisible text layer over it.
            </summary>
            <value>
            Ensures that text is searchable and selectable and keeps the original image, deskews it as needed
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.SEARCHABLE_IMAGE_EXACT">
            <summary>
             Ensures that text is searchable and selectable. This option keeps the original image and places an invisible
             text layer over it.Recommended for cases requiring maximum fidelity to the original image.
            </summary>
            <value>
            Ensures that text is searchable and selectable. This option keeps the original image.
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.#ctor(System.String)">
            <summary>
            Constructs OCR Type from its string representation
            </summary>
            <param name="ocrType">string representation</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.From(System.String)">
            <summary>
            Return an OCRSupportedType instance
            </summary>
            <param name="ocrType">string representation of OCR type whose instance has to be return</param>
            <returns>a <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType"/></returns>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.Values">
            <summary>
            Return all the possible values of this OCRSupportedType
            </summary>
            <value>
            Values of OCRSupportedType
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType.OcrType">
            <value>
            Returns the string representation of this OCRSupportedType
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.PageRanges">
            <summary>
            Page ranges of a file, inclusive of start and end page index, where page index starts from 1.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.PageRanges.Ranges">
            <summary>
            Get page ranges of a file
            </summary>
            <value>
            Page ranges of a file
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.#ctor">
            <summary>
            Constructs a new <c>PageRanges</c> instance with no pages added.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.AddRange(System.Int32,System.Int32)">
            <summary>
            Adds a page range. Page indexes start from 1.
            </summary>
            <param name="startPage">start page index, inclusive</param>
            <param name="endPage">end page index, inclusive</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.AddSinglePage(System.Int32)">
            <summary>
            Adds a single page. Page index starts from 1.
            </summary>
            <param name="page">single page index</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.AddAllFrom(System.Int32)">
            <summary>
            Adds a page range from <c>start</c> page index to the last page. Page index starts from 1.
            </summary>
            <param name="start">start page index</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.AddAll">
            <summary>
            Adds a page range representing all pages.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.ToString">
            <summary>
            Used internally by this SDK, not intended to be called by clients.
            </summary>
            <returns>string representation</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.Validate">
            <summary>
            Used internally by this SDK, not intended to be called by clients.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.PageRanges.IsEmpty">
            <summary>
            Used internally by this SDK, not intended to be called by clients.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption">
            <summary>
             Supported types of content to encrypt for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption.ALL_CONTENT">
            <value>
             Encrypts all the content of the PDF file
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption.ALL_CONTENT_EXCEPT_METADATA">
            <value>
              Encrypts all the content except the metadata of the PDF file
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption.#ctor(System.String)">
            <summary>
            Construct an content encryption instance from a code
            </summary>
            <param name="contentToEncrypt">type of content to encrypt</param>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption.Value">
            <value>
            Returns the string representation of this content encryption
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm">
            <summary>
             Supported encryption algorithm for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm.AES_128">
            <value>
             Represents <c>AES-128</c> encryption algorithm
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm.AES_256">
            <value>
              Represents <c>AES-256</c> encryption algorithm
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm.#ctor(System.String)">
            <summary>
            Construct an algorithm instance from a code
            </summary>
            <param name="algorithm">algorithm code</param>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm.Algorithm">
            <value>
            Returns the string representation of this encryption algorithm
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions">
            <summary>
            Parameters for securing PDF file with passwords and document permissions using <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/>.
            </summary>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder">
            <summary>
            Builds a <see cref="T:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions"/> instance. 
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.UserPassword">
            <summary>
            Returns the intended user password of the resulting encrypted PDF file.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.EncryptionAlgorithm">
            <summary>
            Returns the intended encryption algorithm of the resulting encrypted PDF file.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.OwnerPassword">
            <summary>
            Returns the intended owner password of the resulting encrypted PDF file.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.ContentEncryption">
            <summary>
            Returns the intended type of content to encrypt for the resulting encrypted PDF file.
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.Permissions">
            <summary>
            Returns the intended document permissions for the resulting encrypted PDF file.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.#ctor">
            <summary>
            Constructs a <c>Builder</c> instance.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.SetUserPassword(System.String)">
            <summary>
            Sets the intended user password required for opening the encrypted PDF file. Allowed maximum length for the user
            password is 128 bytes.
            </summary>
            <param name="userPassword">the user password; can not be null or empty</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.SetOwnerPassword(System.String)">
            <summary>
            Sets the intended owner password required to control access permissions in the encrypted PDF file. This
            password can also be used to open/view the encrypted PDF file. Allowed maximum length for the owner password is 128
            bytes.
            </summary>
            <param name="ownerPassword">the owner password; can not be null or empty</param>
            <returns></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.SetEncryptionAlgorithm(Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm)">
            <summary>
            Sets the intended encryption algorithm required for encrypting the PDF file.
            </summary>
            <param name="encryptionAlgorithm">the encryption algorithm; can not be null</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.SetContentEncryption(Adobe.DocumentServices.PDFTools.options.protectpdf.ContentEncryption)">
            <summary>
            Sets the intended type of content to encrypt in the PDF file.
            </summary>
            <param name="contentEncryption">the type of content to encrypt; can not be null</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.SetPermissions(Adobe.DocumentServices.PDFTools.options.protectpdf.Permissions)">
            <summary>
            Sets the intended permissions for the encrypted PDF file. This includes permissions to allow printing, editing
            and content copying in the PDF document. Permissions can only be used in case the owner password is set.
            </summary>
            <param name="permissions">the permissions; can not be null</param>
            <returns>this Builder instance to add any additional parameters</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions.Builder.Build">
            <summary>
            Returns a new <see cref="T:Adobe.DocumentServices.PDFTools.options.protectpdf.PasswordProtectOptions"/> instance built from the current state of this builder.
            </summary>
            <returns>a new <c>PasswordProtectOptions</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission">
            <summary>
             Supported document permission types for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.PRINT_LOW_QUALITY">
            <value>
            Enables low quality printing of the PDF document
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.PRINT_HIGH_QUALITY">
            <value>
            Enables high quality printing of the PDF document
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.EDIT_CONTENT">
            <value>
            Enables all the editing permissions in the PDF document except commenting and page extraction
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.EDIT_DOCUMENT_ASSEMBLY">
            <value>
            Enables insertion, deletion and rotation of pages in a PDF document
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.EDIT_ANNOTATIONS">
            <value>
            Enables additions of comments, digital signatures and filling in of forms in a PDF document
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.EDIT_FILL_AND_SIGN_FORM_FIELDS">
            <value>
            Enables filling in of forms, digital signature and creation of template pages in a PDF document
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.COPY_CONTENT">
            <value>
            Enables copying of content from the PDF document
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.#ctor(System.String)">
            <summary>
            Construct an permission instance from a code
            </summary>
            <param name="permission">permission code</param>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission.Value">
            <value>
            Returns the string representation of this permission
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.Permissions">
            <summary>
            Document Permissions for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/>.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.Permissions.CreateNew">
            <summary>
            Creates a new <c>Permissions</c> instance.
            </summary>
            <returns>a <c>Permissions</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.Permissions.GetValues">
            <summary>
            Returns the intended set of document permissions values.
            </summary>
            <returns>the set of document permissions</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.Permissions.AddPermission(Adobe.DocumentServices.PDFTools.options.protectpdf.Permission)">
            <summary>
            Adds a document <see cref="T:Adobe.DocumentServices.PDFTools.options.protectpdf.Permission"/> in the permissions object.
            </summary>
            <param name="permission">a document permission; can not be null</param>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.protectpdf.ProtectPDFOptions">
            <summary>
            Marker base class for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/> options.
            The factory methods within this class can be used to create instances of options classes.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.protectpdf.ProtectPDFOptions.PasswordProtectOptionsBuilder">
            <summary>
            Creates a new <c>PasswordProtectOptions</c> builder.
            </summary>
            <returns>a <c>PasswordProtectOptions.Builder</c> instance</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle">
            <summary>
            Supported rotation angle values for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation"/>
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle._90">
            <value>
            Represents 90 degrees clockwise rotation
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle._180">
            <value>
            Represents 180 degrees clockwise rotation
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle._270">
            <value>
            Represents 270 degrees clockwise rotation
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle.Value">
            <value>
            Returns the value of this angle
            </value>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="value">angle value</param>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation">
            <summary>
            Combines multiple PDF files into a single PDF file. Allows specifying which pages of the source files to combine.
            </summary>
            <example>
            Sample usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            CombineFilesOperation combineFilesOperation = CombineFilesOperation.CreateNew();
            FileRef combineSource1 = FileRef.CreateFromLocalFile("combinePdfInput1.pdf",
                CombineFilesOperation.SupportedSourceFormat.PDF.GetMediaType());
            FileRef combineSource2 = FileRef.CreateFromLocalFile("combinePdfInput2.pdf",
                CombineFilesOperation.SupportedSourceFormat.PDF.GetMediaType());
            combineFilesOperation.AddInput(combineSource1);
            combineFilesOperation.AddInput(combineSource2);
            FileRef result = combineFilesOperation.Execute(context);
            result.SaveAs("CombineFilesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.TargetFileFormatExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.CreateNew">
            <summary>
            Constructs a <c>CombineFilesOperation</c> instance
            </summary>
            <returns>a new <c>CombineFilesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.AddInput(Adobe.DocumentServices.PDFTools.io.FileRef,Adobe.DocumentServices.PDFTools.options.PageRanges)">
            <summary>
            Specifies particular pages of a PDF file (media type "application/pdf") to be combined with other files. The pages will be added after
            the pages of any previously specified files.
            <para>
            For adding all the pages of the file, consider <see cref="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.AddInput(Adobe.DocumentServices.PDFTools.io.FileRef)"/>
            </para>
            </summary>
            <param name="sourceFileRef">a PDF file; can not be null</param>
            <param name="pageRanges">page ranges of the PDF file to be combined</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.AddInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Specifies a PDF file (media type "application/pdf") to be combined with other files. All pages of this file will be
            added after the pages of any previously specified files.
            <para>
            For adding particular pages of a PDF file, use <see cref="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.AddInput(Adobe.DocumentServices.PDFTools.io.FileRef,Adobe.DocumentServices.PDFTools.options.PageRanges)"/>
            </para>
            </summary>
            <param name="sourceFileRef">a PDF file to be combined; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>the resulting PDF file</returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation">
            <summary>
            An operation that reduces the size of a PDF file. Allows specifying compressionLevel(<see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressionLevel"/>) for compressing pdf
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            CompressPDFOperation compressPDFOperation = CompressPDFOperation.CreateNew();
            compressPDFOperation.SetInput(FileRef.CreateFromLocalFile("compressInput.pdf",
                CompressPDFOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef result = compressPDFOperation.Execute(context);   
            result.SaveAs("compressOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.CreateNew">
            <summary>
            Constructs a <c>CompressPDFOperation</c> instance.
            </summary>
            <returns>a new <c>CompressPDFOperation</c> instance</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SetOptions(Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions)">
            <summary>
            Sets the CompressPDF options for this operation. See <see cref="T:Adobe.DocumentServices.PDFTools.options.compresspdf.CompressPDFOptions"/> for how to specify the compress pdf parameters.
            </summary>
            <param name="compressPDFOptions">compresspdf option parameters</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CompressPDFOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation">
            <summary>
            An operation that converts a non-PDF file to a PDF file. Some source formats may have associated conversion parameters
            which can be set in the <see cref="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SetOptions(Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions)"/> method.
            <para>
            The supported source media types are listed here. The <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat"/> class can be used to map file
            extensions to their corresponding media types when creating FileRef instances for the source files.
            <list type="bullet">
            <item>
            <term>image/bmp</term>
            </item>
            <item>
            <term>application/msword</term>
            </item>
            <item>
            <term>application/vnd.openxmlformats-officedocument.wordprocessingml.document</term>
            </item>
            <item>
            <term>image/gif</term>
            </item>
            <item>
            <term>image/jpeg</term>
            </item>
            <item>
            <term>image/png</term>
            </item>
            <item>
            <term>application/vnd.ms-powerpoint</term>
            </item>
            <item>
            <term>application/vnd.openxmlformats-officedocument.presentationml.presentation</term>
            </item>
            <item>
            <term>text/rtf</term>
            </item>
            <item>
            <term>image/tiff</term>
            </item>
            <item>
            <term>text/plain</term>
            </item>
            <item>
            <term>application/vnd.ms-excel</term>
            </item>
            <item>
            <term>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</term>
            </item>
            <item>
            <term>application/zip (see "Special handling for HTML inputs" below)</term>
            </item>
            </list>
            </para>
            
            <para>
            <strong>Special handling for HTML inputs:</strong>
            <para>   </para>
            An HTML input can only be provided as local zip archive.
            <para>   </para>
            When creating the corresponding FileRef instance, the media type must be "application/zip"
            for the local zip archive. Zip archives must have the following structure:
            <list type="bullet">
            <item>
            <term>The main HTML file must be named "index.html".</term>
            </item>
            <item>
            <term>"index.html" must exist at the top level of zip archive, not in a folder.</term>
            </item>
            </list>
            </para>
            Sample Layout:
            <code>
            html_files.zip
            |__index.html
            |__referenced_file_1.css
            |__referenced_file_2.jpeg
            |__subfolder_1
            |_____referenced_file_3.jpeg
            </code>
            </summary>
            
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            CreatePDFOperation createPdfOperation = CreatePDFOperation.CreateNew();
            createPdfOperation.SetInput(FileRef.CreateFromLocalFile("createPdfInput.docx",
                CreatePDFOperation.SupportedSourceFormat.DOCX.GetMediaType()));
            FileRef result = createPdfOperation.Execute(context);
            result.SaveAs("CreatePDFOutput.pdf");
            </code>
            </example> 
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.isOperationExecutedOnce">
            <summary>
            A variable to check if the operation has been invoked more than once.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSchemesForUrlSource">
            <summary>
            Supported schemes for url source
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.CreateNew">
            <summary>
            Constructs a <c>CreatePDFOperation</c> instance
            </summary>
            <returns> a new <c>CreatePDFOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input file.
            </summary>
            <param name="sourceFileRef">an input file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SetOptions(Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions)">
            <summary>
            Sets the conversion parameters for this operation. See <see cref="T:Adobe.DocumentServices.PDFTools.options.createpdf.CreatePDFOptions"/> for how to specify the
            conversion parameters for the different source media types.
            </summary>
            <param name="createPdfOptions">conversion parameters; use null for default values</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting PDF file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>the resultant PDF file</returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.DOC">
            <value>
            Represents <c>application/msword</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.DOCX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.wordprocessingml.document</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.XLS">
            <value>
            Represents <c>application/vnd.ms-excel</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.XLSX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.PPTX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.presentationml.presentation</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.PPT">
            <value>
            Represents <c>application/vnd.ms-powerpoint</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.RTF">
            <value>
            Represents <c>text/rtf</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.TXT">
            <value>
            Represents <c>text/plain</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.BMP">
            <value>
            Represents <c>image/bmp</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.GIF">
            <value>
            Represents <c>image/gif</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.JPEG">
            <value>
            Represents <c>image/jpeg</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.JPG">
            <value>
            Represents <c>image/jpeg</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.TIFF">
            <value>
            Represents <c>image/tiff</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.TIF">
            <value>
            Represents <c>image/tiff</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.ZIP">
            <value>
            Represents <c>application/zip</c> Media Type
            </value>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.CreatePDFOperation.SupportedSourceFormat.PNG">
            <value>
            Represents <c>image/png</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation">
            <summary>
            An operation to delete pages in a PDF file.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            DeletePagesOperation deletePagesOperation = DeletePagesOperation.CreateNew();
            deletePagesOperation.SetInput(FileRef.CreateFromLocalFile("deletePagesInput.pdf",
                DeletePagesOperation.SupportedSourceFormat.PDF.GetMediaType()));
            PageRanges pageRanges = new PageRanges();
            pageRanges.AddSinglePage(1)
            deletePagesOperation.SetPageRanges(pageRanges);
            FileRef result = deletePagesOperation.Execute(context);   
            result.SaveAs("deletePagesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.CreateNew">
            <summary>
            Constructs a <c>DeletePagesOperation</c> instance.
            </summary>
            <returns>a new <c>DeletePagesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SetPageRanges(Adobe.DocumentServices.PDFTools.options.PageRanges)">
            <summary>
            Specifies the pages to delete from the input PDF file.
            </summary>
            <param name="pageRanges">page ranges for deletion; can not be null or empty</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DeletePagesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation">
            <summary>
             An operation that enables the clients to produce high fidelity PDF and Word documents with dynamic data inputs. This operation merges the JSON data with the Word template to create dynamic documents for contracts and agreements, invoices, proposals, reports, forms, branded marketing documents and more.
            <para>
            To know more about document generation and document templates, please see the <a href="http://www.adobe.com/go/dcdocgen_overview_doc">documentation </a>
            </para>
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            JObject jsonDataForMerge = JObject.Parse("{\"customerName\": \"James\",\"customerVisits\": 100}");
            DocumentMergeOptions documentMergeOptions = new DocumentMergeOptions(jsonDataForMerge, OutputFormat.PDF);
            DocumentMergeOperation documentMergeOperation = DocumentMergeOperation.CreateNew(documentMergeOptions);
            documentMergeOperation.SetInput(FileRef.CreateFromLocalFile("DocumentMergeOperationInput.docx");
            FileRef result = documentmergeOperation.Execute(context);   
            result.SaveAs("DocumentMergeOperationOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.CreateNew(Adobe.DocumentServices.PDFTools.options.documentmerge.DocumentMergeOptions)">
            <summary>
            Constructs a <c>DocumentMergeOperation</c> instance.
            </summary>
            <param name="documentMergeOptions">options for merging document template with provided input json data; Cannot be null</param>
            <returns>a new <c>DocumentMergeOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets the input MS Word based document template
            </summary>
            <param name="sourceFileRef">an input file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.DocumentMergeOperation.SupportedSourceFormat.DOCX">
            <value>
            Represents <c>application/vnd.openxmlformats-officedocument.wordprocessingml.document</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation">
            <summary>
            An operation which exports a source PDF file to a supported format specified by <see cref="T:Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat"/>
            <para>
            For the image target formats (JPEG and PNG), the resulting file is a ZIP archive containing one image per page of
            the source PDF file. Each image file name ends with "_&lt;unpadded_page_index&gt;". For example, a PDF file with 15
            pages will generate 15 image files. The first file's name ends with "_1" and the last file's name ends with "_15".
            </para>
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            ExportPDFOperation exportPdfOperation = ExportPDFOperation.CreateNew(ExportPDFTargetFormat.DOCX);
            exportPdfOperation.SetInput(FileRef.CreateFromLocalFile("exportPdfInput.pdf",
                ExportPDFOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef result = exportPdfOperation.Execute(context);   
            result.SaveAs("ExportPDFOutput.docx");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.exportPdfTargetFormat">
            <summary>
            Field representing the extension of the operation result, depends on the exportpdf specified by the client
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.CreateNew(Adobe.DocumentServices.PDFTools.options.exportpdf.ExportPDFTargetFormat)">
            <summary>
            Constructs a <c>ExportPDFOperation</c> instance.
            </summary>
            <param name="exportPdfTargetFormat">target format</param>
            <returns>a new <c>ExportPDFOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ExportPDFOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation">
            <summary>
            An operation that can be used to insert pages of multiple PDF files into a base PDF file.
            <para>
            For more complex use cases, refer the <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation"/>
            </para>
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            InsertPagesOperation insertPagesOperation = InsertPagesOperation.CreateNew();
            insertPagesOperation.SetBaseInput(FileRef.CreateFromLocalFile("insertPagesInput.pdf",
                InsertPagesOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef fileToInsert = FileRef.CreateFromLocalFile("fileToInsert.pdf",
                InsertPagesOperation.SupportedSourceFormat.PDF.GetMediaType());
            insertPagesOperation.AddPagesToInsertAt(fileToInsert, 1);
            FileRef result = insertPagesOperation.Execute(context);   
            result.SaveAs("insertPagesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.CreateNew">
            <summary>
            Constructs a <c>InsertPagesOperation</c> instance.
            </summary>
            <returns>a new <c>InsertPagesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.SetBaseInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="baseSourceFileRef">the base input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.AddPagesToInsertAt(Adobe.DocumentServices.PDFTools.io.FileRef,Adobe.DocumentServices.PDFTools.options.PageRanges,System.Int32)">
            <summary>
            Adds the specified pages of the input PDF file to be inserted at the specified page of the base PDF file.
            <para>
            This method can be invoked multiple times with the same or different input PDF files.
            </para>
            </summary>
            <param name="inputFile">a PDF file for insertion; can not be null</param>
            <param name="pageRanges">page ranges of the PDF file for insertion; can not be null or empty</param>
            <param name="basePage">page of the base PDF file</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.AddPagesToInsertAt(Adobe.DocumentServices.PDFTools.io.FileRef,System.Int32)">
            <summary>
            Adds all the pages of the input PDF file to be inserted at the specified page of the base PDF file.
            <para>
            This method can be invoked multiple times with the same or different input PDF files.
            </para>
            </summary>
            <param name="inputFile">a PDF file for insertion; can not be null</param>
            <param name="basePage">page of the base PDF file</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.InsertPagesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation">
            <summary>
            An operation that converts a PDF file into a linearized (also known as “web optimized”) PDF file.
            Such PDF files are optimized for incremental access in network environments.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            LinearizePDFOperation linearizePDFOperation = LinearizePDFOperation.CreateNew();
            linearizePDFOperation.SetInput(FileRef.CreateFromLocalFile("linearizeInput.pdf",
                LinearizePDFOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef result = linearizePDFOperation.Execute(context);   
            result.SaveAs("linearizeOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.CreateNew">
            <summary>
            Constructs a <c>LinearizePDFOperation</c> instance.
            </summary>
            <returns>a new <c>LinearizePDFOperation</c> instance</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.LinearizePDFOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation">
            <summary>
            Convert a PDF file into a searchable PDF file. Allows specifying locale(<see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedLocale"/>) and OCR Type
            (<see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCRSupportedType"/>) for performing OCR(Optical Character Recognition)
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            OCROperation ocrOperation = OCROperation.CreateNew();
            ocrOperation.SetInput(FileRef.CreateFromLocalFile("ocrInput.pdf",
                OCROperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef result = ocrOperation.Execute(context);   
            result.SaveAs("ocrOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.CreateNew">
            <summary>
            Constructs a <c>OCROperation</c> instance.
            </summary>
            <returns>a new <c>OCROperation</c> instance</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SetOptions(Adobe.DocumentServices.PDFTools.options.ocr.OCROptions)">
            <summary>
            Sets the OCR options for this operation. See <see cref="T:Adobe.DocumentServices.PDFTools.options.ocr.OCROptions"/> for how to specify the OCR parameters.
            </summary>
            <param name="ocrOptions">ocr option parameters</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.OCROperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.OCROperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation">
            <summary>
            An operation that is used for securing PDF document with password(s).
            The password(s) is used for encrypting the PDF document and setting the restriction on certain features
            like printing, editing and copying in the PDF document.
            <para>
            The supported algorithm for encrypting the PDF contents are listed here.
            The <see cref="T:Adobe.DocumentServices.PDFTools.options.protectpdf.EncryptionAlgorithm"/> can be used to set the encryption algorithm.
            </para>
            <list type="bullet">
            <item>
            <term>AES-128</term>
            </item>
            <item>
            <term>AES-256</term>
            </item>
            </list>
            <para>
            For AES-128 encryption the password supports LATIN-I characters only.
            For AES-256 encryption the password supports Unicode character set.
            </para>
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            Permissions permissions = Permissions.CreateNew();
            permissions.AddPermission(Permission.PRINT_LOW_QUALITY);
            permissions.AddPermission(Permission.EDIT_DOCUMENT_ASSEMBLY);
            permissions.AddPermission(Permission.COPY_CONTENT);
            ProtectPDFOptions protectPDFOptions = ProtectPDFOptions.PasswordProtectOptionsBuilder()
                .SetUserPassword("openpassword")
                .SetOwnerPassword("permissionspassword")
                .SetEncryptionAlgorithm(EncryptionAlgorithm.AES_256)
                .SetEncryptionAlgorithm(EncryptionAlgorithm.AES_128)
                .SetContentEncryption(ContentEncryption.ALL_CONTENT_EXCEPT_METADATA)
                .SetPermissions(permissions)
                .Build();
            ProtectPDFOperation protectPDFOperation = ProtectPDFOperation.CreateNew(protectPDFOptions);
            protectPDFOperation.SetInput(FileRef.CreateFromLocalFile("protectPDFInput.pdf",
                ProtectPDFOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef result = protectPDFOperation.Execute(context);   
            result.SaveAs("protectPDFOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.CreateNew(Adobe.DocumentServices.PDFTools.options.protectpdf.ProtectPDFOptions)">
            <summary>
            Constructs a <c>ProtectPDFOperation</c> instance.
            </summary>
            <param name="protectPDFOptions">options for securing PDF file with password(s); Cannot be null</param>
            <returns>a new <c>ProtectPDFOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ProtectPDFOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation">
            <summary>
            An operation that allows to remove password security from a PDF document.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            RemoveProtectionOperation removeProtectionOperation = RemoveProtectionOperation.CreateNew();
            removeProtectionOperation.SetInput(FileRef.CreateFromLocalFile("removeProtectionInput.pdf",
                RemoveProtectionOperation.SupportedSourceFormat.PDF.GetMediaType()));
            removeProtectionOperation.SetPassword("password");
            FileRef result = removeProtectionOperation.Execute(context);   
            result.SaveAs("removeProtectionOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.CreateNew">
            <summary>
            Constructs a <c>RemoveProtectionOperation</c> instance.
            </summary>
            <returns>a new <c>RemoveProtectionOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SetPassword(System.String)">
            <summary>
            Specifies the intended password depending on the type of password security attached to the input PDF document.
            </summary>
            <param name="password">password for the removal of security of the input PDF file; can not be null or empty</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RemoveProtectionOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation">
            <summary>
            An operation that allows to rearrange pages in a PDF file according to the specified order.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            ReorderPagesOperation reorderPagesOperation = ReorderPagesOperation.CreateNew();
            reorderPagesOperation.SetInput(FileRef.CreateFromLocalFile("reorderPagesInput.pdf",
                ReorderPagesOperation.SupportedSourceFormat.PDF.GetMediaType()));
            PageRanges pageRanges = new PageRanges();
            pageRanges.AddSinglePage(3);
            pageRanges.AddRange(1,2);
            reorderPagesOperation.SetPagesOrder(pageRanges);
            FileRef result = reorderPagesOperation.Execute(context);   
            result.SaveAs("reorderPagesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.CreateNew">
            <summary>
            Constructs a <c>ReorderPagesOperation</c> instance.
            </summary>
            <returns>a new <c>ReorderPagesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SetPagesOrder(Adobe.DocumentServices.PDFTools.options.PageRanges)">
            <summary>
            Sets the order of the pages.
            </summary>
            <param name="pageRanges">page ranges for reordering; can not be null or empty</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReorderPagesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation">
            <summary>
            An operation that allows specific pages in a PDF file to be replaced with pages from multiple PDF files.
            <para>
            For more complex use cases, refer the <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.CombineFilesOperation"/>
            </para>
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            ReplacePagesOperation replacePagesOperation = ReplacePagesOperation.CreateNew();
            replacePagesOperation.SetBaseInput(FileRef.CreateFromLocalFile("replacePageInput.pdf",
                ReplacePagesOperation.SupportedSourceFormat.PDF.GetMediaType()));
            FileRef fileToBeReplacedWith = FileRef.CreateFromLocalFile("fileToBeReplacedWith.pdf",
                ReplacePagesOperation.SupportedSourceFormat.PDF.GetMediaType());
            replacePagesOperation.AddPagesForReplace(fileToBeReplacedWith, 1);
            FileRef result = replacePagesOperation.Execute(context);   
            result.SaveAs("replacePagesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.CreateNew">
            <summary>
            Constructs a <c>ReplacePagesOperation</c> instance.
            </summary>
            <returns>a new <c>ReplacePagesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.SetBaseInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="baseSourceFileRef">the base input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.AddPagesForReplace(Adobe.DocumentServices.PDFTools.io.FileRef,Adobe.DocumentServices.PDFTools.options.PageRanges,System.Int32)">
            <summary>
            Adds the specified pages of the input PDF file for replacing the page of the base PDF file.
            <para>
            This method can be invoked multiple times with the same or different input PDF files.
            </para>
            </summary>
            <param name="inputFile">a PDF file to be replaced with; can not be null</param>
            <param name="pageRanges">page ranges of the input PDF file; can not be null</param>
            <param name="basePageToReplace">page of the base PDF file</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.AddPagesForReplace(Adobe.DocumentServices.PDFTools.io.FileRef,System.Int32)">
            <summary>
            Adds all the pages of the input PDF file for replacing the page of the base PDF file.
            <para>
            This method can be invoked multiple times with the same or different input PDF files.
            </para>
            </summary>
            <param name="inputFile">a PDF file to be replaced with; can not be null</param>
            <param name="basePageToReplace">page of the base PDF file</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.ReplacePagesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation">
            <summary>
            An operation that allows rotation of specific pages in a PDF file.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            RotatePagesOperation rotatePagesOperation = RotatePagesOperation.CreateNew();
            rotatePagesOperation.SetInput(FileRef.CreateFromLocalFile("rotatePagesInput.pdf",
                RotatePagesOperation.SupportedSourceFormat.PDF.GetMediaType()));
            rotatePagesOperation.SetAngleToRotatePagesBy(Angle._90);
            FileRef result = rotatePagesOperation.Execute(context);   
            result.SaveAs("rotatePagesOutput.pdf");
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.CreateNew">
            <summary>
            Constructs a <c>RotatePagesOperation</c> instance.
            </summary>
            <returns>a new <c>RotatePagesOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SetAngleToRotatePagesBy(Adobe.DocumentServices.PDFTools.options.rotatepages.Angle,Adobe.DocumentServices.PDFTools.options.PageRanges)">
            <summary>
            Sets angle (in clockwise direction) for rotating the specified pages of the input PDF file; can be invoked
            multiple times to set rotation for different set of page ranges.
            <para>
            Multiple invocation of this method on the same set of pages can result in rotating pages multiple times.
            </para>
            <code>
            For e.g.:
            PageRanges pageRanges = new PageRanges();
            pageRanges.addSinglePage(1);
            rotatePagesOperation.SetAngleToRotatePagesBy(Angle._90, pageRanges);
            rotatePagesOperation.SetAngleToRotatePagesBy(Angle._180, pageRanges);
            </code>
            <para>
            Above invocations will effectively rotate pages(as specified by the page ranges) by 270 degrees.
            </para>
            </summary>
            <param name="angle">angle for rotation; see <see cref="T:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle"/> for valid angle values</param>
            <param name="pageRanges">page ranges for rotation; can not be null or empty</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SetAngleToRotatePagesBy(Adobe.DocumentServices.PDFTools.options.rotatepages.Angle)">
            <summary>
            Sets angle (in clockwise direction) for rotating all the pages of the input PDF file.
            <para>
            Multiple invocation of this method can result in rotating pages multiple times.
            </para>
            </summary>
            <param name="angle">angle for rotation; see <see cref="T:Adobe.DocumentServices.PDFTools.options.rotatepages.Angle"/> for valid angle values</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new FileRef instance for the resulting file.
            <para>
            The resulting file may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            the resulting file; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.RotatePagesOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation">
            <summary>
            An operation that splits PDF document into multiple smaller documents by simply specifying either the number of files,
            pages per file, or page ranges.
            </summary>
            <example>
            Sample Usage:
            <code>
            string credentialsFilePath = Directory.GetCurrentDirectory()
                + Path.DirectorySeparatorChar + "pdftools-api-credentials.json";
            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()
                .FromFile(credentialsFilePath).Build();
            ExecutionContext context = ExecutionContext.Create(credentials);
            SplitPDFOperation splitPDFOperation = SplitPDFOperation.CreateNew();
            splitPDFOperation.SetInput(FileRef.CreateFromLocalFile("splitPDFInput.pdf",
                SplitPDFOperation.SupportedSourceFormat.PDF.GetMediaType()));
            splitPDFOperation.SetFileCount(2);
            List&lt;FileRef&gt; result = splitPDFOperation.Execute(context);   
            int index = 0;
            foreach (FileRef fileRef in result) {
                fileRef.SaveAs("splitPDFOperationOutput_" + index + ".pdf");
                index++;
            }
            </code>
            </example>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.isOperationExecutedOnce">
            <summary>
            Field to check if the operation instance was invoked more than once
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SupportedFileFormats">
            <summary>
            Supported media types for this operation
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.PdfFileExtension">
            <summary>
            Field representing the extension of the operation result
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.CreateNew">
            <summary>
            Constructs a <c>SplitPDFOperation</c> instance.
            </summary>
            <returns>a new <c>SplitPDFOperation</c> instance</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SetInput(Adobe.DocumentServices.PDFTools.io.FileRef)">
            <summary>
            Sets an input PDF file (media type "application/pdf").
            </summary>
            <param name="sourceFileRef">an input PDF file; can not be null</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SetPageRanges(Adobe.DocumentServices.PDFTools.options.PageRanges)">
            <summary>
            Sets the page ranges on the basis of which to split the input PDF file.
            Each page range corresponds to a single output file having the pages specified in the page range.
            </summary>
            <param name="pageRanges">page ranges for split; can not be null or empty</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SetPageCount(System.Int32)">
            <summary>
            Sets the maximum number of pages each of the output files can have.
            </summary>
            <param name="pageCount">maximum number of pages per output file</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SetFileCount(System.Int32)">
            <summary>
            Sets the number of documents to split the input PDF.
            </summary>
            <param name="fileCount">represents the number of output files</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.Execute(Adobe.DocumentServices.PDFTools.ExecutionContext)">
            <summary>
            Executes this operation synchronously using the supplied context and returns a new list of FileRef instances for the resultant PDF files.
            <para>
            The resulting files may be stored in the system temporary directory.
            See <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> for how temporary resources are cleaned up.
            </para>
            </summary>
            <param name="context">the context in which to execute the operation</param>
            <returns>
            list of resultant PDF files; see class-level docs for format-specific considerations
            </returns>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceApiException">if an API call results in an error response</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.ServiceUsageException">if service usage limits have been reached or credentials quota has been exhausted.</exception>
            <exception cref="T:Adobe.DocumentServices.PDFTools.exception.SDKException">this is thrown for client-side errors</exception>
            <exception cref="T:System.IO.FileNotFoundException">if the client config file or the input source does not exist in a specified path</exception>
            <exception cref="T:System.IO.IOException">if there is an error in reading either the input source or the resulting file</exception>
            <exception cref="T:System.ArgumentException">thrown when any of the inputs provided is not valid</exception>
            <exception cref="T:System.InvalidOperationException">thrown when operation instance is invoked more than once</exception>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SupportedSourceFormat">
            <summary>
            Supported source file formats for <see cref="T:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SupportedSourceFormat.GetMediaType">
            <summary>
            Returns the corresponding media type for this format, intended to be used for <c>mediaType</c> parameter in
            <see cref="T:Adobe.DocumentServices.PDFTools.io.FileRef"/> methods.
            </summary>
            <returns>the corresponding media type</returns>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.pdfops.SplitPDFOperation.SupportedSourceFormat.PDF">
            <value>
            Represents <c>application/pdf</c> Media Type
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.ILog">
            <summary>
                Simple interface that represent a logger.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.ILog.Log(Adobe.DocumentServices.PDFTools.Logging.LogLevel,System.Func{System.String},System.Exception,System.Object[])">
            <summary>
                Log a message the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">An optional exception.</param>
            <param name="formatParameters">Optional format parameters for the message generated by the messagefunc. </param>
            <returns>true if the message was logged. Otherwise false.</returns>
            <remarks>
                Note to implementers: the message func should not be called if the loglevel is not enabled
                so as not to incur performance penalties.
                To check IsEnabled call Log with only LogLevel and check the return value, no event will be written.
            </remarks>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.ILogProvider">
            <summary>
            Represents a way to get a <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/>
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.ILogProvider.GetLogger(System.String)">
            <summary>
            Gets the specified named logger.
            </summary>
            <param name="name">Name of the logger.</param>
            <returns>The logger reference.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.ILogProvider.OpenNestedContext(System.String)">
            <summary>
            Opens a nested diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="message">The message to add to the diagnostics context.</param>
            <returns>A disposable that when disposed removes the message from the context.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.ILogProvider.OpenMappedContext(System.String,System.Object,System.Boolean)">
            <summary>
            Opens a mapped diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <param name="destructure">Determines whether to call the destructor or not.</param>
            <returns>A disposable that when disposed removes the map from the context.</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogExtensions">
            <summary>
                Extension methods for the <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> interface.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsDebugEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsErrorEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsFatalEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsInfoEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsTraceEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.IsWarnEnabled(Adobe.DocumentServices.PDFTools.Logging.ILog)">
            <summary>
                Check if the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level is enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to check with.</param>
            <returns>True if the log level is enabled; false otherwise.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Debug(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Debug(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Debug(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Debug(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.DebugFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.DebugException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception)">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.DebugException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Error(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Error(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Error(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Error(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.ErrorFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.ErrorException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Fatal(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Fatal(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Fatal(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Fatal(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.FatalFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.FatalException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Info(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Info(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Info(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Info(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.InfoFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.InfoException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Trace(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Trace(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Trace(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Trace(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.TraceFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.TraceException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Warn(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Func{System.String})">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="messageFunc">The message function.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Warn(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String)">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Warn(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.Warn(Adobe.DocumentServices.PDFTools.Logging.ILog,System.Exception,System.String,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.WarnFormat(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Object[])">
            <summary>
                Logs a message at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogExtensions.WarnException(Adobe.DocumentServices.PDFTools.Logging.ILog,System.String,System.Exception,System.Object[])">
            <summary>
                Logs an exception at the <see cref="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn"/> log level, if enabled.
            </summary>
            <param name="logger">The <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/> to use.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">Optional format parameters for the message.</param>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogLevel">
            <summary>
                The log level.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Trace">
            <summary>
            Trace
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Warn">
            <summary>
            Warn
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogLevel.Fatal">
            <summary>
            Fatal
            </summary>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProvider">
            <summary>
            Provides a mechanism to create instances of <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog" /> objects.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.SetCurrentLogProvider(Adobe.DocumentServices.PDFTools.Logging.ILogProvider)">
            <summary>
            Sets the current log provider.
            </summary>
            <param name="logProvider">The log provider.</param>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.Logging.LogProvider.IsDisabled">
            <summary>
            Gets or sets a value indicating whether this is logging is disabled.
            </summary>
            <value>
            <c>true</c> if logging is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.Logging.LogProvider.OnCurrentLogProviderSet">
            <summary>
            Sets an action that is invoked when a consumer of your library has called SetCurrentLogProvider. It is 
            important that hook into this if you are using child libraries (especially ilmerged ones) that are using
            LibLog (or other logging abstraction) so you adapt and delegate to them.
            <see cref="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.SetCurrentLogProvider(Adobe.DocumentServices.PDFTools.Logging.ILogProvider)"/> 
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.For``1">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <typeparam name="T">The type whose name will be used for the logger.</typeparam>
            <returns>An instance of <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.GetCurrentClassLogger">
            <summary>
            Gets a logger for the current class.
            </summary>
            <returns>An instance of <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.GetLogger(System.Type,System.String)">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <param name="type">The type whose name will be used for the logger.</param>
            <param name="fallbackTypeName">If the type is null then this name will be used as the log name instead</param>
            <returns>An instance of <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.GetLogger(System.String)">
            <summary>
            Gets a logger with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>An instance of <see cref="T:Adobe.DocumentServices.PDFTools.Logging.ILog"/></returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.OpenNestedContext(System.String)">
            <summary>
            Opens a nested diagnostics context.
            </summary>
            <param name="message">A message.</param>
            <returns>An <see cref="T:System.IDisposable"/> that closes context when disposed.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProvider.OpenMappedContext(System.String,System.Object,System.Boolean)">
            <summary>
            Opens a mapped diagnostics context.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <param name="destructure">A optional paramater to indicate message should be destructured.</param>
            <returns>An <see cref="T:System.IDisposable"/> that closes context when disposed.</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LibLogException">
            <summary>
            Exception thrown by LibLog.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LibLogException.#ctor(System.String)">
            <summary>
            Initializes a new LibLogException with the specified message.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LibLogException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new LibLogException with the specified message and inner exception.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogMessageFormatter.SimulateStructuredLogging(System.Func{System.String},System.Object[])">
            <summary>
                Some logging frameworks support structured logging, such as serilog. This will allow you to add names to structured
                data in a format string:
                For example: Log("Log message to {user}", user). This only works with serilog, but as the user of LibLog, you don't
                know if serilog is actually
                used. So, this class simulates that. it will replace any text in {curly braces} with an index number.
                "Log {message} to {user}" would turn into => "Log {0} to {1}". Then the format parameters are handled using regular
                .net string.Format.
            </summary>
            <param name="messageBuilder">The message builder.</param>
            <param name="formatParameters">The format parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase">
            <summary>
                Base class for specific log providers.
            </summary>
        </member>
        <member name="F:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.ErrorInitializingProvider">
            <summary>
                Error message should initializing the log provider fail.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.#ctor">
            <summary>
                Initialize an instance of the <see cref="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase"/> class by initializing the references
                to the nested and mapped diagnostics context-obtaining functions.
            </summary>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.GetLogger(System.String)">
            <summary>
            Gets the specified named logger.
            </summary>
            <param name="name">Name of the logger.</param>
            <returns>The logger reference.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.OpenNestedContext(System.String)">
            <summary>
            Opens a nested diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="message">The message to add to the diagnostics context.</param>
            <returns>A disposable that when disposed removes the message from the context.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.OpenMappedContext(System.String,System.Object,System.Boolean)">
            <summary>
            Opens a mapped diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <param name="destructure">Determines whether to call the destructor or not.</param>
            <returns>A disposable that when disposed removes the map from the context.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.GetOpenNdcMethod">
            <summary>
                Returns the provider-specific method to open a nested diagnostics context.
            </summary>
            <returns>A provider-specific method to open a nested diagnostics context.</returns>
        </member>
        <member name="M:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.GetOpenMdcMethod">
            <summary>
                Returns the provider-specific method to open a mapped diagnostics context.
            </summary>
            <returns>A provider-specific method to open a mapped diagnostics context.</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.OpenNdc">
            <summary>
                Delegate defining the signature of the method opening a nested diagnostics context.
            </summary>
            <param name="message">The message to add to the diagnostics context.</param>
            <returns>A disposable that when disposed removes the message from the context.</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LogProviderBase.OpenMdc">
            <summary>
                Delegate defining the signature of the method opening a mapped diagnostics context.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <param name="destructure">Determines whether to call the destructor or not.</param>
            <returns>A disposable that when disposed removes the map from the context.</returns>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LoupeLogProvider.WriteDelegate">
            <summary>
                The form of the Loupe Log.Write method we're using
            </summary>
        </member>
        <member name="P:Adobe.DocumentServices.PDFTools.Logging.LogProviders.LoupeLogProvider.ProviderIsAvailableOverride">
            <summary>
                Gets or sets a value indicating whether [provider is available override]. Used in tests.
            </summary>
            <value>
                <c>true</c> if [provider is available override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Adobe.DocumentServices.PDFTools.Logging.Logger">
            <summary>
            Logger delegate.
            </summary>
            <param name="logLevel">The log level</param>
            <param name="messageFunc">The message function</param>
            <param name="exception">The exception</param>
            <param name="formatParameters">The format parameters</param>
            <returns>A boolean.</returns>
        </member>
    </members>
</doc>
